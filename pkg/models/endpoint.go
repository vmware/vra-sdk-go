// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"io"
	"io/ioutil"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Endpoint Endpoint
//
// An Endpoint is an instance of a DevOps application that connects to Code Stream to provide data for your Pipelines to run, such as a data source, repository, or notification system. Endpoints can be cloud-based or on-premises.
//
// swagger:discriminator Endpoint An Endpoint is an instance of a DevOps application that connects to Code Stream to provide data for your Pipelines to run, such as a data source, repository, or notification system. Endpoints can be cloud-based or on-premises.
type Endpoint interface {
	runtime.Validatable
	runtime.ContextValidatable

	// This field is provided for backward compatibility. Contains the same value as the 'createdAt' field as a UNIX timestamp in microseconds
	// Example: 1568625938000000
	CreateTimeInMicros() int64
	SetCreateTimeInMicros(int64)

	// Partial URL that provides details of the resource.
	// Example: /codestream/api/\u003cprefix\u003e/8365ef3b-8bf3-48aa-bd5d-7113fcff827c
	Link() string
	SetLink(string)

	// Contains project id of the entity
	// Example: abcd-abcd-abcd
	ProjectID() string
	SetProjectID(string)

	// This field is provided for backward compatibility. Contains the same value as the 'updatedAt' field as a UNIX timestamp in microseconds
	// Example: 1568625938000000
	UpdateTimeInMicros() int64
	SetUpdateTimeInMicros(int64)

	// The id of the Cloud Proxy. It is required to connect with Endpoint servers hosted on different network (on-prem). In case of cloud-based Endpoint servers, set the cloud proxy to "Default".
	// Example: c3f5037c-0c94-466d-9220-b7429fa07f50
	CloudProxyID() string
	SetCloudProxyID(string)

	// Date when the entity was created. The date is in ISO 8601 with time zone
	// Example: 2019-09-16 09:25:38.065065+00
	CreatedAt() string
	SetCreatedAt(string)

	// The user that created this entity
	// Example: exampleuser
	CreatedBy() string
	SetCreatedBy(string)

	// A human-friendly description.
	// Required: true
	Description() *string
	SetDescription(*string)

	// The id of this resource.
	// Example: 8365ef3b-8bf3-48aa-bd5d-7113fcff827c
	ID() string
	SetID(string)

	// This type of Endpoint can be created, updated or deleted by admin only. If a restricted Endpoint is consumed in a Pipeline, and that Pipeline is executed by a non-admin user, then the execution will fail at the task which is consuming this restricted Endpoint. Only admin can then resume this Pipeline to make it progress.
	// Example: false
	IsRestricted() bool
	SetIsRestricted(bool)

	// A human-friendly name used as an identifier in APIs that support this option
	// Example: My-Name
	// Required: true
	Name() *string
	SetName(*string)

	// The project this entity belongs to.
	// Example: My-Project
	Project() string
	SetProject(string)

	// Endpoint specific properties.
	Properties() interface{}
	SetProperties(interface{})

	// The type of this Endpoint instance.
	// Example: jenkins
	Type() string
	SetType(string)

	// Date when the entity was last updated. The date is in ISO 8601 with time zone.
	// Example: 2019-09-16 09:25:38.065065+00
	UpdatedAt() string
	SetUpdatedAt(string)

	// The user that last updated this entity
	// Example: exampleuser
	UpdatedBy() string
	SetUpdatedBy(string)

	// Stores the vaidation errors.
	ValidationOutput() interface{}
	SetValidationOutput(interface{})

	// Version of the resource.
	// Example: v1
	Version() string
	SetVersion(string)

	// AdditionalProperties in base type shoud be handled just like regular properties
	// At this moment, the base type property is pushed down to the subtype
}

type endpoint struct {
	createTimeInMicrosField int64

	linkField string

	projectIdField string

	updateTimeInMicrosField int64

	cloudProxyIdField string

	createdAtField string

	createdByField string

	descriptionField *string

	idField string

	isRestrictedField bool

	nameField *string

	projectField string

	propertiesField interface{}

	typeField string

	updatedAtField string

	updatedByField string

	validationOutputField interface{}

	versionField string
}

// CreateTimeInMicros gets the create time in micros of this polymorphic type
func (m *endpoint) CreateTimeInMicros() int64 {
	return m.createTimeInMicrosField
}

// SetCreateTimeInMicros sets the create time in micros of this polymorphic type
func (m *endpoint) SetCreateTimeInMicros(val int64) {
	m.createTimeInMicrosField = val
}

// Link gets the link of this polymorphic type
func (m *endpoint) Link() string {
	return m.linkField
}

// SetLink sets the link of this polymorphic type
func (m *endpoint) SetLink(val string) {
	m.linkField = val
}

// ProjectID gets the project Id of this polymorphic type
func (m *endpoint) ProjectID() string {
	return m.projectIdField
}

// SetProjectID sets the project Id of this polymorphic type
func (m *endpoint) SetProjectID(val string) {
	m.projectIdField = val
}

// UpdateTimeInMicros gets the update time in micros of this polymorphic type
func (m *endpoint) UpdateTimeInMicros() int64 {
	return m.updateTimeInMicrosField
}

// SetUpdateTimeInMicros sets the update time in micros of this polymorphic type
func (m *endpoint) SetUpdateTimeInMicros(val int64) {
	m.updateTimeInMicrosField = val
}

// CloudProxyID gets the cloud proxy Id of this polymorphic type
func (m *endpoint) CloudProxyID() string {
	return m.cloudProxyIdField
}

// SetCloudProxyID sets the cloud proxy Id of this polymorphic type
func (m *endpoint) SetCloudProxyID(val string) {
	m.cloudProxyIdField = val
}

// CreatedAt gets the created at of this polymorphic type
func (m *endpoint) CreatedAt() string {
	return m.createdAtField
}

// SetCreatedAt sets the created at of this polymorphic type
func (m *endpoint) SetCreatedAt(val string) {
	m.createdAtField = val
}

// CreatedBy gets the created by of this polymorphic type
func (m *endpoint) CreatedBy() string {
	return m.createdByField
}

// SetCreatedBy sets the created by of this polymorphic type
func (m *endpoint) SetCreatedBy(val string) {
	m.createdByField = val
}

// Description gets the description of this polymorphic type
func (m *endpoint) Description() *string {
	return m.descriptionField
}

// SetDescription sets the description of this polymorphic type
func (m *endpoint) SetDescription(val *string) {
	m.descriptionField = val
}

// ID gets the id of this polymorphic type
func (m *endpoint) ID() string {
	return m.idField
}

// SetID sets the id of this polymorphic type
func (m *endpoint) SetID(val string) {
	m.idField = val
}

// IsRestricted gets the is restricted of this polymorphic type
func (m *endpoint) IsRestricted() bool {
	return m.isRestrictedField
}

// SetIsRestricted sets the is restricted of this polymorphic type
func (m *endpoint) SetIsRestricted(val bool) {
	m.isRestrictedField = val
}

// Name gets the name of this polymorphic type
func (m *endpoint) Name() *string {
	return m.nameField
}

// SetName sets the name of this polymorphic type
func (m *endpoint) SetName(val *string) {
	m.nameField = val
}

// Project gets the project of this polymorphic type
func (m *endpoint) Project() string {
	return m.projectField
}

// SetProject sets the project of this polymorphic type
func (m *endpoint) SetProject(val string) {
	m.projectField = val
}

// Properties gets the properties of this polymorphic type
func (m *endpoint) Properties() interface{} {
	return m.propertiesField
}

// SetProperties sets the properties of this polymorphic type
func (m *endpoint) SetProperties(val interface{}) {
	m.propertiesField = val
}

// Type gets the type of this polymorphic type
func (m *endpoint) Type() string {
	return m.typeField
}

// SetType sets the type of this polymorphic type
func (m *endpoint) SetType(val string) {
	m.typeField = val
}

// UpdatedAt gets the updated at of this polymorphic type
func (m *endpoint) UpdatedAt() string {
	return m.updatedAtField
}

// SetUpdatedAt sets the updated at of this polymorphic type
func (m *endpoint) SetUpdatedAt(val string) {
	m.updatedAtField = val
}

// UpdatedBy gets the updated by of this polymorphic type
func (m *endpoint) UpdatedBy() string {
	return m.updatedByField
}

// SetUpdatedBy sets the updated by of this polymorphic type
func (m *endpoint) SetUpdatedBy(val string) {
	m.updatedByField = val
}

// ValidationOutput gets the validation output of this polymorphic type
func (m *endpoint) ValidationOutput() interface{} {
	return m.validationOutputField
}

// SetValidationOutput sets the validation output of this polymorphic type
func (m *endpoint) SetValidationOutput(val interface{}) {
	m.validationOutputField = val
}

// Version gets the version of this polymorphic type
func (m *endpoint) Version() string {
	return m.versionField
}

// SetVersion sets the version of this polymorphic type
func (m *endpoint) SetVersion(val string) {
	m.versionField = val
}

// UnmarshalEndpointSlice unmarshals polymorphic slices of Endpoint
func UnmarshalEndpointSlice(reader io.Reader, consumer runtime.Consumer) ([]Endpoint, error) {
	var elements []json.RawMessage
	if err := consumer.Consume(reader, &elements); err != nil {
		return nil, err
	}

	var result []Endpoint
	for _, element := range elements {
		obj, err := unmarshalEndpoint(element, consumer)
		if err != nil {
			return nil, err
		}
		result = append(result, obj)
	}
	return result, nil
}

// UnmarshalEndpoint unmarshals polymorphic Endpoint
func UnmarshalEndpoint(reader io.Reader, consumer runtime.Consumer) (Endpoint, error) {
	// we need to read this twice, so first into a buffer
	data, err := ioutil.ReadAll(reader)
	if err != nil {
		return nil, err
	}
	return unmarshalEndpoint(data, consumer)
}

func unmarshalEndpoint(data []byte, consumer runtime.Consumer) (Endpoint, error) {
	buf := bytes.NewBuffer(data)
	buf2 := bytes.NewBuffer(data)

	// the first time this is read is to fetch the value of the An Endpoint is an instance of a DevOps application that connects to Code Stream to provide data for your Pipelines to run, such as a data source, repository, or notification system. Endpoints can be cloud-based or on-premises. property.
	var getType struct {
		AnEndpointIsAnInstanceOfaDevOpsApplicationThatConnectsToCodeStreamToProvideDataForYourPipelinesToRunSuchAsaDataSourceRepositoryOrNotificationSystemEndpointsCanBeCloudBasedOrOnPremises string `json:"An Endpoint is an instance of a DevOps application that connects to Code Stream to provide data for your Pipelines to run, such as a data source, repository, or notification system. Endpoints can be cloud-based or on-premises."`
	}
	if err := consumer.Consume(buf, &getType); err != nil {
		return nil, err
	}

	if err := validate.RequiredString("An Endpoint is an instance of a DevOps application that connects to Code Stream to provide data for your Pipelines to run, such as a data source, repository, or notification system. Endpoints can be cloud-based or on-premises.", "body", getType.AnEndpointIsAnInstanceOfaDevOpsApplicationThatConnectsToCodeStreamToProvideDataForYourPipelinesToRunSuchAsaDataSourceRepositoryOrNotificationSystemEndpointsCanBeCloudBasedOrOnPremises); err != nil {
		return nil, err
	}

	// The value of An Endpoint is an instance of a DevOps application that connects to Code Stream to provide data for your Pipelines to run, such as a data source, repository, or notification system. Endpoints can be cloud-based or on-premises. is used to determine which type to create and unmarshal the data into
	switch getType.AnEndpointIsAnInstanceOfaDevOpsApplicationThatConnectsToCodeStreamToProvideDataForYourPipelinesToRunSuchAsaDataSourceRepositoryOrNotificationSystemEndpointsCanBeCloudBasedOrOnPremises {
	case "Endpoint":
		var result endpoint
		if err := consumer.Consume(buf2, &result); err != nil {
			return nil, err
		}
		return &result, nil
	}
	return nil, errors.New(422, "invalid An Endpoint is an instance of a DevOps application that connects to Code Stream to provide data for your Pipelines to run, such as a data source, repository, or notification system. Endpoints can be cloud-based or on-premises. value: %q", getType.AnEndpointIsAnInstanceOfaDevOpsApplicationThatConnectsToCodeStreamToProvideDataForYourPipelinesToRunSuchAsaDataSourceRepositoryOrNotificationSystemEndpointsCanBeCloudBasedOrOnPremises)
}

// Validate validates this endpoint
func (m *endpoint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *endpoint) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description()); err != nil {
		return err
	}

	return nil
}

func (m *endpoint) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name()); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this endpoint based on context it is used
func (m *endpoint) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
