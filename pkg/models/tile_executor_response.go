// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TileExecutorResponse TileExecutorResponse
//
// swagger:model TileExecutorResponse
type TileExecutorResponse struct {

	// time taken for the Tile execution to finish.
	Duration int64 `json:"duration,omitempty"`

	// Output properties from the Tile execution.
	Output interface{} `json:"output,omitempty"`

	// Status of the Tile execution.
	// Example: COMPLETED
	// Enum: [CREATED STARTED PAUSED CANCELED COMPLETED FAILED]
	Status string `json:"status,omitempty"`

	// Status message of the Tile execution.
	// Example: Failed to connect to jenkins server endpoint
	StatusMessage string `json:"statusMessage,omitempty"`
}

// Validate validates this tile executor response
func (m *TileExecutorResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var tileExecutorResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATED","STARTED","PAUSED","CANCELED","COMPLETED","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tileExecutorResponseTypeStatusPropEnum = append(tileExecutorResponseTypeStatusPropEnum, v)
	}
}

const (

	// TileExecutorResponseStatusCREATED captures enum value "CREATED"
	TileExecutorResponseStatusCREATED string = "CREATED"

	// TileExecutorResponseStatusSTARTED captures enum value "STARTED"
	TileExecutorResponseStatusSTARTED string = "STARTED"

	// TileExecutorResponseStatusPAUSED captures enum value "PAUSED"
	TileExecutorResponseStatusPAUSED string = "PAUSED"

	// TileExecutorResponseStatusCANCELED captures enum value "CANCELED"
	TileExecutorResponseStatusCANCELED string = "CANCELED"

	// TileExecutorResponseStatusCOMPLETED captures enum value "COMPLETED"
	TileExecutorResponseStatusCOMPLETED string = "COMPLETED"

	// TileExecutorResponseStatusFAILED captures enum value "FAILED"
	TileExecutorResponseStatusFAILED string = "FAILED"
)

// prop value enum
func (m *TileExecutorResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, tileExecutorResponseTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TileExecutorResponse) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this tile executor response based on context it is used
func (m *TileExecutorResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TileExecutorResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TileExecutorResponse) UnmarshalBinary(b []byte) error {
	var res TileExecutorResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
