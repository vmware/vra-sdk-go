// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConfigurationProperty A representation of a configuration property.
//
// swagger:model ConfigurationProperty
type ConfigurationProperty struct {

	// The key of the property.
	// Required: true
	// Enum: [SESSION_TIMEOUT_DURATION_MINUTES RELEASE_IPADDRESS_PERIOD_MINUTES NSXT_RETRY_DURATION_MINUTES]
	Key *string `json:"key"`

	// The value of the property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this configuration property
func (m *ConfigurationProperty) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var configurationPropertyTypeKeyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SESSION_TIMEOUT_DURATION_MINUTES","RELEASE_IPADDRESS_PERIOD_MINUTES","NSXT_RETRY_DURATION_MINUTES"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		configurationPropertyTypeKeyPropEnum = append(configurationPropertyTypeKeyPropEnum, v)
	}
}

const (

	// ConfigurationPropertyKeySESSIONTIMEOUTDURATIONMINUTES captures enum value "SESSION_TIMEOUT_DURATION_MINUTES"
	ConfigurationPropertyKeySESSIONTIMEOUTDURATIONMINUTES string = "SESSION_TIMEOUT_DURATION_MINUTES"

	// ConfigurationPropertyKeyRELEASEIPADDRESSPERIODMINUTES captures enum value "RELEASE_IPADDRESS_PERIOD_MINUTES"
	ConfigurationPropertyKeyRELEASEIPADDRESSPERIODMINUTES string = "RELEASE_IPADDRESS_PERIOD_MINUTES"

	// ConfigurationPropertyKeyNSXTRETRYDURATIONMINUTES captures enum value "NSXT_RETRY_DURATION_MINUTES"
	ConfigurationPropertyKeyNSXTRETRYDURATIONMINUTES string = "NSXT_RETRY_DURATION_MINUTES"
)

// prop value enum
func (m *ConfigurationProperty) validateKeyEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, configurationPropertyTypeKeyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ConfigurationProperty) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", m.Key); err != nil {
		return err
	}

	// value enum
	if err := m.validateKeyEnum("key", "body", *m.Key); err != nil {
		return err
	}

	return nil
}

func (m *ConfigurationProperty) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this configuration property based on context it is used
func (m *ConfigurationProperty) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConfigurationProperty) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConfigurationProperty) UnmarshalBinary(b []byte) error {
	var res ConfigurationProperty
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
