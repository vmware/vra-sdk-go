// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FixedPrice FixedPrice
// swagger:model FixedPrice
type FixedPrice struct {

	// charge period
	// Enum: [HOURLY DAILY WEEKLY MONTHLY]
	ChargePeriod string `json:"chargePeriod,omitempty"`

	// rate
	Rate float64 `json:"rate,omitempty"`
}

// Validate validates this fixed price
func (m *FixedPrice) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChargePeriod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var fixedPriceTypeChargePeriodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HOURLY","DAILY","WEEKLY","MONTHLY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		fixedPriceTypeChargePeriodPropEnum = append(fixedPriceTypeChargePeriodPropEnum, v)
	}
}

const (

	// FixedPriceChargePeriodHOURLY captures enum value "HOURLY"
	FixedPriceChargePeriodHOURLY string = "HOURLY"

	// FixedPriceChargePeriodDAILY captures enum value "DAILY"
	FixedPriceChargePeriodDAILY string = "DAILY"

	// FixedPriceChargePeriodWEEKLY captures enum value "WEEKLY"
	FixedPriceChargePeriodWEEKLY string = "WEEKLY"

	// FixedPriceChargePeriodMONTHLY captures enum value "MONTHLY"
	FixedPriceChargePeriodMONTHLY string = "MONTHLY"
)

// prop value enum
func (m *FixedPrice) validateChargePeriodEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, fixedPriceTypeChargePeriodPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FixedPrice) validateChargePeriod(formats strfmt.Registry) error {

	if swag.IsZero(m.ChargePeriod) { // not required
		return nil
	}

	// value enum
	if err := m.validateChargePeriodEnum("chargePeriod", "body", m.ChargePeriod); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FixedPrice) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FixedPrice) UnmarshalBinary(b []byte) error {
	var res FixedPrice
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
