// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CnTemplateCounterVo cn template counter vo
//
// swagger:model CnTemplateCounterVo
type CnTemplateCounterVo struct {

	// active
	Active bool `json:"active,omitempty"`

	// cn resource type
	// Enum: [COMPUTE NETWORK COMPUTE_STORAGE LOAD_BALANCER RESOURCE_GROUP GATEWAY NAT SECURITY_GROUP]
	CnResourceType string `json:"cnResourceType,omitempty"`

	// current counter
	CurrentCounter int64 `json:"currentCounter,omitempty"`

	// id
	// Format: uuid
	ID strfmt.UUID `json:"id,omitempty"`

	// project Id
	ProjectID string `json:"projectId,omitempty"`
}

// Validate validates this cn template counter vo
func (m *CnTemplateCounterVo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCnResourceType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var cnTemplateCounterVoTypeCnResourceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["COMPUTE","NETWORK","COMPUTE_STORAGE","LOAD_BALANCER","RESOURCE_GROUP","GATEWAY","NAT","SECURITY_GROUP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cnTemplateCounterVoTypeCnResourceTypePropEnum = append(cnTemplateCounterVoTypeCnResourceTypePropEnum, v)
	}
}

const (

	// CnTemplateCounterVoCnResourceTypeCOMPUTE captures enum value "COMPUTE"
	CnTemplateCounterVoCnResourceTypeCOMPUTE string = "COMPUTE"

	// CnTemplateCounterVoCnResourceTypeNETWORK captures enum value "NETWORK"
	CnTemplateCounterVoCnResourceTypeNETWORK string = "NETWORK"

	// CnTemplateCounterVoCnResourceTypeCOMPUTESTORAGE captures enum value "COMPUTE_STORAGE"
	CnTemplateCounterVoCnResourceTypeCOMPUTESTORAGE string = "COMPUTE_STORAGE"

	// CnTemplateCounterVoCnResourceTypeLOADBALANCER captures enum value "LOAD_BALANCER"
	CnTemplateCounterVoCnResourceTypeLOADBALANCER string = "LOAD_BALANCER"

	// CnTemplateCounterVoCnResourceTypeRESOURCEGROUP captures enum value "RESOURCE_GROUP"
	CnTemplateCounterVoCnResourceTypeRESOURCEGROUP string = "RESOURCE_GROUP"

	// CnTemplateCounterVoCnResourceTypeGATEWAY captures enum value "GATEWAY"
	CnTemplateCounterVoCnResourceTypeGATEWAY string = "GATEWAY"

	// CnTemplateCounterVoCnResourceTypeNAT captures enum value "NAT"
	CnTemplateCounterVoCnResourceTypeNAT string = "NAT"

	// CnTemplateCounterVoCnResourceTypeSECURITYGROUP captures enum value "SECURITY_GROUP"
	CnTemplateCounterVoCnResourceTypeSECURITYGROUP string = "SECURITY_GROUP"
)

// prop value enum
func (m *CnTemplateCounterVo) validateCnResourceTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, cnTemplateCounterVoTypeCnResourceTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CnTemplateCounterVo) validateCnResourceType(formats strfmt.Registry) error {
	if swag.IsZero(m.CnResourceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateCnResourceTypeEnum("cnResourceType", "body", m.CnResourceType); err != nil {
		return err
	}

	return nil
}

func (m *CnTemplateCounterVo) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("id", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this cn template counter vo based on context it is used
func (m *CnTemplateCounterVo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CnTemplateCounterVo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CnTemplateCounterVo) UnmarshalBinary(b []byte) error {
	var res CnTemplateCounterVo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
