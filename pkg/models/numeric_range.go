// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NumericRange numeric range
// swagger:model NumericRange
type NumericRange struct {

	// is max inclusive
	IsMaxInclusive bool `json:"isMaxInclusive,omitempty"`

	// is min inclusive
	IsMinInclusive bool `json:"isMinInclusive,omitempty"`

	// max
	Max Number `json:"max,omitempty"`

	// min
	Min Number `json:"min,omitempty"`

	// precision step
	PrecisionStep int32 `json:"precisionStep,omitempty"`

	// type
	// Enum: [LONG STRING BYTES PODO COLLECTION MAP BOOLEAN DOUBLE InternetAddressV4 InternetAddressV6 DATE URI ENUM]
	Type string `json:"type,omitempty"`
}

// Validate validates this numeric range
func (m *NumericRange) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var numericRangeTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LONG","STRING","BYTES","PODO","COLLECTION","MAP","BOOLEAN","DOUBLE","InternetAddressV4","InternetAddressV6","DATE","URI","ENUM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		numericRangeTypeTypePropEnum = append(numericRangeTypeTypePropEnum, v)
	}
}

const (

	// NumericRangeTypeLONG captures enum value "LONG"
	NumericRangeTypeLONG string = "LONG"

	// NumericRangeTypeSTRING captures enum value "STRING"
	NumericRangeTypeSTRING string = "STRING"

	// NumericRangeTypeBYTES captures enum value "BYTES"
	NumericRangeTypeBYTES string = "BYTES"

	// NumericRangeTypePODO captures enum value "PODO"
	NumericRangeTypePODO string = "PODO"

	// NumericRangeTypeCOLLECTION captures enum value "COLLECTION"
	NumericRangeTypeCOLLECTION string = "COLLECTION"

	// NumericRangeTypeMAP captures enum value "MAP"
	NumericRangeTypeMAP string = "MAP"

	// NumericRangeTypeBOOLEAN captures enum value "BOOLEAN"
	NumericRangeTypeBOOLEAN string = "BOOLEAN"

	// NumericRangeTypeDOUBLE captures enum value "DOUBLE"
	NumericRangeTypeDOUBLE string = "DOUBLE"

	// NumericRangeTypeInternetAddressV4 captures enum value "InternetAddressV4"
	NumericRangeTypeInternetAddressV4 string = "InternetAddressV4"

	// NumericRangeTypeInternetAddressV6 captures enum value "InternetAddressV6"
	NumericRangeTypeInternetAddressV6 string = "InternetAddressV6"

	// NumericRangeTypeDATE captures enum value "DATE"
	NumericRangeTypeDATE string = "DATE"

	// NumericRangeTypeURI captures enum value "URI"
	NumericRangeTypeURI string = "URI"

	// NumericRangeTypeENUM captures enum value "ENUM"
	NumericRangeTypeENUM string = "ENUM"
)

// prop value enum
func (m *NumericRange) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, numericRangeTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NumericRange) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NumericRange) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NumericRange) UnmarshalBinary(b []byte) error {
	var res NumericRange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
