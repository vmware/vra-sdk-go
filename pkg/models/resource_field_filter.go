// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ResourceFieldFilter resource field filter
//
// swagger:model ResourceFieldFilter
type ResourceFieldFilter struct {

	// field
	// Enum: [ID NAME STATUS REGION ADDRESS TAG ANY]
	Field string `json:"field,omitempty"`

	// values
	Values []string `json:"values"`
}

// Validate validates this resource field filter
func (m *ResourceFieldFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateField(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var resourceFieldFilterTypeFieldPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ID","NAME","STATUS","REGION","ADDRESS","TAG","ANY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		resourceFieldFilterTypeFieldPropEnum = append(resourceFieldFilterTypeFieldPropEnum, v)
	}
}

const (

	// ResourceFieldFilterFieldID captures enum value "ID"
	ResourceFieldFilterFieldID string = "ID"

	// ResourceFieldFilterFieldNAME captures enum value "NAME"
	ResourceFieldFilterFieldNAME string = "NAME"

	// ResourceFieldFilterFieldSTATUS captures enum value "STATUS"
	ResourceFieldFilterFieldSTATUS string = "STATUS"

	// ResourceFieldFilterFieldREGION captures enum value "REGION"
	ResourceFieldFilterFieldREGION string = "REGION"

	// ResourceFieldFilterFieldADDRESS captures enum value "ADDRESS"
	ResourceFieldFilterFieldADDRESS string = "ADDRESS"

	// ResourceFieldFilterFieldTAG captures enum value "TAG"
	ResourceFieldFilterFieldTAG string = "TAG"

	// ResourceFieldFilterFieldANY captures enum value "ANY"
	ResourceFieldFilterFieldANY string = "ANY"
)

// prop value enum
func (m *ResourceFieldFilter) validateFieldEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, resourceFieldFilterTypeFieldPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ResourceFieldFilter) validateField(formats strfmt.Registry) error {
	if swag.IsZero(m.Field) { // not required
		return nil
	}

	// value enum
	if err := m.validateFieldEnum("field", "body", m.Field); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this resource field filter based on context it is used
func (m *ResourceFieldFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResourceFieldFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceFieldFilter) UnmarshalBinary(b []byte) error {
	var res ResourceFieldFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
