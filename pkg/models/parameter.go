// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Parameter Parameter
//
// swagger:model Parameter
type Parameter struct {

	// description
	Description string `json:"description,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// param def
	// Enum: [QUERY BODY CONSUMES PRODUCES RESPONSE PATH]
	ParamDef string `json:"paramDef,omitempty"`

	// required
	Required bool `json:"required,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this parameter
func (m *Parameter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParamDef(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var parameterTypeParamDefPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["QUERY","BODY","CONSUMES","PRODUCES","RESPONSE","PATH"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		parameterTypeParamDefPropEnum = append(parameterTypeParamDefPropEnum, v)
	}
}

const (

	// ParameterParamDefQUERY captures enum value "QUERY"
	ParameterParamDefQUERY string = "QUERY"

	// ParameterParamDefBODY captures enum value "BODY"
	ParameterParamDefBODY string = "BODY"

	// ParameterParamDefCONSUMES captures enum value "CONSUMES"
	ParameterParamDefCONSUMES string = "CONSUMES"

	// ParameterParamDefPRODUCES captures enum value "PRODUCES"
	ParameterParamDefPRODUCES string = "PRODUCES"

	// ParameterParamDefRESPONSE captures enum value "RESPONSE"
	ParameterParamDefRESPONSE string = "RESPONSE"

	// ParameterParamDefPATH captures enum value "PATH"
	ParameterParamDefPATH string = "PATH"
)

// prop value enum
func (m *Parameter) validateParamDefEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, parameterTypeParamDefPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Parameter) validateParamDef(formats strfmt.Registry) error {
	if swag.IsZero(m.ParamDef) { // not required
		return nil
	}

	// value enum
	if err := m.validateParamDefEnum("paramDef", "body", m.ParamDef); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this parameter based on context it is used
func (m *Parameter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Parameter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Parameter) UnmarshalBinary(b []byte) error {
	var res Parameter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
