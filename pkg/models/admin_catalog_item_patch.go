// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AdminCatalogItemPatch AdminCatalogItemPatch
//
// # A patch to update attributes for a catalog item
//
// swagger:model AdminCatalogItemPatch
type AdminCatalogItemPatch struct {

	// Max number of instances that can be requested at a time
	// Maximum: 127
	// Minimum: -128
	BulkRequestLimit *int32 `json:"bulkRequestLimit,omitempty"`

	// form id
	FormID string `json:"formId,omitempty"`

	// icon id
	IconID string `json:"iconId,omitempty"`
}

// Validate validates this admin catalog item patch
func (m *AdminCatalogItemPatch) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBulkRequestLimit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdminCatalogItemPatch) validateBulkRequestLimit(formats strfmt.Registry) error {
	if swag.IsZero(m.BulkRequestLimit) { // not required
		return nil
	}

	if err := validate.MinimumInt("bulkRequestLimit", "body", int64(*m.BulkRequestLimit), -128, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("bulkRequestLimit", "body", int64(*m.BulkRequestLimit), 127, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this admin catalog item patch based on context it is used
func (m *AdminCatalogItemPatch) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AdminCatalogItemPatch) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdminCatalogItemPatch) UnmarshalBinary(b []byte) error {
	var res AdminCatalogItemPatch
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
