// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateNetworkInterfaceSpecification update network interface specification
//
// swagger:model UpdateNetworkInterfaceSpecification
type UpdateNetworkInterfaceSpecification struct {

	// Set IPv4 address for the machine network interface. The change will not propagate to cloud endpoint for provisioned machines.
	Address string `json:"address,omitempty"`

	// Additional custom properties that may be used to extend the machine. Internal custom properties (for example, prefixed with: "__") can not be updated.
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// Describes the network interface of the machine within the scope of your organization and is not propagated to the cloud
	Description string `json:"description,omitempty"`

	// Network interface name used during machine network interface provisioning. This property only takes effect if it is set before machine provisioning starts. The change will not propagate to cloud endpoint for provisioned machines.
	Name string `json:"name,omitempty"`
}

// Validate validates this update network interface specification
func (m *UpdateNetworkInterfaceSpecification) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update network interface specification based on context it is used
func (m *UpdateNetworkInterfaceSpecification) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateNetworkInterfaceSpecification) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateNetworkInterfaceSpecification) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkInterfaceSpecification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
