// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MeteringAssignmentStrategy MeteringAssignmentStrategy
//
// Metering Assignment Strategy
// swagger:model MeteringAssignmentStrategy
type MeteringAssignmentStrategy struct {

	// Metering Policy Assignment entityType(Strategy)
	// Enum: [ALL PROJECT CLOUDZONE]
	EntityType string `json:"entityType,omitempty"`
}

// Validate validates this metering assignment strategy
func (m *MeteringAssignmentStrategy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEntityType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var meteringAssignmentStrategyTypeEntityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ALL","PROJECT","CLOUDZONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		meteringAssignmentStrategyTypeEntityTypePropEnum = append(meteringAssignmentStrategyTypeEntityTypePropEnum, v)
	}
}

const (

	// MeteringAssignmentStrategyEntityTypeALL captures enum value "ALL"
	MeteringAssignmentStrategyEntityTypeALL string = "ALL"

	// MeteringAssignmentStrategyEntityTypePROJECT captures enum value "PROJECT"
	MeteringAssignmentStrategyEntityTypePROJECT string = "PROJECT"

	// MeteringAssignmentStrategyEntityTypeCLOUDZONE captures enum value "CLOUDZONE"
	MeteringAssignmentStrategyEntityTypeCLOUDZONE string = "CLOUDZONE"
)

// prop value enum
func (m *MeteringAssignmentStrategy) validateEntityTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, meteringAssignmentStrategyTypeEntityTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MeteringAssignmentStrategy) validateEntityType(formats strfmt.Registry) error {

	if swag.IsZero(m.EntityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateEntityTypeEnum("entityType", "body", m.EntityType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MeteringAssignmentStrategy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MeteringAssignmentStrategy) UnmarshalBinary(b []byte) error {
	var res MeteringAssignmentStrategy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
