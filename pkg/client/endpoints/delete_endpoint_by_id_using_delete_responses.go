// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeleteEndpointByIDUsingDELETEReader is a Reader for the DeleteEndpointByIDUsingDELETE structure.
type DeleteEndpointByIDUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEndpointByIDUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteEndpointByIDUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteEndpointByIDUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteEndpointByIDUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEndpointByIDUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteEndpointByIDUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEndpointByIDUsingDELETEOK creates a DeleteEndpointByIDUsingDELETEOK with default headers values
func NewDeleteEndpointByIDUsingDELETEOK() *DeleteEndpointByIDUsingDELETEOK {
	return &DeleteEndpointByIDUsingDELETEOK{}
}

/*
DeleteEndpointByIDUsingDELETEOK describes a response with status code 200, with default header values.

'Success' with the deleted Endpoint
*/
type DeleteEndpointByIDUsingDELETEOK struct {
	Payload models.Endpoint
}

// IsSuccess returns true when this delete endpoint by Id using d e l e t e o k response has a 2xx status code
func (o *DeleteEndpointByIDUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete endpoint by Id using d e l e t e o k response has a 3xx status code
func (o *DeleteEndpointByIDUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete endpoint by Id using d e l e t e o k response has a 4xx status code
func (o *DeleteEndpointByIDUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete endpoint by Id using d e l e t e o k response has a 5xx status code
func (o *DeleteEndpointByIDUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete endpoint by Id using d e l e t e o k response a status code equal to that given
func (o *DeleteEndpointByIDUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteEndpointByIDUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeleteEndpointByIDUsingDELETEOK) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeleteEndpointByIDUsingDELETEOK) GetPayload() models.Endpoint {
	return o.Payload
}

func (o *DeleteEndpointByIDUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalEndpoint(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewDeleteEndpointByIDUsingDELETEUnauthorized creates a DeleteEndpointByIDUsingDELETEUnauthorized with default headers values
func NewDeleteEndpointByIDUsingDELETEUnauthorized() *DeleteEndpointByIDUsingDELETEUnauthorized {
	return &DeleteEndpointByIDUsingDELETEUnauthorized{}
}

/*
DeleteEndpointByIDUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeleteEndpointByIDUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete endpoint by Id using d e l e t e unauthorized response has a 2xx status code
func (o *DeleteEndpointByIDUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete endpoint by Id using d e l e t e unauthorized response has a 3xx status code
func (o *DeleteEndpointByIDUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete endpoint by Id using d e l e t e unauthorized response has a 4xx status code
func (o *DeleteEndpointByIDUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete endpoint by Id using d e l e t e unauthorized response has a 5xx status code
func (o *DeleteEndpointByIDUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete endpoint by Id using d e l e t e unauthorized response a status code equal to that given
func (o *DeleteEndpointByIDUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteEndpointByIDUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETEUnauthorized ", 401)
}

func (o *DeleteEndpointByIDUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETEUnauthorized ", 401)
}

func (o *DeleteEndpointByIDUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEndpointByIDUsingDELETEForbidden creates a DeleteEndpointByIDUsingDELETEForbidden with default headers values
func NewDeleteEndpointByIDUsingDELETEForbidden() *DeleteEndpointByIDUsingDELETEForbidden {
	return &DeleteEndpointByIDUsingDELETEForbidden{}
}

/*
DeleteEndpointByIDUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteEndpointByIDUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete endpoint by Id using d e l e t e forbidden response has a 2xx status code
func (o *DeleteEndpointByIDUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete endpoint by Id using d e l e t e forbidden response has a 3xx status code
func (o *DeleteEndpointByIDUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete endpoint by Id using d e l e t e forbidden response has a 4xx status code
func (o *DeleteEndpointByIDUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete endpoint by Id using d e l e t e forbidden response has a 5xx status code
func (o *DeleteEndpointByIDUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete endpoint by Id using d e l e t e forbidden response a status code equal to that given
func (o *DeleteEndpointByIDUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteEndpointByIDUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETEForbidden ", 403)
}

func (o *DeleteEndpointByIDUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETEForbidden ", 403)
}

func (o *DeleteEndpointByIDUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEndpointByIDUsingDELETENotFound creates a DeleteEndpointByIDUsingDELETENotFound with default headers values
func NewDeleteEndpointByIDUsingDELETENotFound() *DeleteEndpointByIDUsingDELETENotFound {
	return &DeleteEndpointByIDUsingDELETENotFound{}
}

/*
DeleteEndpointByIDUsingDELETENotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteEndpointByIDUsingDELETENotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete endpoint by Id using d e l e t e not found response has a 2xx status code
func (o *DeleteEndpointByIDUsingDELETENotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete endpoint by Id using d e l e t e not found response has a 3xx status code
func (o *DeleteEndpointByIDUsingDELETENotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete endpoint by Id using d e l e t e not found response has a 4xx status code
func (o *DeleteEndpointByIDUsingDELETENotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete endpoint by Id using d e l e t e not found response has a 5xx status code
func (o *DeleteEndpointByIDUsingDELETENotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete endpoint by Id using d e l e t e not found response a status code equal to that given
func (o *DeleteEndpointByIDUsingDELETENotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteEndpointByIDUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteEndpointByIDUsingDELETENotFound) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteEndpointByIDUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteEndpointByIDUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEndpointByIDUsingDELETEInternalServerError creates a DeleteEndpointByIDUsingDELETEInternalServerError with default headers values
func NewDeleteEndpointByIDUsingDELETEInternalServerError() *DeleteEndpointByIDUsingDELETEInternalServerError {
	return &DeleteEndpointByIDUsingDELETEInternalServerError{}
}

/*
DeleteEndpointByIDUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteEndpointByIDUsingDELETEInternalServerError struct {
}

// IsSuccess returns true when this delete endpoint by Id using d e l e t e internal server error response has a 2xx status code
func (o *DeleteEndpointByIDUsingDELETEInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete endpoint by Id using d e l e t e internal server error response has a 3xx status code
func (o *DeleteEndpointByIDUsingDELETEInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete endpoint by Id using d e l e t e internal server error response has a 4xx status code
func (o *DeleteEndpointByIDUsingDELETEInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete endpoint by Id using d e l e t e internal server error response has a 5xx status code
func (o *DeleteEndpointByIDUsingDELETEInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete endpoint by Id using d e l e t e internal server error response a status code equal to that given
func (o *DeleteEndpointByIDUsingDELETEInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteEndpointByIDUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETEInternalServerError ", 500)
}

func (o *DeleteEndpointByIDUsingDELETEInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{id}][%d] deleteEndpointByIdUsingDELETEInternalServerError ", 500)
}

func (o *DeleteEndpointByIDUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
