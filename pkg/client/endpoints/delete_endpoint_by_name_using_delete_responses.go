// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeleteEndpointByNameUsingDELETEReader is a Reader for the DeleteEndpointByNameUsingDELETE structure.
type DeleteEndpointByNameUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEndpointByNameUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteEndpointByNameUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteEndpointByNameUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteEndpointByNameUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEndpointByNameUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteEndpointByNameUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteEndpointByNameUsingDELETEOK creates a DeleteEndpointByNameUsingDELETEOK with default headers values
func NewDeleteEndpointByNameUsingDELETEOK() *DeleteEndpointByNameUsingDELETEOK {
	return &DeleteEndpointByNameUsingDELETEOK{}
}

/* DeleteEndpointByNameUsingDELETEOK describes a response with status code 200, with default header values.

'Success' with the deleted Endpoint
*/
type DeleteEndpointByNameUsingDELETEOK struct {
	Payload models.Endpoint
}

func (o *DeleteEndpointByNameUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{project}/{name}][%d] deleteEndpointByNameUsingDELETEOK  %+v", 200, o.Payload)
}
func (o *DeleteEndpointByNameUsingDELETEOK) GetPayload() models.Endpoint {
	return o.Payload
}

func (o *DeleteEndpointByNameUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalEndpoint(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewDeleteEndpointByNameUsingDELETEUnauthorized creates a DeleteEndpointByNameUsingDELETEUnauthorized with default headers values
func NewDeleteEndpointByNameUsingDELETEUnauthorized() *DeleteEndpointByNameUsingDELETEUnauthorized {
	return &DeleteEndpointByNameUsingDELETEUnauthorized{}
}

/* DeleteEndpointByNameUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeleteEndpointByNameUsingDELETEUnauthorized struct {
}

func (o *DeleteEndpointByNameUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{project}/{name}][%d] deleteEndpointByNameUsingDELETEUnauthorized ", 401)
}

func (o *DeleteEndpointByNameUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEndpointByNameUsingDELETEForbidden creates a DeleteEndpointByNameUsingDELETEForbidden with default headers values
func NewDeleteEndpointByNameUsingDELETEForbidden() *DeleteEndpointByNameUsingDELETEForbidden {
	return &DeleteEndpointByNameUsingDELETEForbidden{}
}

/* DeleteEndpointByNameUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteEndpointByNameUsingDELETEForbidden struct {
}

func (o *DeleteEndpointByNameUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{project}/{name}][%d] deleteEndpointByNameUsingDELETEForbidden ", 403)
}

func (o *DeleteEndpointByNameUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEndpointByNameUsingDELETENotFound creates a DeleteEndpointByNameUsingDELETENotFound with default headers values
func NewDeleteEndpointByNameUsingDELETENotFound() *DeleteEndpointByNameUsingDELETENotFound {
	return &DeleteEndpointByNameUsingDELETENotFound{}
}

/* DeleteEndpointByNameUsingDELETENotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteEndpointByNameUsingDELETENotFound struct {
	Payload *models.Error
}

func (o *DeleteEndpointByNameUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{project}/{name}][%d] deleteEndpointByNameUsingDELETENotFound  %+v", 404, o.Payload)
}
func (o *DeleteEndpointByNameUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteEndpointByNameUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEndpointByNameUsingDELETEInternalServerError creates a DeleteEndpointByNameUsingDELETEInternalServerError with default headers values
func NewDeleteEndpointByNameUsingDELETEInternalServerError() *DeleteEndpointByNameUsingDELETEInternalServerError {
	return &DeleteEndpointByNameUsingDELETEInternalServerError{}
}

/* DeleteEndpointByNameUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteEndpointByNameUsingDELETEInternalServerError struct {
}

func (o *DeleteEndpointByNameUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/endpoints/{project}/{name}][%d] deleteEndpointByNameUsingDELETEInternalServerError ", 500)
}

func (o *DeleteEndpointByNameUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
