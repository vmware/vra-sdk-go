// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetAllUsingGET2Reader is a Reader for the GetAllUsingGET2 structure.
type GetAllUsingGET2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllUsingGET2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllUsingGET2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllUsingGET2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllUsingGET2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllUsingGET2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllUsingGET2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllUsingGET2OK creates a GetAllUsingGET2OK with default headers values
func NewGetAllUsingGET2OK() *GetAllUsingGET2OK {
	return &GetAllUsingGET2OK{}
}

/* GetAllUsingGET2OK describes a response with status code 200, with default header values.

'Success' with the requested Endpoints
*/
type GetAllUsingGET2OK struct {
	Payload *models.Endpoints
}

func (o *GetAllUsingGET2OK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/endpoints][%d] getAllUsingGET2OK  %+v", 200, o.Payload)
}
func (o *GetAllUsingGET2OK) GetPayload() *models.Endpoints {
	return o.Payload
}

func (o *GetAllUsingGET2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Endpoints)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsingGET2Unauthorized creates a GetAllUsingGET2Unauthorized with default headers values
func NewGetAllUsingGET2Unauthorized() *GetAllUsingGET2Unauthorized {
	return &GetAllUsingGET2Unauthorized{}
}

/* GetAllUsingGET2Unauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetAllUsingGET2Unauthorized struct {
}

func (o *GetAllUsingGET2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/endpoints][%d] getAllUsingGET2Unauthorized ", 401)
}

func (o *GetAllUsingGET2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsingGET2Forbidden creates a GetAllUsingGET2Forbidden with default headers values
func NewGetAllUsingGET2Forbidden() *GetAllUsingGET2Forbidden {
	return &GetAllUsingGET2Forbidden{}
}

/* GetAllUsingGET2Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllUsingGET2Forbidden struct {
}

func (o *GetAllUsingGET2Forbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/endpoints][%d] getAllUsingGET2Forbidden ", 403)
}

func (o *GetAllUsingGET2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsingGET2NotFound creates a GetAllUsingGET2NotFound with default headers values
func NewGetAllUsingGET2NotFound() *GetAllUsingGET2NotFound {
	return &GetAllUsingGET2NotFound{}
}

/* GetAllUsingGET2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllUsingGET2NotFound struct {
	Payload *models.Error
}

func (o *GetAllUsingGET2NotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/endpoints][%d] getAllUsingGET2NotFound  %+v", 404, o.Payload)
}
func (o *GetAllUsingGET2NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllUsingGET2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsingGET2InternalServerError creates a GetAllUsingGET2InternalServerError with default headers values
func NewGetAllUsingGET2InternalServerError() *GetAllUsingGET2InternalServerError {
	return &GetAllUsingGET2InternalServerError{}
}

/* GetAllUsingGET2InternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetAllUsingGET2InternalServerError struct {
}

func (o *GetAllUsingGET2InternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/endpoints][%d] getAllUsingGET2InternalServerError ", 500)
}

func (o *GetAllUsingGET2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
