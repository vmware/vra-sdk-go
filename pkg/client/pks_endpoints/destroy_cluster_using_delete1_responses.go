// Code generated by go-swagger; DO NOT EDIT.

package pks_endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DestroyClusterUsingDELETE1Reader is a Reader for the DestroyClusterUsingDELETE1 structure.
type DestroyClusterUsingDELETE1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DestroyClusterUsingDELETE1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDestroyClusterUsingDELETE1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDestroyClusterUsingDELETE1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDestroyClusterUsingDELETE1OK creates a DestroyClusterUsingDELETE1OK with default headers values
func NewDestroyClusterUsingDELETE1OK() *DestroyClusterUsingDELETE1OK {
	return &DestroyClusterUsingDELETE1OK{}
}

/*
DestroyClusterUsingDELETE1OK describes a response with status code 200, with default header values.

OK
*/
type DestroyClusterUsingDELETE1OK struct {
}

// IsSuccess returns true when this destroy cluster using d e l e t e1 o k response has a 2xx status code
func (o *DestroyClusterUsingDELETE1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this destroy cluster using d e l e t e1 o k response has a 3xx status code
func (o *DestroyClusterUsingDELETE1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy cluster using d e l e t e1 o k response has a 4xx status code
func (o *DestroyClusterUsingDELETE1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this destroy cluster using d e l e t e1 o k response has a 5xx status code
func (o *DestroyClusterUsingDELETE1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy cluster using d e l e t e1 o k response a status code equal to that given
func (o *DestroyClusterUsingDELETE1OK) IsCode(code int) bool {
	return code == 200
}

func (o *DestroyClusterUsingDELETE1OK) Error() string {
	return fmt.Sprintf("[DELETE /cmx/api/resources/pks/endpoints/{id}/clusters/{clusterId}][%d] destroyClusterUsingDELETE1OK ", 200)
}

func (o *DestroyClusterUsingDELETE1OK) String() string {
	return fmt.Sprintf("[DELETE /cmx/api/resources/pks/endpoints/{id}/clusters/{clusterId}][%d] destroyClusterUsingDELETE1OK ", 200)
}

func (o *DestroyClusterUsingDELETE1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDestroyClusterUsingDELETE1Forbidden creates a DestroyClusterUsingDELETE1Forbidden with default headers values
func NewDestroyClusterUsingDELETE1Forbidden() *DestroyClusterUsingDELETE1Forbidden {
	return &DestroyClusterUsingDELETE1Forbidden{}
}

/*
DestroyClusterUsingDELETE1Forbidden describes a response with status code 403, with default header values.

Forbidden, the user lacks permissions
*/
type DestroyClusterUsingDELETE1Forbidden struct {
}

// IsSuccess returns true when this destroy cluster using d e l e t e1 forbidden response has a 2xx status code
func (o *DestroyClusterUsingDELETE1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this destroy cluster using d e l e t e1 forbidden response has a 3xx status code
func (o *DestroyClusterUsingDELETE1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy cluster using d e l e t e1 forbidden response has a 4xx status code
func (o *DestroyClusterUsingDELETE1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this destroy cluster using d e l e t e1 forbidden response has a 5xx status code
func (o *DestroyClusterUsingDELETE1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy cluster using d e l e t e1 forbidden response a status code equal to that given
func (o *DestroyClusterUsingDELETE1Forbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DestroyClusterUsingDELETE1Forbidden) Error() string {
	return fmt.Sprintf("[DELETE /cmx/api/resources/pks/endpoints/{id}/clusters/{clusterId}][%d] destroyClusterUsingDELETE1Forbidden ", 403)
}

func (o *DestroyClusterUsingDELETE1Forbidden) String() string {
	return fmt.Sprintf("[DELETE /cmx/api/resources/pks/endpoints/{id}/clusters/{clusterId}][%d] destroyClusterUsingDELETE1Forbidden ", 403)
}

func (o *DestroyClusterUsingDELETE1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
