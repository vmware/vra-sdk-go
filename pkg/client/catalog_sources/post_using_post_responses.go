// Code generated by go-swagger; DO NOT EDIT.

package catalog_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// PostUsingPOSTReader is a Reader for the PostUsingPOST structure.
type PostUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPostUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostUsingPOSTOK creates a PostUsingPOSTOK with default headers values
func NewPostUsingPOSTOK() *PostUsingPOSTOK {
	return &PostUsingPOSTOK{}
}

/*PostUsingPOSTOK handles this case with default header values.

Validation is ok
*/
type PostUsingPOSTOK struct {
	Payload *models.CatalogSource
}

func (o *PostUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/sources][%d] postUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *PostUsingPOSTOK) GetPayload() *models.CatalogSource {
	return o.Payload
}

func (o *PostUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsingPOSTCreated creates a PostUsingPOSTCreated with default headers values
func NewPostUsingPOSTCreated() *PostUsingPOSTCreated {
	return &PostUsingPOSTCreated{}
}

/*PostUsingPOSTCreated handles this case with default header values.

Created
*/
type PostUsingPOSTCreated struct {
	Payload *models.CatalogSource
}

func (o *PostUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/sources][%d] postUsingPOSTCreated  %+v", 201, o.Payload)
}

func (o *PostUsingPOSTCreated) GetPayload() *models.CatalogSource {
	return o.Payload
}

func (o *PostUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsingPOSTBadRequest creates a PostUsingPOSTBadRequest with default headers values
func NewPostUsingPOSTBadRequest() *PostUsingPOSTBadRequest {
	return &PostUsingPOSTBadRequest{}
}

/*PostUsingPOSTBadRequest handles this case with default header values.

Bad Request
*/
type PostUsingPOSTBadRequest struct {
}

func (o *PostUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/sources][%d] postUsingPOSTBadRequest ", 400)
}

func (o *PostUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsingPOSTUnauthorized creates a PostUsingPOSTUnauthorized with default headers values
func NewPostUsingPOSTUnauthorized() *PostUsingPOSTUnauthorized {
	return &PostUsingPOSTUnauthorized{}
}

/*PostUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type PostUsingPOSTUnauthorized struct {
}

func (o *PostUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/sources][%d] postUsingPOSTUnauthorized ", 401)
}

func (o *PostUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsingPOSTForbidden creates a PostUsingPOSTForbidden with default headers values
func NewPostUsingPOSTForbidden() *PostUsingPOSTForbidden {
	return &PostUsingPOSTForbidden{}
}

/*PostUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type PostUsingPOSTForbidden struct {
}

func (o *PostUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/sources][%d] postUsingPOSTForbidden ", 403)
}

func (o *PostUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsingPOSTNotFound creates a PostUsingPOSTNotFound with default headers values
func NewPostUsingPOSTNotFound() *PostUsingPOSTNotFound {
	return &PostUsingPOSTNotFound{}
}

/*PostUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type PostUsingPOSTNotFound struct {
}

func (o *PostUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/sources][%d] postUsingPOSTNotFound ", 404)
}

func (o *PostUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
