// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteNetworkParams creates a new DeleteNetworkParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteNetworkParams() *DeleteNetworkParams {
	return &DeleteNetworkParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteNetworkParamsWithTimeout creates a new DeleteNetworkParams object
// with the ability to set a timeout on a request.
func NewDeleteNetworkParamsWithTimeout(timeout time.Duration) *DeleteNetworkParams {
	return &DeleteNetworkParams{
		timeout: timeout,
	}
}

// NewDeleteNetworkParamsWithContext creates a new DeleteNetworkParams object
// with the ability to set a context for a request.
func NewDeleteNetworkParamsWithContext(ctx context.Context) *DeleteNetworkParams {
	return &DeleteNetworkParams{
		Context: ctx,
	}
}

// NewDeleteNetworkParamsWithHTTPClient creates a new DeleteNetworkParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteNetworkParamsWithHTTPClient(client *http.Client) *DeleteNetworkParams {
	return &DeleteNetworkParams{
		HTTPClient: client,
	}
}

/*
DeleteNetworkParams contains all the parameters to send to the API endpoint

	for the delete network operation.

	Typically these are written to a http.Request.
*/
type DeleteNetworkParams struct {

	/* APIVersion.

	   The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about
	*/
	APIVersion *string

	/* ForceDelete.

	   Controls whether this is a force delete operation. If true, best effort is made for deleting this network. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.
	*/
	ForceDelete *bool

	/* ID.

	   The ID of the network.
	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete network params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteNetworkParams) WithDefaults() *DeleteNetworkParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete network params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteNetworkParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete network params
func (o *DeleteNetworkParams) WithTimeout(timeout time.Duration) *DeleteNetworkParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete network params
func (o *DeleteNetworkParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete network params
func (o *DeleteNetworkParams) WithContext(ctx context.Context) *DeleteNetworkParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete network params
func (o *DeleteNetworkParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete network params
func (o *DeleteNetworkParams) WithHTTPClient(client *http.Client) *DeleteNetworkParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete network params
func (o *DeleteNetworkParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the delete network params
func (o *DeleteNetworkParams) WithAPIVersion(aPIVersion *string) *DeleteNetworkParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the delete network params
func (o *DeleteNetworkParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithForceDelete adds the forceDelete to the delete network params
func (o *DeleteNetworkParams) WithForceDelete(forceDelete *bool) *DeleteNetworkParams {
	o.SetForceDelete(forceDelete)
	return o
}

// SetForceDelete adds the forceDelete to the delete network params
func (o *DeleteNetworkParams) SetForceDelete(forceDelete *bool) {
	o.ForceDelete = forceDelete
}

// WithID adds the id to the delete network params
func (o *DeleteNetworkParams) WithID(id string) *DeleteNetworkParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete network params
func (o *DeleteNetworkParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteNetworkParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string

		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {

			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}
	}

	if o.ForceDelete != nil {

		// query param forceDelete
		var qrForceDelete bool

		if o.ForceDelete != nil {
			qrForceDelete = *o.ForceDelete
		}
		qForceDelete := swag.FormatBool(qrForceDelete)
		if qForceDelete != "" {

			if err := r.SetQueryParam("forceDelete", qForceDelete); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
