// Code generated by go-swagger; DO NOT EDIT.

package catalog_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UnpublishCatalogItemReader is a Reader for the UnpublishCatalogItem structure.
type UnpublishCatalogItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnpublishCatalogItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnpublishCatalogItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUnpublishCatalogItemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUnpublishCatalogItemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUnpublishCatalogItemOK creates a UnpublishCatalogItemOK with default headers values
func NewUnpublishCatalogItemOK() *UnpublishCatalogItemOK {
	return &UnpublishCatalogItemOK{}
}

/*
UnpublishCatalogItemOK describes a response with status code 200, with default header values.

OK
*/
type UnpublishCatalogItemOK struct {
}

// IsSuccess returns true when this unpublish catalog item o k response has a 2xx status code
func (o *UnpublishCatalogItemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this unpublish catalog item o k response has a 3xx status code
func (o *UnpublishCatalogItemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpublish catalog item o k response has a 4xx status code
func (o *UnpublishCatalogItemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this unpublish catalog item o k response has a 5xx status code
func (o *UnpublishCatalogItemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this unpublish catalog item o k response a status code equal to that given
func (o *UnpublishCatalogItemOK) IsCode(code int) bool {
	return code == 200
}

func (o *UnpublishCatalogItemOK) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{catalogItemId}:unpublish][%d] unpublishCatalogItemOK ", 200)
}

func (o *UnpublishCatalogItemOK) String() string {
	return fmt.Sprintf("[POST /catalog/api/items/{catalogItemId}:unpublish][%d] unpublishCatalogItemOK ", 200)
}

func (o *UnpublishCatalogItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnpublishCatalogItemUnauthorized creates a UnpublishCatalogItemUnauthorized with default headers values
func NewUnpublishCatalogItemUnauthorized() *UnpublishCatalogItemUnauthorized {
	return &UnpublishCatalogItemUnauthorized{}
}

/*
UnpublishCatalogItemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UnpublishCatalogItemUnauthorized struct {
}

// IsSuccess returns true when this unpublish catalog item unauthorized response has a 2xx status code
func (o *UnpublishCatalogItemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unpublish catalog item unauthorized response has a 3xx status code
func (o *UnpublishCatalogItemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpublish catalog item unauthorized response has a 4xx status code
func (o *UnpublishCatalogItemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this unpublish catalog item unauthorized response has a 5xx status code
func (o *UnpublishCatalogItemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this unpublish catalog item unauthorized response a status code equal to that given
func (o *UnpublishCatalogItemUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UnpublishCatalogItemUnauthorized) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{catalogItemId}:unpublish][%d] unpublishCatalogItemUnauthorized ", 401)
}

func (o *UnpublishCatalogItemUnauthorized) String() string {
	return fmt.Sprintf("[POST /catalog/api/items/{catalogItemId}:unpublish][%d] unpublishCatalogItemUnauthorized ", 401)
}

func (o *UnpublishCatalogItemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnpublishCatalogItemForbidden creates a UnpublishCatalogItemForbidden with default headers values
func NewUnpublishCatalogItemForbidden() *UnpublishCatalogItemForbidden {
	return &UnpublishCatalogItemForbidden{}
}

/*
UnpublishCatalogItemForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type UnpublishCatalogItemForbidden struct {
}

// IsSuccess returns true when this unpublish catalog item forbidden response has a 2xx status code
func (o *UnpublishCatalogItemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unpublish catalog item forbidden response has a 3xx status code
func (o *UnpublishCatalogItemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unpublish catalog item forbidden response has a 4xx status code
func (o *UnpublishCatalogItemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this unpublish catalog item forbidden response has a 5xx status code
func (o *UnpublishCatalogItemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this unpublish catalog item forbidden response a status code equal to that given
func (o *UnpublishCatalogItemForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UnpublishCatalogItemForbidden) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{catalogItemId}:unpublish][%d] unpublishCatalogItemForbidden ", 403)
}

func (o *UnpublishCatalogItemForbidden) String() string {
	return fmt.Sprintf("[POST /catalog/api/items/{catalogItemId}:unpublish][%d] unpublishCatalogItemForbidden ", 403)
}

func (o *UnpublishCatalogItemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
