// Code generated by go-swagger; DO NOT EDIT.

package catalog_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// PublishCatalogItemReader is a Reader for the PublishCatalogItem structure.
type PublishCatalogItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublishCatalogItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPublishCatalogItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPublishCatalogItemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPublishCatalogItemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPublishCatalogItemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPublishCatalogItemOK creates a PublishCatalogItemOK with default headers values
func NewPublishCatalogItemOK() *PublishCatalogItemOK {
	return &PublishCatalogItemOK{}
}

/*
PublishCatalogItemOK describes a response with status code 200, with default header values.

OK
*/
type PublishCatalogItemOK struct {
	Payload *models.CatalogItem
}

// IsSuccess returns true when this publish catalog item o k response has a 2xx status code
func (o *PublishCatalogItemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this publish catalog item o k response has a 3xx status code
func (o *PublishCatalogItemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish catalog item o k response has a 4xx status code
func (o *PublishCatalogItemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this publish catalog item o k response has a 5xx status code
func (o *PublishCatalogItemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this publish catalog item o k response a status code equal to that given
func (o *PublishCatalogItemOK) IsCode(code int) bool {
	return code == 200
}

func (o *PublishCatalogItemOK) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items:publish][%d] publishCatalogItemOK  %+v", 200, o.Payload)
}

func (o *PublishCatalogItemOK) String() string {
	return fmt.Sprintf("[POST /catalog/api/items:publish][%d] publishCatalogItemOK  %+v", 200, o.Payload)
}

func (o *PublishCatalogItemOK) GetPayload() *models.CatalogItem {
	return o.Payload
}

func (o *PublishCatalogItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublishCatalogItemBadRequest creates a PublishCatalogItemBadRequest with default headers values
func NewPublishCatalogItemBadRequest() *PublishCatalogItemBadRequest {
	return &PublishCatalogItemBadRequest{}
}

/*
PublishCatalogItemBadRequest describes a response with status code 400, with default header values.

Invalid request - bad data
*/
type PublishCatalogItemBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this publish catalog item bad request response has a 2xx status code
func (o *PublishCatalogItemBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this publish catalog item bad request response has a 3xx status code
func (o *PublishCatalogItemBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish catalog item bad request response has a 4xx status code
func (o *PublishCatalogItemBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this publish catalog item bad request response has a 5xx status code
func (o *PublishCatalogItemBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this publish catalog item bad request response a status code equal to that given
func (o *PublishCatalogItemBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PublishCatalogItemBadRequest) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items:publish][%d] publishCatalogItemBadRequest  %+v", 400, o.Payload)
}

func (o *PublishCatalogItemBadRequest) String() string {
	return fmt.Sprintf("[POST /catalog/api/items:publish][%d] publishCatalogItemBadRequest  %+v", 400, o.Payload)
}

func (o *PublishCatalogItemBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PublishCatalogItemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublishCatalogItemUnauthorized creates a PublishCatalogItemUnauthorized with default headers values
func NewPublishCatalogItemUnauthorized() *PublishCatalogItemUnauthorized {
	return &PublishCatalogItemUnauthorized{}
}

/*
PublishCatalogItemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PublishCatalogItemUnauthorized struct {
}

// IsSuccess returns true when this publish catalog item unauthorized response has a 2xx status code
func (o *PublishCatalogItemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this publish catalog item unauthorized response has a 3xx status code
func (o *PublishCatalogItemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish catalog item unauthorized response has a 4xx status code
func (o *PublishCatalogItemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this publish catalog item unauthorized response has a 5xx status code
func (o *PublishCatalogItemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this publish catalog item unauthorized response a status code equal to that given
func (o *PublishCatalogItemUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PublishCatalogItemUnauthorized) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items:publish][%d] publishCatalogItemUnauthorized ", 401)
}

func (o *PublishCatalogItemUnauthorized) String() string {
	return fmt.Sprintf("[POST /catalog/api/items:publish][%d] publishCatalogItemUnauthorized ", 401)
}

func (o *PublishCatalogItemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishCatalogItemForbidden creates a PublishCatalogItemForbidden with default headers values
func NewPublishCatalogItemForbidden() *PublishCatalogItemForbidden {
	return &PublishCatalogItemForbidden{}
}

/*
PublishCatalogItemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PublishCatalogItemForbidden struct {
}

// IsSuccess returns true when this publish catalog item forbidden response has a 2xx status code
func (o *PublishCatalogItemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this publish catalog item forbidden response has a 3xx status code
func (o *PublishCatalogItemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this publish catalog item forbidden response has a 4xx status code
func (o *PublishCatalogItemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this publish catalog item forbidden response has a 5xx status code
func (o *PublishCatalogItemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this publish catalog item forbidden response a status code equal to that given
func (o *PublishCatalogItemForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PublishCatalogItemForbidden) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items:publish][%d] publishCatalogItemForbidden ", 403)
}

func (o *PublishCatalogItemForbidden) String() string {
	return fmt.Sprintf("[POST /catalog/api/items:publish][%d] publishCatalogItemForbidden ", 403)
}

func (o *PublishCatalogItemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
