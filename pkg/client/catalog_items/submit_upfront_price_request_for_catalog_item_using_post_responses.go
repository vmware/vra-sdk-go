// Code generated by go-swagger; DO NOT EDIT.

package catalog_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// SubmitUpfrontPriceRequestForCatalogItemUsingPOSTReader is a Reader for the SubmitUpfrontPriceRequestForCatalogItemUsingPOST structure.
type SubmitUpfrontPriceRequestForCatalogItemUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK creates a SubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK with default headers values
func NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK() *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK {
	return &SubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK{}
}

/*SubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK handles this case with default header values.

OK
*/
type SubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK struct {
	Payload *models.CatalogItemUpfrontPriceResponse
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{id}/upfront-prices][%d] submitUpfrontPriceRequestForCatalogItemUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK) GetPayload() *models.CatalogItemUpfrontPriceResponse {
	return o.Payload
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogItemUpfrontPriceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized creates a SubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized with default headers values
func NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized() *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized {
	return &SubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized{}
}

/*SubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type SubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized struct {
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{id}/upfront-prices][%d] submitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized ", 401)
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound creates a SubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound with default headers values
func NewSubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound() *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound {
	return &SubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound{}
}

/*SubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type SubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound struct {
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{id}/upfront-prices][%d] submitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound ", 404)
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
