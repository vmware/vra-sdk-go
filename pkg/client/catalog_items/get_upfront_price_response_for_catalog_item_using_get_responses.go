// Code generated by go-swagger; DO NOT EDIT.

package catalog_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetUpfrontPriceResponseForCatalogItemUsingGETReader is a Reader for the GetUpfrontPriceResponseForCatalogItemUsingGET structure.
type GetUpfrontPriceResponseForCatalogItemUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUpfrontPriceResponseForCatalogItemUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUpfrontPriceResponseForCatalogItemUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUpfrontPriceResponseForCatalogItemUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUpfrontPriceResponseForCatalogItemUsingGETOK creates a GetUpfrontPriceResponseForCatalogItemUsingGETOK with default headers values
func NewGetUpfrontPriceResponseForCatalogItemUsingGETOK() *GetUpfrontPriceResponseForCatalogItemUsingGETOK {
	return &GetUpfrontPriceResponseForCatalogItemUsingGETOK{}
}

/*GetUpfrontPriceResponseForCatalogItemUsingGETOK handles this case with default header values.

OK
*/
type GetUpfrontPriceResponseForCatalogItemUsingGETOK struct {
	Payload *models.CatalogItemUpfrontPriceResponse
}

func (o *GetUpfrontPriceResponseForCatalogItemUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /catalog/api/items/{id}/upfront-prices/{upfrontPriceId}][%d] getUpfrontPriceResponseForCatalogItemUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUpfrontPriceResponseForCatalogItemUsingGETOK) GetPayload() *models.CatalogItemUpfrontPriceResponse {
	return o.Payload
}

func (o *GetUpfrontPriceResponseForCatalogItemUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogItemUpfrontPriceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized creates a GetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized with default headers values
func NewGetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized() *GetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized {
	return &GetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized{}
}

/*GetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized struct {
}

func (o *GetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /catalog/api/items/{id}/upfront-prices/{upfrontPriceId}][%d] getUpfrontPriceResponseForCatalogItemUsingGETUnauthorized ", 401)
}

func (o *GetUpfrontPriceResponseForCatalogItemUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUpfrontPriceResponseForCatalogItemUsingGETNotFound creates a GetUpfrontPriceResponseForCatalogItemUsingGETNotFound with default headers values
func NewGetUpfrontPriceResponseForCatalogItemUsingGETNotFound() *GetUpfrontPriceResponseForCatalogItemUsingGETNotFound {
	return &GetUpfrontPriceResponseForCatalogItemUsingGETNotFound{}
}

/*GetUpfrontPriceResponseForCatalogItemUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetUpfrontPriceResponseForCatalogItemUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetUpfrontPriceResponseForCatalogItemUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /catalog/api/items/{id}/upfront-prices/{upfrontPriceId}][%d] getUpfrontPriceResponseForCatalogItemUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetUpfrontPriceResponseForCatalogItemUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUpfrontPriceResponseForCatalogItemUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
