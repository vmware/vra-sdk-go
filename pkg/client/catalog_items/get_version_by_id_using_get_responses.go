// Code generated by go-swagger; DO NOT EDIT.

package catalog_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetVersionByIDUsingGETReader is a Reader for the GetVersionByIDUsingGET structure.
type GetVersionByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVersionByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVersionByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVersionByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVersionByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVersionByIDUsingGETOK creates a GetVersionByIDUsingGETOK with default headers values
func NewGetVersionByIDUsingGETOK() *GetVersionByIDUsingGETOK {
	return &GetVersionByIDUsingGETOK{}
}

/*GetVersionByIDUsingGETOK handles this case with default header values.

OK
*/
type GetVersionByIDUsingGETOK struct {
	Payload *models.CatalogItemVersion
}

func (o *GetVersionByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /catalog/api/items/{id}/versions/{versionId}][%d] getVersionByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetVersionByIDUsingGETOK) GetPayload() *models.CatalogItemVersion {
	return o.Payload
}

func (o *GetVersionByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogItemVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVersionByIDUsingGETUnauthorized creates a GetVersionByIDUsingGETUnauthorized with default headers values
func NewGetVersionByIDUsingGETUnauthorized() *GetVersionByIDUsingGETUnauthorized {
	return &GetVersionByIDUsingGETUnauthorized{}
}

/*GetVersionByIDUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetVersionByIDUsingGETUnauthorized struct {
}

func (o *GetVersionByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /catalog/api/items/{id}/versions/{versionId}][%d] getVersionByIdUsingGETUnauthorized ", 401)
}

func (o *GetVersionByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVersionByIDUsingGETNotFound creates a GetVersionByIDUsingGETNotFound with default headers values
func NewGetVersionByIDUsingGETNotFound() *GetVersionByIDUsingGETNotFound {
	return &GetVersionByIDUsingGETNotFound{}
}

/*GetVersionByIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetVersionByIDUsingGETNotFound struct {
}

func (o *GetVersionByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /catalog/api/items/{id}/versions/{versionId}][%d] getVersionByIdUsingGETNotFound ", 404)
}

func (o *GetVersionByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
