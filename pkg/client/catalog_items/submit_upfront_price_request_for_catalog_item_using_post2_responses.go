// Code generated by go-swagger; DO NOT EDIT.

package catalog_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Reader is a Reader for the SubmitUpfrontPriceRequestForCatalogItemUsingPOST2 structure.
type SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK creates a SubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK with default headers values
func NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK() *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK {
	return &SubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK{}
}

/* SubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK describes a response with status code 200, with default header values.

OK
*/
type SubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK struct {
	Payload *models.CatalogItemUpfrontPriceResponse
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{id}/upfront-prices][%d] submitUpfrontPriceRequestForCatalogItemUsingPOST2OK  %+v", 200, o.Payload)
}
func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK) GetPayload() *models.CatalogItemUpfrontPriceResponse {
	return o.Payload
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogItemUpfrontPriceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized creates a SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized with default headers values
func NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized() *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized {
	return &SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized{}
}

/* SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized struct {
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{id}/upfront-prices][%d] submitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized ", 401)
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound creates a SubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound with default headers values
func NewSubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound() *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound {
	return &SubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound{}
}

/* SubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type SubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound struct {
	Payload *models.Error
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound) Error() string {
	return fmt.Sprintf("[POST /catalog/api/items/{id}/upfront-prices][%d] submitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound  %+v", 404, o.Payload)
}
func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SubmitUpfrontPriceRequestForCatalogItemUsingPOST2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
