// Code generated by go-swagger; DO NOT EDIT.

package load_balancer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetLoadBalancerReader is a Reader for the GetLoadBalancer structure.
type GetLoadBalancerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLoadBalancerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLoadBalancerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetLoadBalancerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLoadBalancerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLoadBalancerOK creates a GetLoadBalancerOK with default headers values
func NewGetLoadBalancerOK() *GetLoadBalancerOK {
	return &GetLoadBalancerOK{}
}

/*
GetLoadBalancerOK describes a response with status code 200, with default header values.

successful operation
*/
type GetLoadBalancerOK struct {
	Payload *models.LoadBalancer
}

// IsSuccess returns true when this get load balancer o k response has a 2xx status code
func (o *GetLoadBalancerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get load balancer o k response has a 3xx status code
func (o *GetLoadBalancerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get load balancer o k response has a 4xx status code
func (o *GetLoadBalancerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get load balancer o k response has a 5xx status code
func (o *GetLoadBalancerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get load balancer o k response a status code equal to that given
func (o *GetLoadBalancerOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLoadBalancerOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/load-balancers/{id}][%d] getLoadBalancerOK  %+v", 200, o.Payload)
}

func (o *GetLoadBalancerOK) String() string {
	return fmt.Sprintf("[GET /iaas/api/load-balancers/{id}][%d] getLoadBalancerOK  %+v", 200, o.Payload)
}

func (o *GetLoadBalancerOK) GetPayload() *models.LoadBalancer {
	return o.Payload
}

func (o *GetLoadBalancerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoadBalancer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLoadBalancerForbidden creates a GetLoadBalancerForbidden with default headers values
func NewGetLoadBalancerForbidden() *GetLoadBalancerForbidden {
	return &GetLoadBalancerForbidden{}
}

/*
GetLoadBalancerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetLoadBalancerForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this get load balancer forbidden response has a 2xx status code
func (o *GetLoadBalancerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get load balancer forbidden response has a 3xx status code
func (o *GetLoadBalancerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get load balancer forbidden response has a 4xx status code
func (o *GetLoadBalancerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get load balancer forbidden response has a 5xx status code
func (o *GetLoadBalancerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get load balancer forbidden response a status code equal to that given
func (o *GetLoadBalancerForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetLoadBalancerForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/load-balancers/{id}][%d] getLoadBalancerForbidden  %+v", 403, o.Payload)
}

func (o *GetLoadBalancerForbidden) String() string {
	return fmt.Sprintf("[GET /iaas/api/load-balancers/{id}][%d] getLoadBalancerForbidden  %+v", 403, o.Payload)
}

func (o *GetLoadBalancerForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetLoadBalancerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLoadBalancerNotFound creates a GetLoadBalancerNotFound with default headers values
func NewGetLoadBalancerNotFound() *GetLoadBalancerNotFound {
	return &GetLoadBalancerNotFound{}
}

/*
GetLoadBalancerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLoadBalancerNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get load balancer not found response has a 2xx status code
func (o *GetLoadBalancerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get load balancer not found response has a 3xx status code
func (o *GetLoadBalancerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get load balancer not found response has a 4xx status code
func (o *GetLoadBalancerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get load balancer not found response has a 5xx status code
func (o *GetLoadBalancerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get load balancer not found response a status code equal to that given
func (o *GetLoadBalancerNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLoadBalancerNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/load-balancers/{id}][%d] getLoadBalancerNotFound  %+v", 404, o.Payload)
}

func (o *GetLoadBalancerNotFound) String() string {
	return fmt.Sprintf("[GET /iaas/api/load-balancers/{id}][%d] getLoadBalancerNotFound  %+v", 404, o.Payload)
}

func (o *GetLoadBalancerNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLoadBalancerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
