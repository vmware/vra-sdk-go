// Code generated by go-swagger; DO NOT EDIT.

package load_balancer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// ScaleLoadBalancerReader is a Reader for the ScaleLoadBalancer structure.
type ScaleLoadBalancerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScaleLoadBalancerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewScaleLoadBalancerAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewScaleLoadBalancerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewScaleLoadBalancerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewScaleLoadBalancerAccepted creates a ScaleLoadBalancerAccepted with default headers values
func NewScaleLoadBalancerAccepted() *ScaleLoadBalancerAccepted {
	return &ScaleLoadBalancerAccepted{}
}

/*ScaleLoadBalancerAccepted handles this case with default header values.

successful operation
*/
type ScaleLoadBalancerAccepted struct {
	Payload *models.RequestTracker
}

func (o *ScaleLoadBalancerAccepted) Error() string {
	return fmt.Sprintf("[POST /iaas/api/load-balancers/{id}/operations/scale][%d] scaleLoadBalancerAccepted  %+v", 202, o.Payload)
}

func (o *ScaleLoadBalancerAccepted) GetPayload() *models.RequestTracker {
	return o.Payload
}

func (o *ScaleLoadBalancerAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScaleLoadBalancerForbidden creates a ScaleLoadBalancerForbidden with default headers values
func NewScaleLoadBalancerForbidden() *ScaleLoadBalancerForbidden {
	return &ScaleLoadBalancerForbidden{}
}

/*ScaleLoadBalancerForbidden handles this case with default header values.

Forbidden
*/
type ScaleLoadBalancerForbidden struct {
}

func (o *ScaleLoadBalancerForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/load-balancers/{id}/operations/scale][%d] scaleLoadBalancerForbidden ", 403)
}

func (o *ScaleLoadBalancerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewScaleLoadBalancerNotFound creates a ScaleLoadBalancerNotFound with default headers values
func NewScaleLoadBalancerNotFound() *ScaleLoadBalancerNotFound {
	return &ScaleLoadBalancerNotFound{}
}

/*ScaleLoadBalancerNotFound handles this case with default header values.

Not Found
*/
type ScaleLoadBalancerNotFound struct {
	Payload *models.Error
}

func (o *ScaleLoadBalancerNotFound) Error() string {
	return fmt.Sprintf("[POST /iaas/api/load-balancers/{id}/operations/scale][%d] scaleLoadBalancerNotFound  %+v", 404, o.Payload)
}

func (o *ScaleLoadBalancerNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScaleLoadBalancerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
