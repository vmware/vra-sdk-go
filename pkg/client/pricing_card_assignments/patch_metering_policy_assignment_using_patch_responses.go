// Code generated by go-swagger; DO NOT EDIT.

package pricing_card_assignments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// PatchMeteringPolicyAssignmentUsingPATCHReader is a Reader for the PatchMeteringPolicyAssignmentUsingPATCH structure.
type PatchMeteringPolicyAssignmentUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchMeteringPolicyAssignmentUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchMeteringPolicyAssignmentUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchMeteringPolicyAssignmentUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchMeteringPolicyAssignmentUsingPATCHOK creates a PatchMeteringPolicyAssignmentUsingPATCHOK with default headers values
func NewPatchMeteringPolicyAssignmentUsingPATCHOK() *PatchMeteringPolicyAssignmentUsingPATCHOK {
	return &PatchMeteringPolicyAssignmentUsingPATCHOK{}
}

/*PatchMeteringPolicyAssignmentUsingPATCHOK handles this case with default header values.

OK
*/
type PatchMeteringPolicyAssignmentUsingPATCHOK struct {
	Payload *models.MeteringPolicyAssignment
}

func (o *PatchMeteringPolicyAssignmentUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /price/api/private/pricing-card-assignments/{id}][%d] patchMeteringPolicyAssignmentUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *PatchMeteringPolicyAssignmentUsingPATCHOK) GetPayload() *models.MeteringPolicyAssignment {
	return o.Payload
}

func (o *PatchMeteringPolicyAssignmentUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MeteringPolicyAssignment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchMeteringPolicyAssignmentUsingPATCHUnauthorized creates a PatchMeteringPolicyAssignmentUsingPATCHUnauthorized with default headers values
func NewPatchMeteringPolicyAssignmentUsingPATCHUnauthorized() *PatchMeteringPolicyAssignmentUsingPATCHUnauthorized {
	return &PatchMeteringPolicyAssignmentUsingPATCHUnauthorized{}
}

/*PatchMeteringPolicyAssignmentUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchMeteringPolicyAssignmentUsingPATCHUnauthorized struct {
}

func (o *PatchMeteringPolicyAssignmentUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /price/api/private/pricing-card-assignments/{id}][%d] patchMeteringPolicyAssignmentUsingPATCHUnauthorized ", 401)
}

func (o *PatchMeteringPolicyAssignmentUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
