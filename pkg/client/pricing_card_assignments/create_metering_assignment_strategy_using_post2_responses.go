// Code generated by go-swagger; DO NOT EDIT.

package pricing_card_assignments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// CreateMeteringAssignmentStrategyUsingPOST2Reader is a Reader for the CreateMeteringAssignmentStrategyUsingPOST2 structure.
type CreateMeteringAssignmentStrategyUsingPOST2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateMeteringAssignmentStrategyUsingPOST2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateMeteringAssignmentStrategyUsingPOST2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateMeteringAssignmentStrategyUsingPOST2Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateMeteringAssignmentStrategyUsingPOST2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateMeteringAssignmentStrategyUsingPOST2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateMeteringAssignmentStrategyUsingPOST2OK creates a CreateMeteringAssignmentStrategyUsingPOST2OK with default headers values
func NewCreateMeteringAssignmentStrategyUsingPOST2OK() *CreateMeteringAssignmentStrategyUsingPOST2OK {
	return &CreateMeteringAssignmentStrategyUsingPOST2OK{}
}

/*
CreateMeteringAssignmentStrategyUsingPOST2OK describes a response with status code 200, with default header values.

OK
*/
type CreateMeteringAssignmentStrategyUsingPOST2OK struct {
	Payload *models.MeteringAssignmentStrategy
}

// IsSuccess returns true when this create metering assignment strategy using p o s t2 o k response has a 2xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create metering assignment strategy using p o s t2 o k response has a 3xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create metering assignment strategy using p o s t2 o k response has a 4xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create metering assignment strategy using p o s t2 o k response has a 5xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this create metering assignment strategy using p o s t2 o k response a status code equal to that given
func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) Error() string {
	return fmt.Sprintf("[POST /price/api/private/pricing-card-assignments/strategy][%d] createMeteringAssignmentStrategyUsingPOST2OK  %+v", 200, o.Payload)
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) String() string {
	return fmt.Sprintf("[POST /price/api/private/pricing-card-assignments/strategy][%d] createMeteringAssignmentStrategyUsingPOST2OK  %+v", 200, o.Payload)
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) GetPayload() *models.MeteringAssignmentStrategy {
	return o.Payload
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MeteringAssignmentStrategy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMeteringAssignmentStrategyUsingPOST2Created creates a CreateMeteringAssignmentStrategyUsingPOST2Created with default headers values
func NewCreateMeteringAssignmentStrategyUsingPOST2Created() *CreateMeteringAssignmentStrategyUsingPOST2Created {
	return &CreateMeteringAssignmentStrategyUsingPOST2Created{}
}

/*
CreateMeteringAssignmentStrategyUsingPOST2Created describes a response with status code 201, with default header values.

Created
*/
type CreateMeteringAssignmentStrategyUsingPOST2Created struct {
	Payload *models.MeteringAssignmentStrategy
}

// IsSuccess returns true when this create metering assignment strategy using p o s t2 created response has a 2xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create metering assignment strategy using p o s t2 created response has a 3xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create metering assignment strategy using p o s t2 created response has a 4xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create metering assignment strategy using p o s t2 created response has a 5xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create metering assignment strategy using p o s t2 created response a status code equal to that given
func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) IsCode(code int) bool {
	return code == 201
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) Error() string {
	return fmt.Sprintf("[POST /price/api/private/pricing-card-assignments/strategy][%d] createMeteringAssignmentStrategyUsingPOST2Created  %+v", 201, o.Payload)
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) String() string {
	return fmt.Sprintf("[POST /price/api/private/pricing-card-assignments/strategy][%d] createMeteringAssignmentStrategyUsingPOST2Created  %+v", 201, o.Payload)
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) GetPayload() *models.MeteringAssignmentStrategy {
	return o.Payload
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MeteringAssignmentStrategy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMeteringAssignmentStrategyUsingPOST2Unauthorized creates a CreateMeteringAssignmentStrategyUsingPOST2Unauthorized with default headers values
func NewCreateMeteringAssignmentStrategyUsingPOST2Unauthorized() *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized {
	return &CreateMeteringAssignmentStrategyUsingPOST2Unauthorized{}
}

/*
CreateMeteringAssignmentStrategyUsingPOST2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateMeteringAssignmentStrategyUsingPOST2Unauthorized struct {
}

// IsSuccess returns true when this create metering assignment strategy using p o s t2 unauthorized response has a 2xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create metering assignment strategy using p o s t2 unauthorized response has a 3xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create metering assignment strategy using p o s t2 unauthorized response has a 4xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create metering assignment strategy using p o s t2 unauthorized response has a 5xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create metering assignment strategy using p o s t2 unauthorized response a status code equal to that given
func (o *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized) Error() string {
	return fmt.Sprintf("[POST /price/api/private/pricing-card-assignments/strategy][%d] createMeteringAssignmentStrategyUsingPOST2Unauthorized ", 401)
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized) String() string {
	return fmt.Sprintf("[POST /price/api/private/pricing-card-assignments/strategy][%d] createMeteringAssignmentStrategyUsingPOST2Unauthorized ", 401)
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateMeteringAssignmentStrategyUsingPOST2Forbidden creates a CreateMeteringAssignmentStrategyUsingPOST2Forbidden with default headers values
func NewCreateMeteringAssignmentStrategyUsingPOST2Forbidden() *CreateMeteringAssignmentStrategyUsingPOST2Forbidden {
	return &CreateMeteringAssignmentStrategyUsingPOST2Forbidden{}
}

/*
CreateMeteringAssignmentStrategyUsingPOST2Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateMeteringAssignmentStrategyUsingPOST2Forbidden struct {
}

// IsSuccess returns true when this create metering assignment strategy using p o s t2 forbidden response has a 2xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create metering assignment strategy using p o s t2 forbidden response has a 3xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create metering assignment strategy using p o s t2 forbidden response has a 4xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create metering assignment strategy using p o s t2 forbidden response has a 5xx status code
func (o *CreateMeteringAssignmentStrategyUsingPOST2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create metering assignment strategy using p o s t2 forbidden response a status code equal to that given
func (o *CreateMeteringAssignmentStrategyUsingPOST2Forbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Forbidden) Error() string {
	return fmt.Sprintf("[POST /price/api/private/pricing-card-assignments/strategy][%d] createMeteringAssignmentStrategyUsingPOST2Forbidden ", 403)
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Forbidden) String() string {
	return fmt.Sprintf("[POST /price/api/private/pricing-card-assignments/strategy][%d] createMeteringAssignmentStrategyUsingPOST2Forbidden ", 403)
}

func (o *CreateMeteringAssignmentStrategyUsingPOST2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
