// Code generated by go-swagger; DO NOT EDIT.

package blueprint_terraform_integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetTerraformConfigurationSourceCommitListUsingGETReader is a Reader for the GetTerraformConfigurationSourceCommitListUsingGET structure.
type GetTerraformConfigurationSourceCommitListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTerraformConfigurationSourceCommitListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTerraformConfigurationSourceCommitListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTerraformConfigurationSourceCommitListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTerraformConfigurationSourceCommitListUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTerraformConfigurationSourceCommitListUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTerraformConfigurationSourceCommitListUsingGETOK creates a GetTerraformConfigurationSourceCommitListUsingGETOK with default headers values
func NewGetTerraformConfigurationSourceCommitListUsingGETOK() *GetTerraformConfigurationSourceCommitListUsingGETOK {
	return &GetTerraformConfigurationSourceCommitListUsingGETOK{}
}

/*
GetTerraformConfigurationSourceCommitListUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetTerraformConfigurationSourceCommitListUsingGETOK struct {
	Payload *models.PageOfCommitDetails
}

// IsSuccess returns true when this get terraform configuration source commit list using g e t o k response has a 2xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get terraform configuration source commit list using g e t o k response has a 3xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform configuration source commit list using g e t o k response has a 4xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get terraform configuration source commit list using g e t o k response has a 5xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform configuration source commit list using g e t o k response a status code equal to that given
func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) GetPayload() *models.PageOfCommitDetails {
	return o.Payload
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfCommitDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformConfigurationSourceCommitListUsingGETBadRequest creates a GetTerraformConfigurationSourceCommitListUsingGETBadRequest with default headers values
func NewGetTerraformConfigurationSourceCommitListUsingGETBadRequest() *GetTerraformConfigurationSourceCommitListUsingGETBadRequest {
	return &GetTerraformConfigurationSourceCommitListUsingGETBadRequest{}
}

/*
GetTerraformConfigurationSourceCommitListUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTerraformConfigurationSourceCommitListUsingGETBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get terraform configuration source commit list using g e t bad request response has a 2xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform configuration source commit list using g e t bad request response has a 3xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform configuration source commit list using g e t bad request response has a 4xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform configuration source commit list using g e t bad request response has a 5xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform configuration source commit list using g e t bad request response a status code equal to that given
func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformConfigurationSourceCommitListUsingGETUnauthorized creates a GetTerraformConfigurationSourceCommitListUsingGETUnauthorized with default headers values
func NewGetTerraformConfigurationSourceCommitListUsingGETUnauthorized() *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized {
	return &GetTerraformConfigurationSourceCommitListUsingGETUnauthorized{}
}

/*
GetTerraformConfigurationSourceCommitListUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTerraformConfigurationSourceCommitListUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get terraform configuration source commit list using g e t unauthorized response has a 2xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform configuration source commit list using g e t unauthorized response has a 3xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform configuration source commit list using g e t unauthorized response has a 4xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform configuration source commit list using g e t unauthorized response has a 5xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform configuration source commit list using g e t unauthorized response a status code equal to that given
func (o *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGETUnauthorized ", 401)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGETUnauthorized ", 401)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTerraformConfigurationSourceCommitListUsingGETForbidden creates a GetTerraformConfigurationSourceCommitListUsingGETForbidden with default headers values
func NewGetTerraformConfigurationSourceCommitListUsingGETForbidden() *GetTerraformConfigurationSourceCommitListUsingGETForbidden {
	return &GetTerraformConfigurationSourceCommitListUsingGETForbidden{}
}

/*
GetTerraformConfigurationSourceCommitListUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTerraformConfigurationSourceCommitListUsingGETForbidden struct {
}

// IsSuccess returns true when this get terraform configuration source commit list using g e t forbidden response has a 2xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform configuration source commit list using g e t forbidden response has a 3xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform configuration source commit list using g e t forbidden response has a 4xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform configuration source commit list using g e t forbidden response has a 5xx status code
func (o *GetTerraformConfigurationSourceCommitListUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform configuration source commit list using g e t forbidden response a status code equal to that given
func (o *GetTerraformConfigurationSourceCommitListUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGETForbidden ", 403)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprint-integrations/terraform/get-configuration-source-commits][%d] getTerraformConfigurationSourceCommitListUsingGETForbidden ", 403)
}

func (o *GetTerraformConfigurationSourceCommitListUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
