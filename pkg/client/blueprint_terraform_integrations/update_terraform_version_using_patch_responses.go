// Code generated by go-swagger; DO NOT EDIT.

package blueprint_terraform_integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateTerraformVersionUsingPATCHReader is a Reader for the UpdateTerraformVersionUsingPATCH structure.
type UpdateTerraformVersionUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTerraformVersionUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTerraformVersionUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateTerraformVersionUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateTerraformVersionUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTerraformVersionUsingPATCHNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateTerraformVersionUsingPATCHOK creates a UpdateTerraformVersionUsingPATCHOK with default headers values
func NewUpdateTerraformVersionUsingPATCHOK() *UpdateTerraformVersionUsingPATCHOK {
	return &UpdateTerraformVersionUsingPATCHOK{}
}

/* UpdateTerraformVersionUsingPATCHOK describes a response with status code 200, with default header values.

OK
*/
type UpdateTerraformVersionUsingPATCHOK struct {
	Payload *models.TerraformVersion
}

func (o *UpdateTerraformVersionUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /blueprint/api/blueprint-integrations/terraform/versions/{versionId}][%d] updateTerraformVersionUsingPATCHOK  %+v", 200, o.Payload)
}
func (o *UpdateTerraformVersionUsingPATCHOK) GetPayload() *models.TerraformVersion {
	return o.Payload
}

func (o *UpdateTerraformVersionUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TerraformVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTerraformVersionUsingPATCHUnauthorized creates a UpdateTerraformVersionUsingPATCHUnauthorized with default headers values
func NewUpdateTerraformVersionUsingPATCHUnauthorized() *UpdateTerraformVersionUsingPATCHUnauthorized {
	return &UpdateTerraformVersionUsingPATCHUnauthorized{}
}

/* UpdateTerraformVersionUsingPATCHUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateTerraformVersionUsingPATCHUnauthorized struct {
}

func (o *UpdateTerraformVersionUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /blueprint/api/blueprint-integrations/terraform/versions/{versionId}][%d] updateTerraformVersionUsingPATCHUnauthorized ", 401)
}

func (o *UpdateTerraformVersionUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTerraformVersionUsingPATCHForbidden creates a UpdateTerraformVersionUsingPATCHForbidden with default headers values
func NewUpdateTerraformVersionUsingPATCHForbidden() *UpdateTerraformVersionUsingPATCHForbidden {
	return &UpdateTerraformVersionUsingPATCHForbidden{}
}

/* UpdateTerraformVersionUsingPATCHForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateTerraformVersionUsingPATCHForbidden struct {
}

func (o *UpdateTerraformVersionUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /blueprint/api/blueprint-integrations/terraform/versions/{versionId}][%d] updateTerraformVersionUsingPATCHForbidden ", 403)
}

func (o *UpdateTerraformVersionUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTerraformVersionUsingPATCHNotFound creates a UpdateTerraformVersionUsingPATCHNotFound with default headers values
func NewUpdateTerraformVersionUsingPATCHNotFound() *UpdateTerraformVersionUsingPATCHNotFound {
	return &UpdateTerraformVersionUsingPATCHNotFound{}
}

/* UpdateTerraformVersionUsingPATCHNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateTerraformVersionUsingPATCHNotFound struct {
	Payload *models.Error
}

func (o *UpdateTerraformVersionUsingPATCHNotFound) Error() string {
	return fmt.Sprintf("[PATCH /blueprint/api/blueprint-integrations/terraform/versions/{versionId}][%d] updateTerraformVersionUsingPATCHNotFound  %+v", 404, o.Payload)
}
func (o *UpdateTerraformVersionUsingPATCHNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateTerraformVersionUsingPATCHNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
