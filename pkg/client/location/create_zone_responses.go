// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// CreateZoneReader is a Reader for the CreateZone structure.
type CreateZoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateZoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateZoneCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateZoneBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateZoneForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateZoneCreated creates a CreateZoneCreated with default headers values
func NewCreateZoneCreated() *CreateZoneCreated {
	return &CreateZoneCreated{}
}

/*
CreateZoneCreated describes a response with status code 201, with default header values.

successful operation
*/
type CreateZoneCreated struct {
	Payload *models.Zone
}

// IsSuccess returns true when this create zone created response has a 2xx status code
func (o *CreateZoneCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create zone created response has a 3xx status code
func (o *CreateZoneCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone created response has a 4xx status code
func (o *CreateZoneCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create zone created response has a 5xx status code
func (o *CreateZoneCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone created response a status code equal to that given
func (o *CreateZoneCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateZoneCreated) Error() string {
	return fmt.Sprintf("[POST /iaas/api/zones][%d] createZoneCreated  %+v", 201, o.Payload)
}

func (o *CreateZoneCreated) String() string {
	return fmt.Sprintf("[POST /iaas/api/zones][%d] createZoneCreated  %+v", 201, o.Payload)
}

func (o *CreateZoneCreated) GetPayload() *models.Zone {
	return o.Payload
}

func (o *CreateZoneCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateZoneBadRequest creates a CreateZoneBadRequest with default headers values
func NewCreateZoneBadRequest() *CreateZoneBadRequest {
	return &CreateZoneBadRequest{}
}

/*
CreateZoneBadRequest describes a response with status code 400, with default header values.

Invalid Request - bad data
*/
type CreateZoneBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create zone bad request response has a 2xx status code
func (o *CreateZoneBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone bad request response has a 3xx status code
func (o *CreateZoneBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone bad request response has a 4xx status code
func (o *CreateZoneBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create zone bad request response has a 5xx status code
func (o *CreateZoneBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone bad request response a status code equal to that given
func (o *CreateZoneBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateZoneBadRequest) Error() string {
	return fmt.Sprintf("[POST /iaas/api/zones][%d] createZoneBadRequest  %+v", 400, o.Payload)
}

func (o *CreateZoneBadRequest) String() string {
	return fmt.Sprintf("[POST /iaas/api/zones][%d] createZoneBadRequest  %+v", 400, o.Payload)
}

func (o *CreateZoneBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateZoneBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateZoneForbidden creates a CreateZoneForbidden with default headers values
func NewCreateZoneForbidden() *CreateZoneForbidden {
	return &CreateZoneForbidden{}
}

/*
CreateZoneForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateZoneForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this create zone forbidden response has a 2xx status code
func (o *CreateZoneForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create zone forbidden response has a 3xx status code
func (o *CreateZoneForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create zone forbidden response has a 4xx status code
func (o *CreateZoneForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create zone forbidden response has a 5xx status code
func (o *CreateZoneForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create zone forbidden response a status code equal to that given
func (o *CreateZoneForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateZoneForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/zones][%d] createZoneForbidden  %+v", 403, o.Payload)
}

func (o *CreateZoneForbidden) String() string {
	return fmt.Sprintf("[POST /iaas/api/zones][%d] createZoneForbidden  %+v", 403, o.Payload)
}

func (o *CreateZoneForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *CreateZoneForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
