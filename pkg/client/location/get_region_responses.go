// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetRegionReader is a Reader for the GetRegion structure.
type GetRegionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRegionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetRegionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRegionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRegionOK creates a GetRegionOK with default headers values
func NewGetRegionOK() *GetRegionOK {
	return &GetRegionOK{}
}

/*GetRegionOK handles this case with default header values.

successful operation
*/
type GetRegionOK struct {
	Payload *models.Region
}

func (o *GetRegionOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/regions/{id}][%d] getRegionOK  %+v", 200, o.Payload)
}

func (o *GetRegionOK) GetPayload() *models.Region {
	return o.Payload
}

func (o *GetRegionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Region)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegionForbidden creates a GetRegionForbidden with default headers values
func NewGetRegionForbidden() *GetRegionForbidden {
	return &GetRegionForbidden{}
}

/*GetRegionForbidden handles this case with default header values.

Forbidden
*/
type GetRegionForbidden struct {
}

func (o *GetRegionForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/regions/{id}][%d] getRegionForbidden ", 403)
}

func (o *GetRegionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegionNotFound creates a GetRegionNotFound with default headers values
func NewGetRegionNotFound() *GetRegionNotFound {
	return &GetRegionNotFound{}
}

/*GetRegionNotFound handles this case with default header values.

Not Found
*/
type GetRegionNotFound struct {
	Payload *models.Error
}

func (o *GetRegionNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/regions/{id}][%d] getRegionNotFound  %+v", 404, o.Payload)
}

func (o *GetRegionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRegionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
