// Code generated by go-swagger; DO NOT EDIT.

package onboarding_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteDeploymentByReader is a Reader for the DeleteDeploymentBy structure.
type DeleteDeploymentByReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDeploymentByReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDeploymentByOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteDeploymentByUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDeploymentByOK creates a DeleteDeploymentByOK with default headers values
func NewDeleteDeploymentByOK() *DeleteDeploymentByOK {
	return &DeleteDeploymentByOK{}
}

/*
DeleteDeploymentByOK describes a response with status code 200, with default header values.

Success
*/
type DeleteDeploymentByOK struct {
}

// IsSuccess returns true when this delete deployment by o k response has a 2xx status code
func (o *DeleteDeploymentByOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete deployment by o k response has a 3xx status code
func (o *DeleteDeploymentByOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete deployment by o k response has a 4xx status code
func (o *DeleteDeploymentByOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete deployment by o k response has a 5xx status code
func (o *DeleteDeploymentByOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete deployment by o k response a status code equal to that given
func (o *DeleteDeploymentByOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteDeploymentByOK) Error() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/deployment/{id}][%d] deleteDeploymentByOK ", 200)
}

func (o *DeleteDeploymentByOK) String() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/deployment/{id}][%d] deleteDeploymentByOK ", 200)
}

func (o *DeleteDeploymentByOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeploymentByUnauthorized creates a DeleteDeploymentByUnauthorized with default headers values
func NewDeleteDeploymentByUnauthorized() *DeleteDeploymentByUnauthorized {
	return &DeleteDeploymentByUnauthorized{}
}

/*
DeleteDeploymentByUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteDeploymentByUnauthorized struct {
}

// IsSuccess returns true when this delete deployment by unauthorized response has a 2xx status code
func (o *DeleteDeploymentByUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete deployment by unauthorized response has a 3xx status code
func (o *DeleteDeploymentByUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete deployment by unauthorized response has a 4xx status code
func (o *DeleteDeploymentByUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete deployment by unauthorized response has a 5xx status code
func (o *DeleteDeploymentByUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete deployment by unauthorized response a status code equal to that given
func (o *DeleteDeploymentByUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteDeploymentByUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/deployment/{id}][%d] deleteDeploymentByUnauthorized ", 401)
}

func (o *DeleteDeploymentByUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/deployment/{id}][%d] deleteDeploymentByUnauthorized ", 401)
}

func (o *DeleteDeploymentByUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
