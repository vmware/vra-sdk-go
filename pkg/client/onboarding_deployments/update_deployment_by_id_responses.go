// Code generated by go-swagger; DO NOT EDIT.

package onboarding_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateDeploymentByIDReader is a Reader for the UpdateDeploymentByID structure.
type UpdateDeploymentByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDeploymentByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDeploymentByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateDeploymentByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateDeploymentByIDOK creates a UpdateDeploymentByIDOK with default headers values
func NewUpdateDeploymentByIDOK() *UpdateDeploymentByIDOK {
	return &UpdateDeploymentByIDOK{}
}

/*
UpdateDeploymentByIDOK describes a response with status code 200, with default header values.

Success
*/
type UpdateDeploymentByIDOK struct {
}

// IsSuccess returns true when this update deployment by Id o k response has a 2xx status code
func (o *UpdateDeploymentByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update deployment by Id o k response has a 3xx status code
func (o *UpdateDeploymentByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update deployment by Id o k response has a 4xx status code
func (o *UpdateDeploymentByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update deployment by Id o k response has a 5xx status code
func (o *UpdateDeploymentByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update deployment by Id o k response a status code equal to that given
func (o *UpdateDeploymentByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateDeploymentByIDOK) Error() string {
	return fmt.Sprintf("[PATCH /relocation/onboarding/deployment/{id}][%d] updateDeploymentByIdOK ", 200)
}

func (o *UpdateDeploymentByIDOK) String() string {
	return fmt.Sprintf("[PATCH /relocation/onboarding/deployment/{id}][%d] updateDeploymentByIdOK ", 200)
}

func (o *UpdateDeploymentByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDeploymentByIDUnauthorized creates a UpdateDeploymentByIDUnauthorized with default headers values
func NewUpdateDeploymentByIDUnauthorized() *UpdateDeploymentByIDUnauthorized {
	return &UpdateDeploymentByIDUnauthorized{}
}

/*
UpdateDeploymentByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateDeploymentByIDUnauthorized struct {
}

// IsSuccess returns true when this update deployment by Id unauthorized response has a 2xx status code
func (o *UpdateDeploymentByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update deployment by Id unauthorized response has a 3xx status code
func (o *UpdateDeploymentByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update deployment by Id unauthorized response has a 4xx status code
func (o *UpdateDeploymentByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update deployment by Id unauthorized response has a 5xx status code
func (o *UpdateDeploymentByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update deployment by Id unauthorized response a status code equal to that given
func (o *UpdateDeploymentByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateDeploymentByIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /relocation/onboarding/deployment/{id}][%d] updateDeploymentByIdUnauthorized ", 401)
}

func (o *UpdateDeploymentByIDUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /relocation/onboarding/deployment/{id}][%d] updateDeploymentByIdUnauthorized ", 401)
}

func (o *UpdateDeploymentByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
