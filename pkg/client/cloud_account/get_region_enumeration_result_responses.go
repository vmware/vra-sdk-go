// Code generated by go-swagger; DO NOT EDIT.

package cloud_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetRegionEnumerationResultReader is a Reader for the GetRegionEnumerationResult structure.
type GetRegionEnumerationResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegionEnumerationResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRegionEnumerationResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetRegionEnumerationResultForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRegionEnumerationResultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRegionEnumerationResultOK creates a GetRegionEnumerationResultOK with default headers values
func NewGetRegionEnumerationResultOK() *GetRegionEnumerationResultOK {
	return &GetRegionEnumerationResultOK{}
}

/*
GetRegionEnumerationResultOK describes a response with status code 200, with default header values.

successful operation
*/
type GetRegionEnumerationResultOK struct {
	Payload *models.CloudAccountRegions
}

// IsSuccess returns true when this get region enumeration result o k response has a 2xx status code
func (o *GetRegionEnumerationResultOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get region enumeration result o k response has a 3xx status code
func (o *GetRegionEnumerationResultOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get region enumeration result o k response has a 4xx status code
func (o *GetRegionEnumerationResultOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get region enumeration result o k response has a 5xx status code
func (o *GetRegionEnumerationResultOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get region enumeration result o k response a status code equal to that given
func (o *GetRegionEnumerationResultOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRegionEnumerationResultOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts/region-enumeration/{id}][%d] getRegionEnumerationResultOK  %+v", 200, o.Payload)
}

func (o *GetRegionEnumerationResultOK) String() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts/region-enumeration/{id}][%d] getRegionEnumerationResultOK  %+v", 200, o.Payload)
}

func (o *GetRegionEnumerationResultOK) GetPayload() *models.CloudAccountRegions {
	return o.Payload
}

func (o *GetRegionEnumerationResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CloudAccountRegions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegionEnumerationResultForbidden creates a GetRegionEnumerationResultForbidden with default headers values
func NewGetRegionEnumerationResultForbidden() *GetRegionEnumerationResultForbidden {
	return &GetRegionEnumerationResultForbidden{}
}

/*
GetRegionEnumerationResultForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRegionEnumerationResultForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this get region enumeration result forbidden response has a 2xx status code
func (o *GetRegionEnumerationResultForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get region enumeration result forbidden response has a 3xx status code
func (o *GetRegionEnumerationResultForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get region enumeration result forbidden response has a 4xx status code
func (o *GetRegionEnumerationResultForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get region enumeration result forbidden response has a 5xx status code
func (o *GetRegionEnumerationResultForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get region enumeration result forbidden response a status code equal to that given
func (o *GetRegionEnumerationResultForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRegionEnumerationResultForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts/region-enumeration/{id}][%d] getRegionEnumerationResultForbidden  %+v", 403, o.Payload)
}

func (o *GetRegionEnumerationResultForbidden) String() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts/region-enumeration/{id}][%d] getRegionEnumerationResultForbidden  %+v", 403, o.Payload)
}

func (o *GetRegionEnumerationResultForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetRegionEnumerationResultForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegionEnumerationResultNotFound creates a GetRegionEnumerationResultNotFound with default headers values
func NewGetRegionEnumerationResultNotFound() *GetRegionEnumerationResultNotFound {
	return &GetRegionEnumerationResultNotFound{}
}

/*
GetRegionEnumerationResultNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRegionEnumerationResultNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get region enumeration result not found response has a 2xx status code
func (o *GetRegionEnumerationResultNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get region enumeration result not found response has a 3xx status code
func (o *GetRegionEnumerationResultNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get region enumeration result not found response has a 4xx status code
func (o *GetRegionEnumerationResultNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get region enumeration result not found response has a 5xx status code
func (o *GetRegionEnumerationResultNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get region enumeration result not found response a status code equal to that given
func (o *GetRegionEnumerationResultNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRegionEnumerationResultNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts/region-enumeration/{id}][%d] getRegionEnumerationResultNotFound  %+v", 404, o.Payload)
}

func (o *GetRegionEnumerationResultNotFound) String() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts/region-enumeration/{id}][%d] getRegionEnumerationResultNotFound  %+v", 404, o.Payload)
}

func (o *GetRegionEnumerationResultNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRegionEnumerationResultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
