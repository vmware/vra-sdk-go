// Code generated by go-swagger; DO NOT EDIT.

package cloud_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetVcfCloudAccountReader is a Reader for the GetVcfCloudAccount structure.
type GetVcfCloudAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVcfCloudAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVcfCloudAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetVcfCloudAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVcfCloudAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVcfCloudAccountOK creates a GetVcfCloudAccountOK with default headers values
func NewGetVcfCloudAccountOK() *GetVcfCloudAccountOK {
	return &GetVcfCloudAccountOK{}
}

/*
GetVcfCloudAccountOK describes a response with status code 200, with default header values.

successful operation
*/
type GetVcfCloudAccountOK struct {
	Payload *models.CloudAccountVcf
}

// IsSuccess returns true when this get vcf cloud account o k response has a 2xx status code
func (o *GetVcfCloudAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vcf cloud account o k response has a 3xx status code
func (o *GetVcfCloudAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf cloud account o k response has a 4xx status code
func (o *GetVcfCloudAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcf cloud account o k response has a 5xx status code
func (o *GetVcfCloudAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcf cloud account o k response a status code equal to that given
func (o *GetVcfCloudAccountOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetVcfCloudAccountOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts-vcf/{id}][%d] getVcfCloudAccountOK  %+v", 200, o.Payload)
}

func (o *GetVcfCloudAccountOK) String() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts-vcf/{id}][%d] getVcfCloudAccountOK  %+v", 200, o.Payload)
}

func (o *GetVcfCloudAccountOK) GetPayload() *models.CloudAccountVcf {
	return o.Payload
}

func (o *GetVcfCloudAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CloudAccountVcf)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcfCloudAccountForbidden creates a GetVcfCloudAccountForbidden with default headers values
func NewGetVcfCloudAccountForbidden() *GetVcfCloudAccountForbidden {
	return &GetVcfCloudAccountForbidden{}
}

/*
GetVcfCloudAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetVcfCloudAccountForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this get vcf cloud account forbidden response has a 2xx status code
func (o *GetVcfCloudAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcf cloud account forbidden response has a 3xx status code
func (o *GetVcfCloudAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf cloud account forbidden response has a 4xx status code
func (o *GetVcfCloudAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcf cloud account forbidden response has a 5xx status code
func (o *GetVcfCloudAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcf cloud account forbidden response a status code equal to that given
func (o *GetVcfCloudAccountForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetVcfCloudAccountForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts-vcf/{id}][%d] getVcfCloudAccountForbidden  %+v", 403, o.Payload)
}

func (o *GetVcfCloudAccountForbidden) String() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts-vcf/{id}][%d] getVcfCloudAccountForbidden  %+v", 403, o.Payload)
}

func (o *GetVcfCloudAccountForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetVcfCloudAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcfCloudAccountNotFound creates a GetVcfCloudAccountNotFound with default headers values
func NewGetVcfCloudAccountNotFound() *GetVcfCloudAccountNotFound {
	return &GetVcfCloudAccountNotFound{}
}

/*
GetVcfCloudAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVcfCloudAccountNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vcf cloud account not found response has a 2xx status code
func (o *GetVcfCloudAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcf cloud account not found response has a 3xx status code
func (o *GetVcfCloudAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf cloud account not found response has a 4xx status code
func (o *GetVcfCloudAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcf cloud account not found response has a 5xx status code
func (o *GetVcfCloudAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcf cloud account not found response a status code equal to that given
func (o *GetVcfCloudAccountNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetVcfCloudAccountNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts-vcf/{id}][%d] getVcfCloudAccountNotFound  %+v", 404, o.Payload)
}

func (o *GetVcfCloudAccountNotFound) String() string {
	return fmt.Sprintf("[GET /iaas/api/cloud-accounts-vcf/{id}][%d] getVcfCloudAccountNotFound  %+v", 404, o.Payload)
}

func (o *GetVcfCloudAccountNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVcfCloudAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
