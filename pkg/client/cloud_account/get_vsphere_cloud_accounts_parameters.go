// Code generated by go-swagger; DO NOT EDIT.

package cloud_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetVSphereCloudAccountsParams creates a new GetVSphereCloudAccountsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetVSphereCloudAccountsParams() *GetVSphereCloudAccountsParams {
	return &GetVSphereCloudAccountsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetVSphereCloudAccountsParamsWithTimeout creates a new GetVSphereCloudAccountsParams object
// with the ability to set a timeout on a request.
func NewGetVSphereCloudAccountsParamsWithTimeout(timeout time.Duration) *GetVSphereCloudAccountsParams {
	return &GetVSphereCloudAccountsParams{
		timeout: timeout,
	}
}

// NewGetVSphereCloudAccountsParamsWithContext creates a new GetVSphereCloudAccountsParams object
// with the ability to set a context for a request.
func NewGetVSphereCloudAccountsParamsWithContext(ctx context.Context) *GetVSphereCloudAccountsParams {
	return &GetVSphereCloudAccountsParams{
		Context: ctx,
	}
}

// NewGetVSphereCloudAccountsParamsWithHTTPClient creates a new GetVSphereCloudAccountsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetVSphereCloudAccountsParamsWithHTTPClient(client *http.Client) *GetVSphereCloudAccountsParams {
	return &GetVSphereCloudAccountsParams{
		HTTPClient: client,
	}
}

/*
GetVSphereCloudAccountsParams contains all the parameters to send to the API endpoint

	for the get v sphere cloud accounts operation.

	Typically these are written to a http.Request.
*/
type GetVSphereCloudAccountsParams struct {

	/* DollarSkip.

	   Number of records you want to skip.
	*/
	DollarSkip *int64

	/* DollarTop.

	   Number of records you want to get.
	*/
	DollarTop *int64

	/* APIVersion.

	   The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about
	*/
	APIVersion *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v sphere cloud accounts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetVSphereCloudAccountsParams) WithDefaults() *GetVSphereCloudAccountsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v sphere cloud accounts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetVSphereCloudAccountsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) WithTimeout(timeout time.Duration) *GetVSphereCloudAccountsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) WithContext(ctx context.Context) *GetVSphereCloudAccountsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) WithHTTPClient(client *http.Client) *GetVSphereCloudAccountsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDollarSkip adds the dollarSkip to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) WithDollarSkip(dollarSkip *int64) *GetVSphereCloudAccountsParams {
	o.SetDollarSkip(dollarSkip)
	return o
}

// SetDollarSkip adds the dollarSkip to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) SetDollarSkip(dollarSkip *int64) {
	o.DollarSkip = dollarSkip
}

// WithDollarTop adds the dollarTop to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) WithDollarTop(dollarTop *int64) *GetVSphereCloudAccountsParams {
	o.SetDollarTop(dollarTop)
	return o
}

// SetDollarTop adds the dollarTop to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) SetDollarTop(dollarTop *int64) {
	o.DollarTop = dollarTop
}

// WithAPIVersion adds the aPIVersion to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) WithAPIVersion(aPIVersion *string) *GetVSphereCloudAccountsParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get v sphere cloud accounts params
func (o *GetVSphereCloudAccountsParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WriteToRequest writes these params to a swagger request
func (o *GetVSphereCloudAccountsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DollarSkip != nil {

		// query param $skip
		var qrDollarSkip int64

		if o.DollarSkip != nil {
			qrDollarSkip = *o.DollarSkip
		}
		qDollarSkip := swag.FormatInt64(qrDollarSkip)
		if qDollarSkip != "" {

			if err := r.SetQueryParam("$skip", qDollarSkip); err != nil {
				return err
			}
		}
	}

	if o.DollarTop != nil {

		// query param $top
		var qrDollarTop int64

		if o.DollarTop != nil {
			qrDollarTop = *o.DollarTop
		}
		qDollarTop := swag.FormatInt64(qrDollarTop)
		if qDollarTop != "" {

			if err := r.SetQueryParam("$top", qDollarTop); err != nil {
				return err
			}
		}
	}

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string

		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {

			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
