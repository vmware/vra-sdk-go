// Code generated by go-swagger; DO NOT EDIT.

package cloud_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateCloudAccountAsyncReader is a Reader for the UpdateCloudAccountAsync structure.
type UpdateCloudAccountAsyncReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCloudAccountAsyncReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewUpdateCloudAccountAsyncAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateCloudAccountAsyncForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCloudAccountAsyncNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCloudAccountAsyncAccepted creates a UpdateCloudAccountAsyncAccepted with default headers values
func NewUpdateCloudAccountAsyncAccepted() *UpdateCloudAccountAsyncAccepted {
	return &UpdateCloudAccountAsyncAccepted{}
}

/*
UpdateCloudAccountAsyncAccepted describes a response with status code 202, with default header values.

successful operation
*/
type UpdateCloudAccountAsyncAccepted struct {
	Payload *models.RequestTracker
}

// IsSuccess returns true when this update cloud account async accepted response has a 2xx status code
func (o *UpdateCloudAccountAsyncAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cloud account async accepted response has a 3xx status code
func (o *UpdateCloudAccountAsyncAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cloud account async accepted response has a 4xx status code
func (o *UpdateCloudAccountAsyncAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cloud account async accepted response has a 5xx status code
func (o *UpdateCloudAccountAsyncAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this update cloud account async accepted response a status code equal to that given
func (o *UpdateCloudAccountAsyncAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *UpdateCloudAccountAsyncAccepted) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/cloud-accounts/{id}][%d] updateCloudAccountAsyncAccepted  %+v", 202, o.Payload)
}

func (o *UpdateCloudAccountAsyncAccepted) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/cloud-accounts/{id}][%d] updateCloudAccountAsyncAccepted  %+v", 202, o.Payload)
}

func (o *UpdateCloudAccountAsyncAccepted) GetPayload() *models.RequestTracker {
	return o.Payload
}

func (o *UpdateCloudAccountAsyncAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCloudAccountAsyncForbidden creates a UpdateCloudAccountAsyncForbidden with default headers values
func NewUpdateCloudAccountAsyncForbidden() *UpdateCloudAccountAsyncForbidden {
	return &UpdateCloudAccountAsyncForbidden{}
}

/*
UpdateCloudAccountAsyncForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCloudAccountAsyncForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this update cloud account async forbidden response has a 2xx status code
func (o *UpdateCloudAccountAsyncForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cloud account async forbidden response has a 3xx status code
func (o *UpdateCloudAccountAsyncForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cloud account async forbidden response has a 4xx status code
func (o *UpdateCloudAccountAsyncForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cloud account async forbidden response has a 5xx status code
func (o *UpdateCloudAccountAsyncForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cloud account async forbidden response a status code equal to that given
func (o *UpdateCloudAccountAsyncForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateCloudAccountAsyncForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/cloud-accounts/{id}][%d] updateCloudAccountAsyncForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCloudAccountAsyncForbidden) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/cloud-accounts/{id}][%d] updateCloudAccountAsyncForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCloudAccountAsyncForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *UpdateCloudAccountAsyncForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCloudAccountAsyncNotFound creates a UpdateCloudAccountAsyncNotFound with default headers values
func NewUpdateCloudAccountAsyncNotFound() *UpdateCloudAccountAsyncNotFound {
	return &UpdateCloudAccountAsyncNotFound{}
}

/*
UpdateCloudAccountAsyncNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateCloudAccountAsyncNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update cloud account async not found response has a 2xx status code
func (o *UpdateCloudAccountAsyncNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cloud account async not found response has a 3xx status code
func (o *UpdateCloudAccountAsyncNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cloud account async not found response has a 4xx status code
func (o *UpdateCloudAccountAsyncNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cloud account async not found response has a 5xx status code
func (o *UpdateCloudAccountAsyncNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cloud account async not found response a status code equal to that given
func (o *UpdateCloudAccountAsyncNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateCloudAccountAsyncNotFound) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/cloud-accounts/{id}][%d] updateCloudAccountAsyncNotFound  %+v", 404, o.Payload)
}

func (o *UpdateCloudAccountAsyncNotFound) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/cloud-accounts/{id}][%d] updateCloudAccountAsyncNotFound  %+v", 404, o.Payload)
}

func (o *UpdateCloudAccountAsyncNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCloudAccountAsyncNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
