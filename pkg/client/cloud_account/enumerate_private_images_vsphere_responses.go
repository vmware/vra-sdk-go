// Code generated by go-swagger; DO NOT EDIT.

package cloud_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// EnumeratePrivateImagesVSphereReader is a Reader for the EnumeratePrivateImagesVSphere structure.
type EnumeratePrivateImagesVSphereReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnumeratePrivateImagesVSphereReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewEnumeratePrivateImagesVSphereAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEnumeratePrivateImagesVSphereBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEnumeratePrivateImagesVSphereForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEnumeratePrivateImagesVSphereAccepted creates a EnumeratePrivateImagesVSphereAccepted with default headers values
func NewEnumeratePrivateImagesVSphereAccepted() *EnumeratePrivateImagesVSphereAccepted {
	return &EnumeratePrivateImagesVSphereAccepted{}
}

/*
EnumeratePrivateImagesVSphereAccepted describes a response with status code 202, with default header values.

successful operation
*/
type EnumeratePrivateImagesVSphereAccepted struct {
	Payload *models.RequestTracker
}

// IsSuccess returns true when this enumerate private images v sphere accepted response has a 2xx status code
func (o *EnumeratePrivateImagesVSphereAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this enumerate private images v sphere accepted response has a 3xx status code
func (o *EnumeratePrivateImagesVSphereAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enumerate private images v sphere accepted response has a 4xx status code
func (o *EnumeratePrivateImagesVSphereAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this enumerate private images v sphere accepted response has a 5xx status code
func (o *EnumeratePrivateImagesVSphereAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this enumerate private images v sphere accepted response a status code equal to that given
func (o *EnumeratePrivateImagesVSphereAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *EnumeratePrivateImagesVSphereAccepted) Error() string {
	return fmt.Sprintf("[POST /iaas/api/cloud-accounts-vsphere/{id}/private-image-enumeration][%d] enumeratePrivateImagesVSphereAccepted  %+v", 202, o.Payload)
}

func (o *EnumeratePrivateImagesVSphereAccepted) String() string {
	return fmt.Sprintf("[POST /iaas/api/cloud-accounts-vsphere/{id}/private-image-enumeration][%d] enumeratePrivateImagesVSphereAccepted  %+v", 202, o.Payload)
}

func (o *EnumeratePrivateImagesVSphereAccepted) GetPayload() *models.RequestTracker {
	return o.Payload
}

func (o *EnumeratePrivateImagesVSphereAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnumeratePrivateImagesVSphereBadRequest creates a EnumeratePrivateImagesVSphereBadRequest with default headers values
func NewEnumeratePrivateImagesVSphereBadRequest() *EnumeratePrivateImagesVSphereBadRequest {
	return &EnumeratePrivateImagesVSphereBadRequest{}
}

/*
EnumeratePrivateImagesVSphereBadRequest describes a response with status code 400, with default header values.

Invalid Request - bad data
*/
type EnumeratePrivateImagesVSphereBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this enumerate private images v sphere bad request response has a 2xx status code
func (o *EnumeratePrivateImagesVSphereBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enumerate private images v sphere bad request response has a 3xx status code
func (o *EnumeratePrivateImagesVSphereBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enumerate private images v sphere bad request response has a 4xx status code
func (o *EnumeratePrivateImagesVSphereBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this enumerate private images v sphere bad request response has a 5xx status code
func (o *EnumeratePrivateImagesVSphereBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this enumerate private images v sphere bad request response a status code equal to that given
func (o *EnumeratePrivateImagesVSphereBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *EnumeratePrivateImagesVSphereBadRequest) Error() string {
	return fmt.Sprintf("[POST /iaas/api/cloud-accounts-vsphere/{id}/private-image-enumeration][%d] enumeratePrivateImagesVSphereBadRequest  %+v", 400, o.Payload)
}

func (o *EnumeratePrivateImagesVSphereBadRequest) String() string {
	return fmt.Sprintf("[POST /iaas/api/cloud-accounts-vsphere/{id}/private-image-enumeration][%d] enumeratePrivateImagesVSphereBadRequest  %+v", 400, o.Payload)
}

func (o *EnumeratePrivateImagesVSphereBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *EnumeratePrivateImagesVSphereBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnumeratePrivateImagesVSphereForbidden creates a EnumeratePrivateImagesVSphereForbidden with default headers values
func NewEnumeratePrivateImagesVSphereForbidden() *EnumeratePrivateImagesVSphereForbidden {
	return &EnumeratePrivateImagesVSphereForbidden{}
}

/*
EnumeratePrivateImagesVSphereForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EnumeratePrivateImagesVSphereForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this enumerate private images v sphere forbidden response has a 2xx status code
func (o *EnumeratePrivateImagesVSphereForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enumerate private images v sphere forbidden response has a 3xx status code
func (o *EnumeratePrivateImagesVSphereForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enumerate private images v sphere forbidden response has a 4xx status code
func (o *EnumeratePrivateImagesVSphereForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this enumerate private images v sphere forbidden response has a 5xx status code
func (o *EnumeratePrivateImagesVSphereForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this enumerate private images v sphere forbidden response a status code equal to that given
func (o *EnumeratePrivateImagesVSphereForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *EnumeratePrivateImagesVSphereForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/cloud-accounts-vsphere/{id}/private-image-enumeration][%d] enumeratePrivateImagesVSphereForbidden  %+v", 403, o.Payload)
}

func (o *EnumeratePrivateImagesVSphereForbidden) String() string {
	return fmt.Sprintf("[POST /iaas/api/cloud-accounts-vsphere/{id}/private-image-enumeration][%d] enumeratePrivateImagesVSphereForbidden  %+v", 403, o.Payload)
}

func (o *EnumeratePrivateImagesVSphereForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *EnumeratePrivateImagesVSphereForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
