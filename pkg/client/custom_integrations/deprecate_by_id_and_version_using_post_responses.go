// Code generated by go-swagger; DO NOT EDIT.

package custom_integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeprecateByIDAndVersionUsingPOSTReader is a Reader for the DeprecateByIDAndVersionUsingPOST structure.
type DeprecateByIDAndVersionUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeprecateByIDAndVersionUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeprecateByIDAndVersionUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeprecateByIDAndVersionUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeprecateByIDAndVersionUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeprecateByIDAndVersionUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeprecateByIDAndVersionUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeprecateByIDAndVersionUsingPOSTOK creates a DeprecateByIDAndVersionUsingPOSTOK with default headers values
func NewDeprecateByIDAndVersionUsingPOSTOK() *DeprecateByIDAndVersionUsingPOSTOK {
	return &DeprecateByIDAndVersionUsingPOSTOK{}
}

/*
DeprecateByIDAndVersionUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type DeprecateByIDAndVersionUsingPOSTOK struct {
	Payload models.CustomIntegration
}

// IsSuccess returns true when this deprecate by Id and version using p o s t o k response has a 2xx status code
func (o *DeprecateByIDAndVersionUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deprecate by Id and version using p o s t o k response has a 3xx status code
func (o *DeprecateByIDAndVersionUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deprecate by Id and version using p o s t o k response has a 4xx status code
func (o *DeprecateByIDAndVersionUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this deprecate by Id and version using p o s t o k response has a 5xx status code
func (o *DeprecateByIDAndVersionUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this deprecate by Id and version using p o s t o k response a status code equal to that given
func (o *DeprecateByIDAndVersionUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeprecateByIDAndVersionUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *DeprecateByIDAndVersionUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *DeprecateByIDAndVersionUsingPOSTOK) GetPayload() models.CustomIntegration {
	return o.Payload
}

func (o *DeprecateByIDAndVersionUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalCustomIntegration(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewDeprecateByIDAndVersionUsingPOSTUnauthorized creates a DeprecateByIDAndVersionUsingPOSTUnauthorized with default headers values
func NewDeprecateByIDAndVersionUsingPOSTUnauthorized() *DeprecateByIDAndVersionUsingPOSTUnauthorized {
	return &DeprecateByIDAndVersionUsingPOSTUnauthorized{}
}

/*
DeprecateByIDAndVersionUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeprecateByIDAndVersionUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this deprecate by Id and version using p o s t unauthorized response has a 2xx status code
func (o *DeprecateByIDAndVersionUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deprecate by Id and version using p o s t unauthorized response has a 3xx status code
func (o *DeprecateByIDAndVersionUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deprecate by Id and version using p o s t unauthorized response has a 4xx status code
func (o *DeprecateByIDAndVersionUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this deprecate by Id and version using p o s t unauthorized response has a 5xx status code
func (o *DeprecateByIDAndVersionUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this deprecate by Id and version using p o s t unauthorized response a status code equal to that given
func (o *DeprecateByIDAndVersionUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeprecateByIDAndVersionUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTUnauthorized ", 401)
}

func (o *DeprecateByIDAndVersionUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTUnauthorized ", 401)
}

func (o *DeprecateByIDAndVersionUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeprecateByIDAndVersionUsingPOSTForbidden creates a DeprecateByIDAndVersionUsingPOSTForbidden with default headers values
func NewDeprecateByIDAndVersionUsingPOSTForbidden() *DeprecateByIDAndVersionUsingPOSTForbidden {
	return &DeprecateByIDAndVersionUsingPOSTForbidden{}
}

/*
DeprecateByIDAndVersionUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeprecateByIDAndVersionUsingPOSTForbidden struct {
}

// IsSuccess returns true when this deprecate by Id and version using p o s t forbidden response has a 2xx status code
func (o *DeprecateByIDAndVersionUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deprecate by Id and version using p o s t forbidden response has a 3xx status code
func (o *DeprecateByIDAndVersionUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deprecate by Id and version using p o s t forbidden response has a 4xx status code
func (o *DeprecateByIDAndVersionUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this deprecate by Id and version using p o s t forbidden response has a 5xx status code
func (o *DeprecateByIDAndVersionUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this deprecate by Id and version using p o s t forbidden response a status code equal to that given
func (o *DeprecateByIDAndVersionUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeprecateByIDAndVersionUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTForbidden ", 403)
}

func (o *DeprecateByIDAndVersionUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTForbidden ", 403)
}

func (o *DeprecateByIDAndVersionUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeprecateByIDAndVersionUsingPOSTNotFound creates a DeprecateByIDAndVersionUsingPOSTNotFound with default headers values
func NewDeprecateByIDAndVersionUsingPOSTNotFound() *DeprecateByIDAndVersionUsingPOSTNotFound {
	return &DeprecateByIDAndVersionUsingPOSTNotFound{}
}

/*
DeprecateByIDAndVersionUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeprecateByIDAndVersionUsingPOSTNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this deprecate by Id and version using p o s t not found response has a 2xx status code
func (o *DeprecateByIDAndVersionUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deprecate by Id and version using p o s t not found response has a 3xx status code
func (o *DeprecateByIDAndVersionUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deprecate by Id and version using p o s t not found response has a 4xx status code
func (o *DeprecateByIDAndVersionUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this deprecate by Id and version using p o s t not found response has a 5xx status code
func (o *DeprecateByIDAndVersionUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this deprecate by Id and version using p o s t not found response a status code equal to that given
func (o *DeprecateByIDAndVersionUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeprecateByIDAndVersionUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTNotFound  %+v", 404, o.Payload)
}

func (o *DeprecateByIDAndVersionUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTNotFound  %+v", 404, o.Payload)
}

func (o *DeprecateByIDAndVersionUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeprecateByIDAndVersionUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeprecateByIDAndVersionUsingPOSTInternalServerError creates a DeprecateByIDAndVersionUsingPOSTInternalServerError with default headers values
func NewDeprecateByIDAndVersionUsingPOSTInternalServerError() *DeprecateByIDAndVersionUsingPOSTInternalServerError {
	return &DeprecateByIDAndVersionUsingPOSTInternalServerError{}
}

/*
DeprecateByIDAndVersionUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeprecateByIDAndVersionUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this deprecate by Id and version using p o s t internal server error response has a 2xx status code
func (o *DeprecateByIDAndVersionUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deprecate by Id and version using p o s t internal server error response has a 3xx status code
func (o *DeprecateByIDAndVersionUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deprecate by Id and version using p o s t internal server error response has a 4xx status code
func (o *DeprecateByIDAndVersionUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this deprecate by Id and version using p o s t internal server error response has a 5xx status code
func (o *DeprecateByIDAndVersionUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this deprecate by Id and version using p o s t internal server error response a status code equal to that given
func (o *DeprecateByIDAndVersionUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeprecateByIDAndVersionUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTInternalServerError ", 500)
}

func (o *DeprecateByIDAndVersionUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/deprecate][%d] deprecateByIdAndVersionUsingPOSTInternalServerError ", 500)
}

func (o *DeprecateByIDAndVersionUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
