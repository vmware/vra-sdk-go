// Code generated by go-swagger; DO NOT EDIT.

package custom_integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ToggleLatestUsingPATCHReader is a Reader for the ToggleLatestUsingPATCH structure.
type ToggleLatestUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ToggleLatestUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewToggleLatestUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewToggleLatestUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewToggleLatestUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewToggleLatestUsingPATCHNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewToggleLatestUsingPATCHInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewToggleLatestUsingPATCHOK creates a ToggleLatestUsingPATCHOK with default headers values
func NewToggleLatestUsingPATCHOK() *ToggleLatestUsingPATCHOK {
	return &ToggleLatestUsingPATCHOK{}
}

/*
ToggleLatestUsingPATCHOK describes a response with status code 200, with default header values.

OK
*/
type ToggleLatestUsingPATCHOK struct {
	Payload models.CustomIntegration
}

// IsSuccess returns true when this toggle latest using p a t c h o k response has a 2xx status code
func (o *ToggleLatestUsingPATCHOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this toggle latest using p a t c h o k response has a 3xx status code
func (o *ToggleLatestUsingPATCHOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle latest using p a t c h o k response has a 4xx status code
func (o *ToggleLatestUsingPATCHOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this toggle latest using p a t c h o k response has a 5xx status code
func (o *ToggleLatestUsingPATCHOK) IsServerError() bool {
	return false
}

// IsCode returns true when this toggle latest using p a t c h o k response a status code equal to that given
func (o *ToggleLatestUsingPATCHOK) IsCode(code int) bool {
	return code == 200
}

func (o *ToggleLatestUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *ToggleLatestUsingPATCHOK) String() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *ToggleLatestUsingPATCHOK) GetPayload() models.CustomIntegration {
	return o.Payload
}

func (o *ToggleLatestUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalCustomIntegration(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewToggleLatestUsingPATCHUnauthorized creates a ToggleLatestUsingPATCHUnauthorized with default headers values
func NewToggleLatestUsingPATCHUnauthorized() *ToggleLatestUsingPATCHUnauthorized {
	return &ToggleLatestUsingPATCHUnauthorized{}
}

/*
ToggleLatestUsingPATCHUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type ToggleLatestUsingPATCHUnauthorized struct {
}

// IsSuccess returns true when this toggle latest using p a t c h unauthorized response has a 2xx status code
func (o *ToggleLatestUsingPATCHUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this toggle latest using p a t c h unauthorized response has a 3xx status code
func (o *ToggleLatestUsingPATCHUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle latest using p a t c h unauthorized response has a 4xx status code
func (o *ToggleLatestUsingPATCHUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this toggle latest using p a t c h unauthorized response has a 5xx status code
func (o *ToggleLatestUsingPATCHUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this toggle latest using p a t c h unauthorized response a status code equal to that given
func (o *ToggleLatestUsingPATCHUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ToggleLatestUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHUnauthorized ", 401)
}

func (o *ToggleLatestUsingPATCHUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHUnauthorized ", 401)
}

func (o *ToggleLatestUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewToggleLatestUsingPATCHForbidden creates a ToggleLatestUsingPATCHForbidden with default headers values
func NewToggleLatestUsingPATCHForbidden() *ToggleLatestUsingPATCHForbidden {
	return &ToggleLatestUsingPATCHForbidden{}
}

/*
ToggleLatestUsingPATCHForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ToggleLatestUsingPATCHForbidden struct {
}

// IsSuccess returns true when this toggle latest using p a t c h forbidden response has a 2xx status code
func (o *ToggleLatestUsingPATCHForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this toggle latest using p a t c h forbidden response has a 3xx status code
func (o *ToggleLatestUsingPATCHForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle latest using p a t c h forbidden response has a 4xx status code
func (o *ToggleLatestUsingPATCHForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this toggle latest using p a t c h forbidden response has a 5xx status code
func (o *ToggleLatestUsingPATCHForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this toggle latest using p a t c h forbidden response a status code equal to that given
func (o *ToggleLatestUsingPATCHForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ToggleLatestUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHForbidden ", 403)
}

func (o *ToggleLatestUsingPATCHForbidden) String() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHForbidden ", 403)
}

func (o *ToggleLatestUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewToggleLatestUsingPATCHNotFound creates a ToggleLatestUsingPATCHNotFound with default headers values
func NewToggleLatestUsingPATCHNotFound() *ToggleLatestUsingPATCHNotFound {
	return &ToggleLatestUsingPATCHNotFound{}
}

/*
ToggleLatestUsingPATCHNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ToggleLatestUsingPATCHNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this toggle latest using p a t c h not found response has a 2xx status code
func (o *ToggleLatestUsingPATCHNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this toggle latest using p a t c h not found response has a 3xx status code
func (o *ToggleLatestUsingPATCHNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle latest using p a t c h not found response has a 4xx status code
func (o *ToggleLatestUsingPATCHNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this toggle latest using p a t c h not found response has a 5xx status code
func (o *ToggleLatestUsingPATCHNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this toggle latest using p a t c h not found response a status code equal to that given
func (o *ToggleLatestUsingPATCHNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ToggleLatestUsingPATCHNotFound) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHNotFound  %+v", 404, o.Payload)
}

func (o *ToggleLatestUsingPATCHNotFound) String() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHNotFound  %+v", 404, o.Payload)
}

func (o *ToggleLatestUsingPATCHNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ToggleLatestUsingPATCHNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewToggleLatestUsingPATCHInternalServerError creates a ToggleLatestUsingPATCHInternalServerError with default headers values
func NewToggleLatestUsingPATCHInternalServerError() *ToggleLatestUsingPATCHInternalServerError {
	return &ToggleLatestUsingPATCHInternalServerError{}
}

/*
ToggleLatestUsingPATCHInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ToggleLatestUsingPATCHInternalServerError struct {
}

// IsSuccess returns true when this toggle latest using p a t c h internal server error response has a 2xx status code
func (o *ToggleLatestUsingPATCHInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this toggle latest using p a t c h internal server error response has a 3xx status code
func (o *ToggleLatestUsingPATCHInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle latest using p a t c h internal server error response has a 4xx status code
func (o *ToggleLatestUsingPATCHInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this toggle latest using p a t c h internal server error response has a 5xx status code
func (o *ToggleLatestUsingPATCHInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this toggle latest using p a t c h internal server error response a status code equal to that given
func (o *ToggleLatestUsingPATCHInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ToggleLatestUsingPATCHInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHInternalServerError ", 500)
}

func (o *ToggleLatestUsingPATCHInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /codestream/api/custom-integrations/{id}/versions/{version}][%d] toggleLatestUsingPATCHInternalServerError ", 500)
}

func (o *ToggleLatestUsingPATCHInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
