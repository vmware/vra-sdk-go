// Code generated by go-swagger; DO NOT EDIT.

package custom_integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// WithdrawByIDAndVersionUsingPOSTReader is a Reader for the WithdrawByIDAndVersionUsingPOST structure.
type WithdrawByIDAndVersionUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WithdrawByIDAndVersionUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWithdrawByIDAndVersionUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewWithdrawByIDAndVersionUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewWithdrawByIDAndVersionUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewWithdrawByIDAndVersionUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewWithdrawByIDAndVersionUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewWithdrawByIDAndVersionUsingPOSTOK creates a WithdrawByIDAndVersionUsingPOSTOK with default headers values
func NewWithdrawByIDAndVersionUsingPOSTOK() *WithdrawByIDAndVersionUsingPOSTOK {
	return &WithdrawByIDAndVersionUsingPOSTOK{}
}

/* WithdrawByIDAndVersionUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type WithdrawByIDAndVersionUsingPOSTOK struct {
	Payload models.CustomIntegration
}

func (o *WithdrawByIDAndVersionUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/withdraw][%d] withdrawByIdAndVersionUsingPOSTOK  %+v", 200, o.Payload)
}
func (o *WithdrawByIDAndVersionUsingPOSTOK) GetPayload() models.CustomIntegration {
	return o.Payload
}

func (o *WithdrawByIDAndVersionUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalCustomIntegration(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewWithdrawByIDAndVersionUsingPOSTUnauthorized creates a WithdrawByIDAndVersionUsingPOSTUnauthorized with default headers values
func NewWithdrawByIDAndVersionUsingPOSTUnauthorized() *WithdrawByIDAndVersionUsingPOSTUnauthorized {
	return &WithdrawByIDAndVersionUsingPOSTUnauthorized{}
}

/* WithdrawByIDAndVersionUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type WithdrawByIDAndVersionUsingPOSTUnauthorized struct {
}

func (o *WithdrawByIDAndVersionUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/withdraw][%d] withdrawByIdAndVersionUsingPOSTUnauthorized ", 401)
}

func (o *WithdrawByIDAndVersionUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWithdrawByIDAndVersionUsingPOSTForbidden creates a WithdrawByIDAndVersionUsingPOSTForbidden with default headers values
func NewWithdrawByIDAndVersionUsingPOSTForbidden() *WithdrawByIDAndVersionUsingPOSTForbidden {
	return &WithdrawByIDAndVersionUsingPOSTForbidden{}
}

/* WithdrawByIDAndVersionUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type WithdrawByIDAndVersionUsingPOSTForbidden struct {
}

func (o *WithdrawByIDAndVersionUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/withdraw][%d] withdrawByIdAndVersionUsingPOSTForbidden ", 403)
}

func (o *WithdrawByIDAndVersionUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewWithdrawByIDAndVersionUsingPOSTNotFound creates a WithdrawByIDAndVersionUsingPOSTNotFound with default headers values
func NewWithdrawByIDAndVersionUsingPOSTNotFound() *WithdrawByIDAndVersionUsingPOSTNotFound {
	return &WithdrawByIDAndVersionUsingPOSTNotFound{}
}

/* WithdrawByIDAndVersionUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type WithdrawByIDAndVersionUsingPOSTNotFound struct {
	Payload *models.Error
}

func (o *WithdrawByIDAndVersionUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/withdraw][%d] withdrawByIdAndVersionUsingPOSTNotFound  %+v", 404, o.Payload)
}
func (o *WithdrawByIDAndVersionUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *WithdrawByIDAndVersionUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWithdrawByIDAndVersionUsingPOSTInternalServerError creates a WithdrawByIDAndVersionUsingPOSTInternalServerError with default headers values
func NewWithdrawByIDAndVersionUsingPOSTInternalServerError() *WithdrawByIDAndVersionUsingPOSTInternalServerError {
	return &WithdrawByIDAndVersionUsingPOSTInternalServerError{}
}

/* WithdrawByIDAndVersionUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type WithdrawByIDAndVersionUsingPOSTInternalServerError struct {
}

func (o *WithdrawByIDAndVersionUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /codestream/api/custom-integrations/{id}/versions/{version}/withdraw][%d] withdrawByIdAndVersionUsingPOSTInternalServerError ", 500)
}

func (o *WithdrawByIDAndVersionUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
