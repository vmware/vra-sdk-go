// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetRegistryEventByIDReader is a Reader for the GetRegistryEventByID structure.
type GetRegistryEventByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegistryEventByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRegistryEventByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRegistryEventByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRegistryEventByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRegistryEventByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRegistryEventByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRegistryEventByIDOK creates a GetRegistryEventByIDOK with default headers values
func NewGetRegistryEventByIDOK() *GetRegistryEventByIDOK {
	return &GetRegistryEventByIDOK{}
}

/*
GetRegistryEventByIDOK describes a response with status code 200, with default header values.

'Success' with Docker Registry Event
*/
type GetRegistryEventByIDOK struct {
	Payload models.DockerRegistryEvent
}

// IsSuccess returns true when this get registry event by Id o k response has a 2xx status code
func (o *GetRegistryEventByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get registry event by Id o k response has a 3xx status code
func (o *GetRegistryEventByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry event by Id o k response has a 4xx status code
func (o *GetRegistryEventByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get registry event by Id o k response has a 5xx status code
func (o *GetRegistryEventByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get registry event by Id o k response a status code equal to that given
func (o *GetRegistryEventByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRegistryEventByIDOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdOK  %+v", 200, o.Payload)
}

func (o *GetRegistryEventByIDOK) String() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdOK  %+v", 200, o.Payload)
}

func (o *GetRegistryEventByIDOK) GetPayload() models.DockerRegistryEvent {
	return o.Payload
}

func (o *GetRegistryEventByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalDockerRegistryEvent(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetRegistryEventByIDUnauthorized creates a GetRegistryEventByIDUnauthorized with default headers values
func NewGetRegistryEventByIDUnauthorized() *GetRegistryEventByIDUnauthorized {
	return &GetRegistryEventByIDUnauthorized{}
}

/*
GetRegistryEventByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetRegistryEventByIDUnauthorized struct {
}

// IsSuccess returns true when this get registry event by Id unauthorized response has a 2xx status code
func (o *GetRegistryEventByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get registry event by Id unauthorized response has a 3xx status code
func (o *GetRegistryEventByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry event by Id unauthorized response has a 4xx status code
func (o *GetRegistryEventByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get registry event by Id unauthorized response has a 5xx status code
func (o *GetRegistryEventByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get registry event by Id unauthorized response a status code equal to that given
func (o *GetRegistryEventByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetRegistryEventByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdUnauthorized ", 401)
}

func (o *GetRegistryEventByIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdUnauthorized ", 401)
}

func (o *GetRegistryEventByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistryEventByIDForbidden creates a GetRegistryEventByIDForbidden with default headers values
func NewGetRegistryEventByIDForbidden() *GetRegistryEventByIDForbidden {
	return &GetRegistryEventByIDForbidden{}
}

/*
GetRegistryEventByIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRegistryEventByIDForbidden struct {
}

// IsSuccess returns true when this get registry event by Id forbidden response has a 2xx status code
func (o *GetRegistryEventByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get registry event by Id forbidden response has a 3xx status code
func (o *GetRegistryEventByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry event by Id forbidden response has a 4xx status code
func (o *GetRegistryEventByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get registry event by Id forbidden response has a 5xx status code
func (o *GetRegistryEventByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get registry event by Id forbidden response a status code equal to that given
func (o *GetRegistryEventByIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetRegistryEventByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdForbidden ", 403)
}

func (o *GetRegistryEventByIDForbidden) String() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdForbidden ", 403)
}

func (o *GetRegistryEventByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistryEventByIDNotFound creates a GetRegistryEventByIDNotFound with default headers values
func NewGetRegistryEventByIDNotFound() *GetRegistryEventByIDNotFound {
	return &GetRegistryEventByIDNotFound{}
}

/*
GetRegistryEventByIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRegistryEventByIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get registry event by Id not found response has a 2xx status code
func (o *GetRegistryEventByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get registry event by Id not found response has a 3xx status code
func (o *GetRegistryEventByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry event by Id not found response has a 4xx status code
func (o *GetRegistryEventByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get registry event by Id not found response has a 5xx status code
func (o *GetRegistryEventByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get registry event by Id not found response a status code equal to that given
func (o *GetRegistryEventByIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRegistryEventByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetRegistryEventByIDNotFound) String() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetRegistryEventByIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRegistryEventByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegistryEventByIDInternalServerError creates a GetRegistryEventByIDInternalServerError with default headers values
func NewGetRegistryEventByIDInternalServerError() *GetRegistryEventByIDInternalServerError {
	return &GetRegistryEventByIDInternalServerError{}
}

/*
GetRegistryEventByIDInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetRegistryEventByIDInternalServerError struct {
}

// IsSuccess returns true when this get registry event by Id internal server error response has a 2xx status code
func (o *GetRegistryEventByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get registry event by Id internal server error response has a 3xx status code
func (o *GetRegistryEventByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get registry event by Id internal server error response has a 4xx status code
func (o *GetRegistryEventByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get registry event by Id internal server error response has a 5xx status code
func (o *GetRegistryEventByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get registry event by Id internal server error response a status code equal to that given
func (o *GetRegistryEventByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRegistryEventByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdInternalServerError ", 500)
}

func (o *GetRegistryEventByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getRegistryEventByIdInternalServerError ", 500)
}

func (o *GetRegistryEventByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
