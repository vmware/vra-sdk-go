// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetGerritListenerByNameUsingGETReader is a Reader for the GetGerritListenerByNameUsingGET structure.
type GetGerritListenerByNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGerritListenerByNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGerritListenerByNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGerritListenerByNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGerritListenerByNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGerritListenerByNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGerritListenerByNameUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGerritListenerByNameUsingGETOK creates a GetGerritListenerByNameUsingGETOK with default headers values
func NewGetGerritListenerByNameUsingGETOK() *GetGerritListenerByNameUsingGETOK {
	return &GetGerritListenerByNameUsingGETOK{}
}

/* GetGerritListenerByNameUsingGETOK describes a response with status code 200, with default header values.

'Success' with gerrit listener
*/
type GetGerritListenerByNameUsingGETOK struct {
	Payload models.GerritListener
}

func (o *GetGerritListenerByNameUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getGerritListenerByNameUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetGerritListenerByNameUsingGETOK) GetPayload() models.GerritListener {
	return o.Payload
}

func (o *GetGerritListenerByNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritListener(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetGerritListenerByNameUsingGETUnauthorized creates a GetGerritListenerByNameUsingGETUnauthorized with default headers values
func NewGetGerritListenerByNameUsingGETUnauthorized() *GetGerritListenerByNameUsingGETUnauthorized {
	return &GetGerritListenerByNameUsingGETUnauthorized{}
}

/* GetGerritListenerByNameUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetGerritListenerByNameUsingGETUnauthorized struct {
}

func (o *GetGerritListenerByNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getGerritListenerByNameUsingGETUnauthorized ", 401)
}

func (o *GetGerritListenerByNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGerritListenerByNameUsingGETForbidden creates a GetGerritListenerByNameUsingGETForbidden with default headers values
func NewGetGerritListenerByNameUsingGETForbidden() *GetGerritListenerByNameUsingGETForbidden {
	return &GetGerritListenerByNameUsingGETForbidden{}
}

/* GetGerritListenerByNameUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetGerritListenerByNameUsingGETForbidden struct {
}

func (o *GetGerritListenerByNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getGerritListenerByNameUsingGETForbidden ", 403)
}

func (o *GetGerritListenerByNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGerritListenerByNameUsingGETNotFound creates a GetGerritListenerByNameUsingGETNotFound with default headers values
func NewGetGerritListenerByNameUsingGETNotFound() *GetGerritListenerByNameUsingGETNotFound {
	return &GetGerritListenerByNameUsingGETNotFound{}
}

/* GetGerritListenerByNameUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetGerritListenerByNameUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetGerritListenerByNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getGerritListenerByNameUsingGETNotFound  %+v", 404, o.Payload)
}
func (o *GetGerritListenerByNameUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGerritListenerByNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGerritListenerByNameUsingGETInternalServerError creates a GetGerritListenerByNameUsingGETInternalServerError with default headers values
func NewGetGerritListenerByNameUsingGETInternalServerError() *GetGerritListenerByNameUsingGETInternalServerError {
	return &GetGerritListenerByNameUsingGETInternalServerError{}
}

/* GetGerritListenerByNameUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetGerritListenerByNameUsingGETInternalServerError struct {
}

func (o *GetGerritListenerByNameUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getGerritListenerByNameUsingGETInternalServerError ", 500)
}

func (o *GetGerritListenerByNameUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
