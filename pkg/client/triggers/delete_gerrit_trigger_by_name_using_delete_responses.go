// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeleteGerritTriggerByNameUsingDELETEReader is a Reader for the DeleteGerritTriggerByNameUsingDELETE structure.
type DeleteGerritTriggerByNameUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGerritTriggerByNameUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteGerritTriggerByNameUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteGerritTriggerByNameUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteGerritTriggerByNameUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGerritTriggerByNameUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteGerritTriggerByNameUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteGerritTriggerByNameUsingDELETEOK creates a DeleteGerritTriggerByNameUsingDELETEOK with default headers values
func NewDeleteGerritTriggerByNameUsingDELETEOK() *DeleteGerritTriggerByNameUsingDELETEOK {
	return &DeleteGerritTriggerByNameUsingDELETEOK{}
}

/* DeleteGerritTriggerByNameUsingDELETEOK describes a response with status code 200, with default header values.

'Success' with Gerrit Trigger Delete
*/
type DeleteGerritTriggerByNameUsingDELETEOK struct {
	Payload models.GerritTrigger
}

func (o *DeleteGerritTriggerByNameUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{project}/{name}][%d] deleteGerritTriggerByNameUsingDELETEOK  %+v", 200, o.Payload)
}
func (o *DeleteGerritTriggerByNameUsingDELETEOK) GetPayload() models.GerritTrigger {
	return o.Payload
}

func (o *DeleteGerritTriggerByNameUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritTrigger(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewDeleteGerritTriggerByNameUsingDELETEUnauthorized creates a DeleteGerritTriggerByNameUsingDELETEUnauthorized with default headers values
func NewDeleteGerritTriggerByNameUsingDELETEUnauthorized() *DeleteGerritTriggerByNameUsingDELETEUnauthorized {
	return &DeleteGerritTriggerByNameUsingDELETEUnauthorized{}
}

/* DeleteGerritTriggerByNameUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeleteGerritTriggerByNameUsingDELETEUnauthorized struct {
}

func (o *DeleteGerritTriggerByNameUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{project}/{name}][%d] deleteGerritTriggerByNameUsingDELETEUnauthorized ", 401)
}

func (o *DeleteGerritTriggerByNameUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGerritTriggerByNameUsingDELETEForbidden creates a DeleteGerritTriggerByNameUsingDELETEForbidden with default headers values
func NewDeleteGerritTriggerByNameUsingDELETEForbidden() *DeleteGerritTriggerByNameUsingDELETEForbidden {
	return &DeleteGerritTriggerByNameUsingDELETEForbidden{}
}

/* DeleteGerritTriggerByNameUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteGerritTriggerByNameUsingDELETEForbidden struct {
}

func (o *DeleteGerritTriggerByNameUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{project}/{name}][%d] deleteGerritTriggerByNameUsingDELETEForbidden ", 403)
}

func (o *DeleteGerritTriggerByNameUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGerritTriggerByNameUsingDELETENotFound creates a DeleteGerritTriggerByNameUsingDELETENotFound with default headers values
func NewDeleteGerritTriggerByNameUsingDELETENotFound() *DeleteGerritTriggerByNameUsingDELETENotFound {
	return &DeleteGerritTriggerByNameUsingDELETENotFound{}
}

/* DeleteGerritTriggerByNameUsingDELETENotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteGerritTriggerByNameUsingDELETENotFound struct {
	Payload *models.Error
}

func (o *DeleteGerritTriggerByNameUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{project}/{name}][%d] deleteGerritTriggerByNameUsingDELETENotFound  %+v", 404, o.Payload)
}
func (o *DeleteGerritTriggerByNameUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGerritTriggerByNameUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGerritTriggerByNameUsingDELETEInternalServerError creates a DeleteGerritTriggerByNameUsingDELETEInternalServerError with default headers values
func NewDeleteGerritTriggerByNameUsingDELETEInternalServerError() *DeleteGerritTriggerByNameUsingDELETEInternalServerError {
	return &DeleteGerritTriggerByNameUsingDELETEInternalServerError{}
}

/* DeleteGerritTriggerByNameUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteGerritTriggerByNameUsingDELETEInternalServerError struct {
}

func (o *DeleteGerritTriggerByNameUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{project}/{name}][%d] deleteGerritTriggerByNameUsingDELETEInternalServerError ", 500)
}

func (o *DeleteGerritTriggerByNameUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
