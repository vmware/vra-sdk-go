// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// CloneGerritListenerUsingPOSTReader is a Reader for the CloneGerritListenerUsingPOST structure.
type CloneGerritListenerUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloneGerritListenerUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloneGerritListenerUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCloneGerritListenerUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloneGerritListenerUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCloneGerritListenerUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloneGerritListenerUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCloneGerritListenerUsingPOSTOK creates a CloneGerritListenerUsingPOSTOK with default headers values
func NewCloneGerritListenerUsingPOSTOK() *CloneGerritListenerUsingPOSTOK {
	return &CloneGerritListenerUsingPOSTOK{}
}

/* CloneGerritListenerUsingPOSTOK describes a response with status code 200, with default header values.

'Success' with Gerrit Listener Clone
*/
type CloneGerritListenerUsingPOSTOK struct {
	Payload models.GerritListener
}

func (o *CloneGerritListenerUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/{id}][%d] cloneGerritListenerUsingPOSTOK  %+v", 200, o.Payload)
}
func (o *CloneGerritListenerUsingPOSTOK) GetPayload() models.GerritListener {
	return o.Payload
}

func (o *CloneGerritListenerUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritListener(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewCloneGerritListenerUsingPOSTUnauthorized creates a CloneGerritListenerUsingPOSTUnauthorized with default headers values
func NewCloneGerritListenerUsingPOSTUnauthorized() *CloneGerritListenerUsingPOSTUnauthorized {
	return &CloneGerritListenerUsingPOSTUnauthorized{}
}

/* CloneGerritListenerUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type CloneGerritListenerUsingPOSTUnauthorized struct {
}

func (o *CloneGerritListenerUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/{id}][%d] cloneGerritListenerUsingPOSTUnauthorized ", 401)
}

func (o *CloneGerritListenerUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCloneGerritListenerUsingPOSTForbidden creates a CloneGerritListenerUsingPOSTForbidden with default headers values
func NewCloneGerritListenerUsingPOSTForbidden() *CloneGerritListenerUsingPOSTForbidden {
	return &CloneGerritListenerUsingPOSTForbidden{}
}

/* CloneGerritListenerUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloneGerritListenerUsingPOSTForbidden struct {
}

func (o *CloneGerritListenerUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/{id}][%d] cloneGerritListenerUsingPOSTForbidden ", 403)
}

func (o *CloneGerritListenerUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCloneGerritListenerUsingPOSTNotFound creates a CloneGerritListenerUsingPOSTNotFound with default headers values
func NewCloneGerritListenerUsingPOSTNotFound() *CloneGerritListenerUsingPOSTNotFound {
	return &CloneGerritListenerUsingPOSTNotFound{}
}

/* CloneGerritListenerUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CloneGerritListenerUsingPOSTNotFound struct {
	Payload *models.Error
}

func (o *CloneGerritListenerUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/{id}][%d] cloneGerritListenerUsingPOSTNotFound  %+v", 404, o.Payload)
}
func (o *CloneGerritListenerUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CloneGerritListenerUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloneGerritListenerUsingPOSTInternalServerError creates a CloneGerritListenerUsingPOSTInternalServerError with default headers values
func NewCloneGerritListenerUsingPOSTInternalServerError() *CloneGerritListenerUsingPOSTInternalServerError {
	return &CloneGerritListenerUsingPOSTInternalServerError{}
}

/* CloneGerritListenerUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CloneGerritListenerUsingPOSTInternalServerError struct {
}

func (o *CloneGerritListenerUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/{id}][%d] cloneGerritListenerUsingPOSTInternalServerError ", 500)
}

func (o *CloneGerritListenerUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
