// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeleteGerritTriggerByIDUsingDELETEReader is a Reader for the DeleteGerritTriggerByIDUsingDELETE structure.
type DeleteGerritTriggerByIDUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGerritTriggerByIDUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteGerritTriggerByIDUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteGerritTriggerByIDUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteGerritTriggerByIDUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGerritTriggerByIDUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteGerritTriggerByIDUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteGerritTriggerByIDUsingDELETEOK creates a DeleteGerritTriggerByIDUsingDELETEOK with default headers values
func NewDeleteGerritTriggerByIDUsingDELETEOK() *DeleteGerritTriggerByIDUsingDELETEOK {
	return &DeleteGerritTriggerByIDUsingDELETEOK{}
}

/* DeleteGerritTriggerByIDUsingDELETEOK describes a response with status code 200, with default header values.

'Success' with Gerrit Trigger Delete
*/
type DeleteGerritTriggerByIDUsingDELETEOK struct {
	Payload models.GerritTrigger
}

func (o *DeleteGerritTriggerByIDUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{id}][%d] deleteGerritTriggerByIdUsingDELETEOK  %+v", 200, o.Payload)
}
func (o *DeleteGerritTriggerByIDUsingDELETEOK) GetPayload() models.GerritTrigger {
	return o.Payload
}

func (o *DeleteGerritTriggerByIDUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritTrigger(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewDeleteGerritTriggerByIDUsingDELETEUnauthorized creates a DeleteGerritTriggerByIDUsingDELETEUnauthorized with default headers values
func NewDeleteGerritTriggerByIDUsingDELETEUnauthorized() *DeleteGerritTriggerByIDUsingDELETEUnauthorized {
	return &DeleteGerritTriggerByIDUsingDELETEUnauthorized{}
}

/* DeleteGerritTriggerByIDUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeleteGerritTriggerByIDUsingDELETEUnauthorized struct {
}

func (o *DeleteGerritTriggerByIDUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{id}][%d] deleteGerritTriggerByIdUsingDELETEUnauthorized ", 401)
}

func (o *DeleteGerritTriggerByIDUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGerritTriggerByIDUsingDELETEForbidden creates a DeleteGerritTriggerByIDUsingDELETEForbidden with default headers values
func NewDeleteGerritTriggerByIDUsingDELETEForbidden() *DeleteGerritTriggerByIDUsingDELETEForbidden {
	return &DeleteGerritTriggerByIDUsingDELETEForbidden{}
}

/* DeleteGerritTriggerByIDUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteGerritTriggerByIDUsingDELETEForbidden struct {
}

func (o *DeleteGerritTriggerByIDUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{id}][%d] deleteGerritTriggerByIdUsingDELETEForbidden ", 403)
}

func (o *DeleteGerritTriggerByIDUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGerritTriggerByIDUsingDELETENotFound creates a DeleteGerritTriggerByIDUsingDELETENotFound with default headers values
func NewDeleteGerritTriggerByIDUsingDELETENotFound() *DeleteGerritTriggerByIDUsingDELETENotFound {
	return &DeleteGerritTriggerByIDUsingDELETENotFound{}
}

/* DeleteGerritTriggerByIDUsingDELETENotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteGerritTriggerByIDUsingDELETENotFound struct {
	Payload *models.Error
}

func (o *DeleteGerritTriggerByIDUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{id}][%d] deleteGerritTriggerByIdUsingDELETENotFound  %+v", 404, o.Payload)
}
func (o *DeleteGerritTriggerByIDUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGerritTriggerByIDUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGerritTriggerByIDUsingDELETEInternalServerError creates a DeleteGerritTriggerByIDUsingDELETEInternalServerError with default headers values
func NewDeleteGerritTriggerByIDUsingDELETEInternalServerError() *DeleteGerritTriggerByIDUsingDELETEInternalServerError {
	return &DeleteGerritTriggerByIDUsingDELETEInternalServerError{}
}

/* DeleteGerritTriggerByIDUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteGerritTriggerByIDUsingDELETEInternalServerError struct {
}

func (o *DeleteGerritTriggerByIDUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/gerrit-triggers/{id}][%d] deleteGerritTriggerByIdUsingDELETEInternalServerError ", 500)
}

func (o *DeleteGerritTriggerByIDUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
