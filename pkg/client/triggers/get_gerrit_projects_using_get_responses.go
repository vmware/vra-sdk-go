// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetGerritProjectsUsingGETReader is a Reader for the GetGerritProjectsUsingGET structure.
type GetGerritProjectsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGerritProjectsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGerritProjectsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGerritProjectsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGerritProjectsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGerritProjectsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGerritProjectsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGerritProjectsUsingGETOK creates a GetGerritProjectsUsingGETOK with default headers values
func NewGetGerritProjectsUsingGETOK() *GetGerritProjectsUsingGETOK {
	return &GetGerritProjectsUsingGETOK{}
}

/* GetGerritProjectsUsingGETOK describes a response with status code 200, with default header values.

'Success' with gerrit projects
*/
type GetGerritProjectsUsingGETOK struct {
	Payload string
}

func (o *GetGerritProjectsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{id}/projects][%d] getGerritProjectsUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetGerritProjectsUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *GetGerritProjectsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGerritProjectsUsingGETUnauthorized creates a GetGerritProjectsUsingGETUnauthorized with default headers values
func NewGetGerritProjectsUsingGETUnauthorized() *GetGerritProjectsUsingGETUnauthorized {
	return &GetGerritProjectsUsingGETUnauthorized{}
}

/* GetGerritProjectsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetGerritProjectsUsingGETUnauthorized struct {
}

func (o *GetGerritProjectsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{id}/projects][%d] getGerritProjectsUsingGETUnauthorized ", 401)
}

func (o *GetGerritProjectsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGerritProjectsUsingGETForbidden creates a GetGerritProjectsUsingGETForbidden with default headers values
func NewGetGerritProjectsUsingGETForbidden() *GetGerritProjectsUsingGETForbidden {
	return &GetGerritProjectsUsingGETForbidden{}
}

/* GetGerritProjectsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetGerritProjectsUsingGETForbidden struct {
}

func (o *GetGerritProjectsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{id}/projects][%d] getGerritProjectsUsingGETForbidden ", 403)
}

func (o *GetGerritProjectsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGerritProjectsUsingGETNotFound creates a GetGerritProjectsUsingGETNotFound with default headers values
func NewGetGerritProjectsUsingGETNotFound() *GetGerritProjectsUsingGETNotFound {
	return &GetGerritProjectsUsingGETNotFound{}
}

/* GetGerritProjectsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetGerritProjectsUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetGerritProjectsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{id}/projects][%d] getGerritProjectsUsingGETNotFound  %+v", 404, o.Payload)
}
func (o *GetGerritProjectsUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGerritProjectsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGerritProjectsUsingGETInternalServerError creates a GetGerritProjectsUsingGETInternalServerError with default headers values
func NewGetGerritProjectsUsingGETInternalServerError() *GetGerritProjectsUsingGETInternalServerError {
	return &GetGerritProjectsUsingGETInternalServerError{}
}

/* GetGerritProjectsUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetGerritProjectsUsingGETInternalServerError struct {
}

func (o *GetGerritProjectsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{id}/projects][%d] getGerritProjectsUsingGETInternalServerError ", 500)
}

func (o *GetGerritProjectsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
