// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetGerritTriggerByIDUsingGETReader is a Reader for the GetGerritTriggerByIDUsingGET structure.
type GetGerritTriggerByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGerritTriggerByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGerritTriggerByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGerritTriggerByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGerritTriggerByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGerritTriggerByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGerritTriggerByIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGerritTriggerByIDUsingGETOK creates a GetGerritTriggerByIDUsingGETOK with default headers values
func NewGetGerritTriggerByIDUsingGETOK() *GetGerritTriggerByIDUsingGETOK {
	return &GetGerritTriggerByIDUsingGETOK{}
}

/* GetGerritTriggerByIDUsingGETOK describes a response with status code 200, with default header values.

'Success' with gerrit trigger
*/
type GetGerritTriggerByIDUsingGETOK struct {
	Payload models.GerritTrigger
}

func (o *GetGerritTriggerByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{id}][%d] getGerritTriggerByIdUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetGerritTriggerByIDUsingGETOK) GetPayload() models.GerritTrigger {
	return o.Payload
}

func (o *GetGerritTriggerByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritTrigger(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetGerritTriggerByIDUsingGETUnauthorized creates a GetGerritTriggerByIDUsingGETUnauthorized with default headers values
func NewGetGerritTriggerByIDUsingGETUnauthorized() *GetGerritTriggerByIDUsingGETUnauthorized {
	return &GetGerritTriggerByIDUsingGETUnauthorized{}
}

/* GetGerritTriggerByIDUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetGerritTriggerByIDUsingGETUnauthorized struct {
}

func (o *GetGerritTriggerByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{id}][%d] getGerritTriggerByIdUsingGETUnauthorized ", 401)
}

func (o *GetGerritTriggerByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGerritTriggerByIDUsingGETForbidden creates a GetGerritTriggerByIDUsingGETForbidden with default headers values
func NewGetGerritTriggerByIDUsingGETForbidden() *GetGerritTriggerByIDUsingGETForbidden {
	return &GetGerritTriggerByIDUsingGETForbidden{}
}

/* GetGerritTriggerByIDUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetGerritTriggerByIDUsingGETForbidden struct {
}

func (o *GetGerritTriggerByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{id}][%d] getGerritTriggerByIdUsingGETForbidden ", 403)
}

func (o *GetGerritTriggerByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGerritTriggerByIDUsingGETNotFound creates a GetGerritTriggerByIDUsingGETNotFound with default headers values
func NewGetGerritTriggerByIDUsingGETNotFound() *GetGerritTriggerByIDUsingGETNotFound {
	return &GetGerritTriggerByIDUsingGETNotFound{}
}

/* GetGerritTriggerByIDUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetGerritTriggerByIDUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetGerritTriggerByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{id}][%d] getGerritTriggerByIdUsingGETNotFound  %+v", 404, o.Payload)
}
func (o *GetGerritTriggerByIDUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGerritTriggerByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGerritTriggerByIDUsingGETInternalServerError creates a GetGerritTriggerByIDUsingGETInternalServerError with default headers values
func NewGetGerritTriggerByIDUsingGETInternalServerError() *GetGerritTriggerByIDUsingGETInternalServerError {
	return &GetGerritTriggerByIDUsingGETInternalServerError{}
}

/* GetGerritTriggerByIDUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetGerritTriggerByIDUsingGETInternalServerError struct {
}

func (o *GetGerritTriggerByIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{id}][%d] getGerritTriggerByIdUsingGETInternalServerError ", 500)
}

func (o *GetGerritTriggerByIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
