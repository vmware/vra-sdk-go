// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeleteDockerRegistryEventByIDUsingDELETEReader is a Reader for the DeleteDockerRegistryEventByIDUsingDELETE structure.
type DeleteDockerRegistryEventByIDUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDockerRegistryEventByIDUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDockerRegistryEventByIDUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteDockerRegistryEventByIDUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDockerRegistryEventByIDUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDockerRegistryEventByIDUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDockerRegistryEventByIDUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDockerRegistryEventByIDUsingDELETEOK creates a DeleteDockerRegistryEventByIDUsingDELETEOK with default headers values
func NewDeleteDockerRegistryEventByIDUsingDELETEOK() *DeleteDockerRegistryEventByIDUsingDELETEOK {
	return &DeleteDockerRegistryEventByIDUsingDELETEOK{}
}

/*
DeleteDockerRegistryEventByIDUsingDELETEOK describes a response with status code 200, with default header values.

'Success' with Delete a Docker Registry Event
*/
type DeleteDockerRegistryEventByIDUsingDELETEOK struct {
	Payload models.DockerRegistryEvent
}

// IsSuccess returns true when this delete docker registry event by Id using d e l e t e o k response has a 2xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete docker registry event by Id using d e l e t e o k response has a 3xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete docker registry event by Id using d e l e t e o k response has a 4xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete docker registry event by Id using d e l e t e o k response has a 5xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete docker registry event by Id using d e l e t e o k response a status code equal to that given
func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) GetPayload() models.DockerRegistryEvent {
	return o.Payload
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalDockerRegistryEvent(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewDeleteDockerRegistryEventByIDUsingDELETEUnauthorized creates a DeleteDockerRegistryEventByIDUsingDELETEUnauthorized with default headers values
func NewDeleteDockerRegistryEventByIDUsingDELETEUnauthorized() *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized {
	return &DeleteDockerRegistryEventByIDUsingDELETEUnauthorized{}
}

/*
DeleteDockerRegistryEventByIDUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeleteDockerRegistryEventByIDUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete docker registry event by Id using d e l e t e unauthorized response has a 2xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete docker registry event by Id using d e l e t e unauthorized response has a 3xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete docker registry event by Id using d e l e t e unauthorized response has a 4xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete docker registry event by Id using d e l e t e unauthorized response has a 5xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete docker registry event by Id using d e l e t e unauthorized response a status code equal to that given
func (o *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETEUnauthorized ", 401)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETEUnauthorized ", 401)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDockerRegistryEventByIDUsingDELETEForbidden creates a DeleteDockerRegistryEventByIDUsingDELETEForbidden with default headers values
func NewDeleteDockerRegistryEventByIDUsingDELETEForbidden() *DeleteDockerRegistryEventByIDUsingDELETEForbidden {
	return &DeleteDockerRegistryEventByIDUsingDELETEForbidden{}
}

/*
DeleteDockerRegistryEventByIDUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteDockerRegistryEventByIDUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete docker registry event by Id using d e l e t e forbidden response has a 2xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete docker registry event by Id using d e l e t e forbidden response has a 3xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete docker registry event by Id using d e l e t e forbidden response has a 4xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete docker registry event by Id using d e l e t e forbidden response has a 5xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete docker registry event by Id using d e l e t e forbidden response a status code equal to that given
func (o *DeleteDockerRegistryEventByIDUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETEForbidden ", 403)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETEForbidden ", 403)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDockerRegistryEventByIDUsingDELETENotFound creates a DeleteDockerRegistryEventByIDUsingDELETENotFound with default headers values
func NewDeleteDockerRegistryEventByIDUsingDELETENotFound() *DeleteDockerRegistryEventByIDUsingDELETENotFound {
	return &DeleteDockerRegistryEventByIDUsingDELETENotFound{}
}

/*
DeleteDockerRegistryEventByIDUsingDELETENotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteDockerRegistryEventByIDUsingDELETENotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete docker registry event by Id using d e l e t e not found response has a 2xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete docker registry event by Id using d e l e t e not found response has a 3xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete docker registry event by Id using d e l e t e not found response has a 4xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete docker registry event by Id using d e l e t e not found response has a 5xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete docker registry event by Id using d e l e t e not found response a status code equal to that given
func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteDockerRegistryEventByIDUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDockerRegistryEventByIDUsingDELETEInternalServerError creates a DeleteDockerRegistryEventByIDUsingDELETEInternalServerError with default headers values
func NewDeleteDockerRegistryEventByIDUsingDELETEInternalServerError() *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError {
	return &DeleteDockerRegistryEventByIDUsingDELETEInternalServerError{}
}

/*
DeleteDockerRegistryEventByIDUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteDockerRegistryEventByIDUsingDELETEInternalServerError struct {
}

// IsSuccess returns true when this delete docker registry event by Id using d e l e t e internal server error response has a 2xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete docker registry event by Id using d e l e t e internal server error response has a 3xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete docker registry event by Id using d e l e t e internal server error response has a 4xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete docker registry event by Id using d e l e t e internal server error response has a 5xx status code
func (o *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete docker registry event by Id using d e l e t e internal server error response a status code equal to that given
func (o *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETEInternalServerError ", 500)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/registry-events/{id}][%d] deleteDockerRegistryEventByIdUsingDELETEInternalServerError ", 500)
}

func (o *DeleteDockerRegistryEventByIDUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
