// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetByNameUsingGET1Reader is a Reader for the GetByNameUsingGET1 structure.
type GetByNameUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByNameUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetByNameUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetByNameUsingGET1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetByNameUsingGET1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetByNameUsingGET1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetByNameUsingGET1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetByNameUsingGET1OK creates a GetByNameUsingGET1OK with default headers values
func NewGetByNameUsingGET1OK() *GetByNameUsingGET1OK {
	return &GetByNameUsingGET1OK{}
}

/* GetByNameUsingGET1OK describes a response with status code 200, with default header values.

'Success' with gerrit listener
*/
type GetByNameUsingGET1OK struct {
	Payload models.GerritListener
}

func (o *GetByNameUsingGET1OK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getByNameUsingGET1OK  %+v", 200, o.Payload)
}
func (o *GetByNameUsingGET1OK) GetPayload() models.GerritListener {
	return o.Payload
}

func (o *GetByNameUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritListener(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetByNameUsingGET1Unauthorized creates a GetByNameUsingGET1Unauthorized with default headers values
func NewGetByNameUsingGET1Unauthorized() *GetByNameUsingGET1Unauthorized {
	return &GetByNameUsingGET1Unauthorized{}
}

/* GetByNameUsingGET1Unauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetByNameUsingGET1Unauthorized struct {
}

func (o *GetByNameUsingGET1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getByNameUsingGET1Unauthorized ", 401)
}

func (o *GetByNameUsingGET1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetByNameUsingGET1Forbidden creates a GetByNameUsingGET1Forbidden with default headers values
func NewGetByNameUsingGET1Forbidden() *GetByNameUsingGET1Forbidden {
	return &GetByNameUsingGET1Forbidden{}
}

/* GetByNameUsingGET1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetByNameUsingGET1Forbidden struct {
}

func (o *GetByNameUsingGET1Forbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getByNameUsingGET1Forbidden ", 403)
}

func (o *GetByNameUsingGET1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetByNameUsingGET1NotFound creates a GetByNameUsingGET1NotFound with default headers values
func NewGetByNameUsingGET1NotFound() *GetByNameUsingGET1NotFound {
	return &GetByNameUsingGET1NotFound{}
}

/* GetByNameUsingGET1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetByNameUsingGET1NotFound struct {
	Payload *models.Error
}

func (o *GetByNameUsingGET1NotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getByNameUsingGET1NotFound  %+v", 404, o.Payload)
}
func (o *GetByNameUsingGET1NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByNameUsingGET1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByNameUsingGET1InternalServerError creates a GetByNameUsingGET1InternalServerError with default headers values
func NewGetByNameUsingGET1InternalServerError() *GetByNameUsingGET1InternalServerError {
	return &GetByNameUsingGET1InternalServerError{}
}

/* GetByNameUsingGET1InternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetByNameUsingGET1InternalServerError struct {
}

func (o *GetByNameUsingGET1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-listeners/{project}/{name}][%d] getByNameUsingGET1InternalServerError ", 500)
}

func (o *GetByNameUsingGET1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
