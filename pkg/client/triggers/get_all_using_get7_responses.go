// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetAllUsingGET7Reader is a Reader for the GetAllUsingGET7 structure.
type GetAllUsingGET7Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllUsingGET7Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllUsingGET7OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllUsingGET7Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllUsingGET7Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllUsingGET7NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllUsingGET7InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllUsingGET7OK creates a GetAllUsingGET7OK with default headers values
func NewGetAllUsingGET7OK() *GetAllUsingGET7OK {
	return &GetAllUsingGET7OK{}
}

/* GetAllUsingGET7OK describes a response with status code 200, with default header values.

'Success' with get of Git Events
*/
type GetAllUsingGET7OK struct {
	Payload models.GitEvents
}

func (o *GetAllUsingGET7OK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/git-events][%d] getAllUsingGET7OK  %+v", 200, o.Payload)
}
func (o *GetAllUsingGET7OK) GetPayload() models.GitEvents {
	return o.Payload
}

func (o *GetAllUsingGET7OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGitEvents(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetAllUsingGET7Unauthorized creates a GetAllUsingGET7Unauthorized with default headers values
func NewGetAllUsingGET7Unauthorized() *GetAllUsingGET7Unauthorized {
	return &GetAllUsingGET7Unauthorized{}
}

/* GetAllUsingGET7Unauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetAllUsingGET7Unauthorized struct {
}

func (o *GetAllUsingGET7Unauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/git-events][%d] getAllUsingGET7Unauthorized ", 401)
}

func (o *GetAllUsingGET7Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsingGET7Forbidden creates a GetAllUsingGET7Forbidden with default headers values
func NewGetAllUsingGET7Forbidden() *GetAllUsingGET7Forbidden {
	return &GetAllUsingGET7Forbidden{}
}

/* GetAllUsingGET7Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllUsingGET7Forbidden struct {
}

func (o *GetAllUsingGET7Forbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/git-events][%d] getAllUsingGET7Forbidden ", 403)
}

func (o *GetAllUsingGET7Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsingGET7NotFound creates a GetAllUsingGET7NotFound with default headers values
func NewGetAllUsingGET7NotFound() *GetAllUsingGET7NotFound {
	return &GetAllUsingGET7NotFound{}
}

/* GetAllUsingGET7NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllUsingGET7NotFound struct {
	Payload *models.Error
}

func (o *GetAllUsingGET7NotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/git-events][%d] getAllUsingGET7NotFound  %+v", 404, o.Payload)
}
func (o *GetAllUsingGET7NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllUsingGET7NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsingGET7InternalServerError creates a GetAllUsingGET7InternalServerError with default headers values
func NewGetAllUsingGET7InternalServerError() *GetAllUsingGET7InternalServerError {
	return &GetAllUsingGET7InternalServerError{}
}

/* GetAllUsingGET7InternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetAllUsingGET7InternalServerError struct {
}

func (o *GetAllUsingGET7InternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/git-events][%d] getAllUsingGET7InternalServerError ", 500)
}

func (o *GetAllUsingGET7InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
