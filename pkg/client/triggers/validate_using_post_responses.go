// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ValidateUsingPOSTReader is a Reader for the ValidateUsingPOST structure.
type ValidateUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewValidateUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewValidateUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateUsingPOSTOK creates a ValidateUsingPOSTOK with default headers values
func NewValidateUsingPOSTOK() *ValidateUsingPOSTOK {
	return &ValidateUsingPOSTOK{}
}

/* ValidateUsingPOSTOK describes a response with status code 200, with default header values.

'Success' with Gerrit Listener Validation
*/
type ValidateUsingPOSTOK struct {
	Payload models.GerritListener
}

func (o *ValidateUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/validate][%d] validateUsingPOSTOK  %+v", 200, o.Payload)
}
func (o *ValidateUsingPOSTOK) GetPayload() models.GerritListener {
	return o.Payload
}

func (o *ValidateUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritListener(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewValidateUsingPOSTUnauthorized creates a ValidateUsingPOSTUnauthorized with default headers values
func NewValidateUsingPOSTUnauthorized() *ValidateUsingPOSTUnauthorized {
	return &ValidateUsingPOSTUnauthorized{}
}

/* ValidateUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type ValidateUsingPOSTUnauthorized struct {
}

func (o *ValidateUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/validate][%d] validateUsingPOSTUnauthorized ", 401)
}

func (o *ValidateUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateUsingPOSTForbidden creates a ValidateUsingPOSTForbidden with default headers values
func NewValidateUsingPOSTForbidden() *ValidateUsingPOSTForbidden {
	return &ValidateUsingPOSTForbidden{}
}

/* ValidateUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ValidateUsingPOSTForbidden struct {
}

func (o *ValidateUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/validate][%d] validateUsingPOSTForbidden ", 403)
}

func (o *ValidateUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateUsingPOSTNotFound creates a ValidateUsingPOSTNotFound with default headers values
func NewValidateUsingPOSTNotFound() *ValidateUsingPOSTNotFound {
	return &ValidateUsingPOSTNotFound{}
}

/* ValidateUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateUsingPOSTNotFound struct {
	Payload *models.Error
}

func (o *ValidateUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/validate][%d] validateUsingPOSTNotFound  %+v", 404, o.Payload)
}
func (o *ValidateUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateUsingPOSTInternalServerError creates a ValidateUsingPOSTInternalServerError with default headers values
func NewValidateUsingPOSTInternalServerError() *ValidateUsingPOSTInternalServerError {
	return &ValidateUsingPOSTInternalServerError{}
}

/* ValidateUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ValidateUsingPOSTInternalServerError struct {
}

func (o *ValidateUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /codestream/api/gerrit-listeners/validate][%d] validateUsingPOSTInternalServerError ", 500)
}

func (o *ValidateUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
