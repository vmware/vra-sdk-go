// Code generated by go-swagger; DO NOT EDIT.

package notification_scenario_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new notification scenario configuration API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for notification scenario configuration API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateOrUpdateUsingPOST2(params *CreateOrUpdateUsingPOST2Params, opts ...ClientOption) (*CreateOrUpdateUsingPOST2OK, error)

	DeleteUsingDELETE5(params *DeleteUsingDELETE5Params, opts ...ClientOption) (*DeleteUsingDELETE5NoContent, error)

	GetAllScenarioConfigsUsingGET2(params *GetAllScenarioConfigsUsingGET2Params, opts ...ClientOption) (*GetAllScenarioConfigsUsingGET2OK, error)

	GetScenarioConfigUsingGET2(params *GetScenarioConfigUsingGET2Params, opts ...ClientOption) (*GetScenarioConfigUsingGET2OK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateOrUpdateUsingPOST2 creates or updates a notification scenario configuration of an organization
*/
func (a *Client) CreateOrUpdateUsingPOST2(params *CreateOrUpdateUsingPOST2Params, opts ...ClientOption) (*CreateOrUpdateUsingPOST2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateOrUpdateUsingPOST2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "createOrUpdateUsingPOST_2",
		Method:             "POST",
		PathPattern:        "/notification/api/scenario-configs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateOrUpdateUsingPOST2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateOrUpdateUsingPOST2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createOrUpdateUsingPOST_2: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteUsingDELETE5 deletes a notification scenario configuration of an organization
*/
func (a *Client) DeleteUsingDELETE5(params *DeleteUsingDELETE5Params, opts ...ClientOption) (*DeleteUsingDELETE5NoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteUsingDELETE5Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteUsingDELETE_5",
		Method:             "DELETE",
		PathPattern:        "/notification/api/scenario-configs/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteUsingDELETE5Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteUsingDELETE5NoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteUsingDELETE_5: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAllScenarioConfigsUsingGET2 retrieves all notification scenario configurations of an organization
*/
func (a *Client) GetAllScenarioConfigsUsingGET2(params *GetAllScenarioConfigsUsingGET2Params, opts ...ClientOption) (*GetAllScenarioConfigsUsingGET2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAllScenarioConfigsUsingGET2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "getAllScenarioConfigsUsingGET_2",
		Method:             "GET",
		PathPattern:        "/notification/api/scenario-configs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAllScenarioConfigsUsingGET2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAllScenarioConfigsUsingGET2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAllScenarioConfigsUsingGET_2: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetScenarioConfigUsingGET2 retrieves a notification scenario configuration by scenario id of an organization
*/
func (a *Client) GetScenarioConfigUsingGET2(params *GetScenarioConfigUsingGET2Params, opts ...ClientOption) (*GetScenarioConfigUsingGET2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetScenarioConfigUsingGET2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "getScenarioConfigUsingGET_2",
		Method:             "GET",
		PathPattern:        "/notification/api/scenario-configs/{scenarioId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetScenarioConfigUsingGET2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetScenarioConfigUsingGET2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getScenarioConfigUsingGET_2: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
