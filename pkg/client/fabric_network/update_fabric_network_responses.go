// Code generated by go-swagger; DO NOT EDIT.

package fabric_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateFabricNetworkReader is a Reader for the UpdateFabricNetwork structure.
type UpdateFabricNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFabricNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateFabricNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateFabricNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateFabricNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateFabricNetworkOK creates a UpdateFabricNetworkOK with default headers values
func NewUpdateFabricNetworkOK() *UpdateFabricNetworkOK {
	return &UpdateFabricNetworkOK{}
}

/*
UpdateFabricNetworkOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateFabricNetworkOK struct {
	Payload *models.FabricNetwork
}

// IsSuccess returns true when this update fabric network o k response has a 2xx status code
func (o *UpdateFabricNetworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update fabric network o k response has a 3xx status code
func (o *UpdateFabricNetworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update fabric network o k response has a 4xx status code
func (o *UpdateFabricNetworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update fabric network o k response has a 5xx status code
func (o *UpdateFabricNetworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update fabric network o k response a status code equal to that given
func (o *UpdateFabricNetworkOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateFabricNetworkOK) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/fabric-networks/{id}][%d] updateFabricNetworkOK  %+v", 200, o.Payload)
}

func (o *UpdateFabricNetworkOK) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/fabric-networks/{id}][%d] updateFabricNetworkOK  %+v", 200, o.Payload)
}

func (o *UpdateFabricNetworkOK) GetPayload() *models.FabricNetwork {
	return o.Payload
}

func (o *UpdateFabricNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FabricNetwork)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFabricNetworkForbidden creates a UpdateFabricNetworkForbidden with default headers values
func NewUpdateFabricNetworkForbidden() *UpdateFabricNetworkForbidden {
	return &UpdateFabricNetworkForbidden{}
}

/*
UpdateFabricNetworkForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateFabricNetworkForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this update fabric network forbidden response has a 2xx status code
func (o *UpdateFabricNetworkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update fabric network forbidden response has a 3xx status code
func (o *UpdateFabricNetworkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update fabric network forbidden response has a 4xx status code
func (o *UpdateFabricNetworkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update fabric network forbidden response has a 5xx status code
func (o *UpdateFabricNetworkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update fabric network forbidden response a status code equal to that given
func (o *UpdateFabricNetworkForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateFabricNetworkForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/fabric-networks/{id}][%d] updateFabricNetworkForbidden  %+v", 403, o.Payload)
}

func (o *UpdateFabricNetworkForbidden) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/fabric-networks/{id}][%d] updateFabricNetworkForbidden  %+v", 403, o.Payload)
}

func (o *UpdateFabricNetworkForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *UpdateFabricNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFabricNetworkNotFound creates a UpdateFabricNetworkNotFound with default headers values
func NewUpdateFabricNetworkNotFound() *UpdateFabricNetworkNotFound {
	return &UpdateFabricNetworkNotFound{}
}

/*
UpdateFabricNetworkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateFabricNetworkNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update fabric network not found response has a 2xx status code
func (o *UpdateFabricNetworkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update fabric network not found response has a 3xx status code
func (o *UpdateFabricNetworkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update fabric network not found response has a 4xx status code
func (o *UpdateFabricNetworkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update fabric network not found response has a 5xx status code
func (o *UpdateFabricNetworkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update fabric network not found response a status code equal to that given
func (o *UpdateFabricNetworkNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateFabricNetworkNotFound) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/fabric-networks/{id}][%d] updateFabricNetworkNotFound  %+v", 404, o.Payload)
}

func (o *UpdateFabricNetworkNotFound) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/fabric-networks/{id}][%d] updateFabricNetworkNotFound  %+v", 404, o.Payload)
}

func (o *UpdateFabricNetworkNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateFabricNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
