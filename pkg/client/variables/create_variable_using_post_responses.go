// Code generated by go-swagger; DO NOT EDIT.

package variables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// CreateVariableUsingPOSTReader is a Reader for the CreateVariableUsingPOST structure.
type CreateVariableUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVariableUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateVariableUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateVariableUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateVariableUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateVariableUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateVariableUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateVariableUsingPOSTOK creates a CreateVariableUsingPOSTOK with default headers values
func NewCreateVariableUsingPOSTOK() *CreateVariableUsingPOSTOK {
	return &CreateVariableUsingPOSTOK{}
}

/* CreateVariableUsingPOSTOK describes a response with status code 200, with default header values.

'Success' with Variable creation
*/
type CreateVariableUsingPOSTOK struct {
	Payload *models.Variable
}

func (o *CreateVariableUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /codestream/api/variables][%d] createVariableUsingPOSTOK  %+v", 200, o.Payload)
}
func (o *CreateVariableUsingPOSTOK) GetPayload() *models.Variable {
	return o.Payload
}

func (o *CreateVariableUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Variable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVariableUsingPOSTUnauthorized creates a CreateVariableUsingPOSTUnauthorized with default headers values
func NewCreateVariableUsingPOSTUnauthorized() *CreateVariableUsingPOSTUnauthorized {
	return &CreateVariableUsingPOSTUnauthorized{}
}

/* CreateVariableUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type CreateVariableUsingPOSTUnauthorized struct {
}

func (o *CreateVariableUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /codestream/api/variables][%d] createVariableUsingPOSTUnauthorized ", 401)
}

func (o *CreateVariableUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVariableUsingPOSTForbidden creates a CreateVariableUsingPOSTForbidden with default headers values
func NewCreateVariableUsingPOSTForbidden() *CreateVariableUsingPOSTForbidden {
	return &CreateVariableUsingPOSTForbidden{}
}

/* CreateVariableUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateVariableUsingPOSTForbidden struct {
}

func (o *CreateVariableUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /codestream/api/variables][%d] createVariableUsingPOSTForbidden ", 403)
}

func (o *CreateVariableUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVariableUsingPOSTNotFound creates a CreateVariableUsingPOSTNotFound with default headers values
func NewCreateVariableUsingPOSTNotFound() *CreateVariableUsingPOSTNotFound {
	return &CreateVariableUsingPOSTNotFound{}
}

/* CreateVariableUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateVariableUsingPOSTNotFound struct {
	Payload *models.Error
}

func (o *CreateVariableUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /codestream/api/variables][%d] createVariableUsingPOSTNotFound  %+v", 404, o.Payload)
}
func (o *CreateVariableUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateVariableUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVariableUsingPOSTInternalServerError creates a CreateVariableUsingPOSTInternalServerError with default headers values
func NewCreateVariableUsingPOSTInternalServerError() *CreateVariableUsingPOSTInternalServerError {
	return &CreateVariableUsingPOSTInternalServerError{}
}

/* CreateVariableUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CreateVariableUsingPOSTInternalServerError struct {
}

func (o *CreateVariableUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /codestream/api/variables][%d] createVariableUsingPOSTInternalServerError ", 500)
}

func (o *CreateVariableUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
