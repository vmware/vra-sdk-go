// Code generated by go-swagger; DO NOT EDIT.

package variables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeleteVariableByNameUsingDELETEReader is a Reader for the DeleteVariableByNameUsingDELETE structure.
type DeleteVariableByNameUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVariableByNameUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVariableByNameUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteVariableByNameUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVariableByNameUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVariableByNameUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteVariableByNameUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVariableByNameUsingDELETEOK creates a DeleteVariableByNameUsingDELETEOK with default headers values
func NewDeleteVariableByNameUsingDELETEOK() *DeleteVariableByNameUsingDELETEOK {
	return &DeleteVariableByNameUsingDELETEOK{}
}

/* DeleteVariableByNameUsingDELETEOK describes a response with status code 200, with default header values.

'Success' with deleted Variable
*/
type DeleteVariableByNameUsingDELETEOK struct {
	Payload *models.Variable
}

func (o *DeleteVariableByNameUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/variables/{project}/{name}][%d] deleteVariableByNameUsingDELETEOK  %+v", 200, o.Payload)
}
func (o *DeleteVariableByNameUsingDELETEOK) GetPayload() *models.Variable {
	return o.Payload
}

func (o *DeleteVariableByNameUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Variable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariableByNameUsingDELETEUnauthorized creates a DeleteVariableByNameUsingDELETEUnauthorized with default headers values
func NewDeleteVariableByNameUsingDELETEUnauthorized() *DeleteVariableByNameUsingDELETEUnauthorized {
	return &DeleteVariableByNameUsingDELETEUnauthorized{}
}

/* DeleteVariableByNameUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeleteVariableByNameUsingDELETEUnauthorized struct {
}

func (o *DeleteVariableByNameUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/variables/{project}/{name}][%d] deleteVariableByNameUsingDELETEUnauthorized ", 401)
}

func (o *DeleteVariableByNameUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVariableByNameUsingDELETEForbidden creates a DeleteVariableByNameUsingDELETEForbidden with default headers values
func NewDeleteVariableByNameUsingDELETEForbidden() *DeleteVariableByNameUsingDELETEForbidden {
	return &DeleteVariableByNameUsingDELETEForbidden{}
}

/* DeleteVariableByNameUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteVariableByNameUsingDELETEForbidden struct {
}

func (o *DeleteVariableByNameUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/variables/{project}/{name}][%d] deleteVariableByNameUsingDELETEForbidden ", 403)
}

func (o *DeleteVariableByNameUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVariableByNameUsingDELETENotFound creates a DeleteVariableByNameUsingDELETENotFound with default headers values
func NewDeleteVariableByNameUsingDELETENotFound() *DeleteVariableByNameUsingDELETENotFound {
	return &DeleteVariableByNameUsingDELETENotFound{}
}

/* DeleteVariableByNameUsingDELETENotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteVariableByNameUsingDELETENotFound struct {
	Payload *models.Error
}

func (o *DeleteVariableByNameUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/variables/{project}/{name}][%d] deleteVariableByNameUsingDELETENotFound  %+v", 404, o.Payload)
}
func (o *DeleteVariableByNameUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteVariableByNameUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariableByNameUsingDELETEInternalServerError creates a DeleteVariableByNameUsingDELETEInternalServerError with default headers values
func NewDeleteVariableByNameUsingDELETEInternalServerError() *DeleteVariableByNameUsingDELETEInternalServerError {
	return &DeleteVariableByNameUsingDELETEInternalServerError{}
}

/* DeleteVariableByNameUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteVariableByNameUsingDELETEInternalServerError struct {
}

func (o *DeleteVariableByNameUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/variables/{project}/{name}][%d] deleteVariableByNameUsingDELETEInternalServerError ", 500)
}

func (o *DeleteVariableByNameUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
