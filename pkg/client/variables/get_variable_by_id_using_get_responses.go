// Code generated by go-swagger; DO NOT EDIT.

package variables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetVariableByIDUsingGETReader is a Reader for the GetVariableByIDUsingGET structure.
type GetVariableByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVariableByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVariableByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVariableByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVariableByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVariableByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVariableByIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVariableByIDUsingGETOK creates a GetVariableByIDUsingGETOK with default headers values
func NewGetVariableByIDUsingGETOK() *GetVariableByIDUsingGETOK {
	return &GetVariableByIDUsingGETOK{}
}

/* GetVariableByIDUsingGETOK describes a response with status code 200, with default header values.

'Success' with the requested Variable
*/
type GetVariableByIDUsingGETOK struct {
	Payload *models.Variable
}

func (o *GetVariableByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/variables/{id}][%d] getVariableByIdUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetVariableByIDUsingGETOK) GetPayload() *models.Variable {
	return o.Payload
}

func (o *GetVariableByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Variable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariableByIDUsingGETUnauthorized creates a GetVariableByIDUsingGETUnauthorized with default headers values
func NewGetVariableByIDUsingGETUnauthorized() *GetVariableByIDUsingGETUnauthorized {
	return &GetVariableByIDUsingGETUnauthorized{}
}

/* GetVariableByIDUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetVariableByIDUsingGETUnauthorized struct {
}

func (o *GetVariableByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/variables/{id}][%d] getVariableByIdUsingGETUnauthorized ", 401)
}

func (o *GetVariableByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVariableByIDUsingGETForbidden creates a GetVariableByIDUsingGETForbidden with default headers values
func NewGetVariableByIDUsingGETForbidden() *GetVariableByIDUsingGETForbidden {
	return &GetVariableByIDUsingGETForbidden{}
}

/* GetVariableByIDUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetVariableByIDUsingGETForbidden struct {
}

func (o *GetVariableByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/variables/{id}][%d] getVariableByIdUsingGETForbidden ", 403)
}

func (o *GetVariableByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVariableByIDUsingGETNotFound creates a GetVariableByIDUsingGETNotFound with default headers values
func NewGetVariableByIDUsingGETNotFound() *GetVariableByIDUsingGETNotFound {
	return &GetVariableByIDUsingGETNotFound{}
}

/* GetVariableByIDUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVariableByIDUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetVariableByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/variables/{id}][%d] getVariableByIdUsingGETNotFound  %+v", 404, o.Payload)
}
func (o *GetVariableByIDUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVariableByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariableByIDUsingGETInternalServerError creates a GetVariableByIDUsingGETInternalServerError with default headers values
func NewGetVariableByIDUsingGETInternalServerError() *GetVariableByIDUsingGETInternalServerError {
	return &GetVariableByIDUsingGETInternalServerError{}
}

/* GetVariableByIDUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetVariableByIDUsingGETInternalServerError struct {
}

func (o *GetVariableByIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/variables/{id}][%d] getVariableByIdUsingGETInternalServerError ", 500)
}

func (o *GetVariableByIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
