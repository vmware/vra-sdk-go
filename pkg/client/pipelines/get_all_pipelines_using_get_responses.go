// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetAllPipelinesUsingGETReader is a Reader for the GetAllPipelinesUsingGET structure.
type GetAllPipelinesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllPipelinesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllPipelinesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllPipelinesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllPipelinesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllPipelinesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllPipelinesUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllPipelinesUsingGETOK creates a GetAllPipelinesUsingGETOK with default headers values
func NewGetAllPipelinesUsingGETOK() *GetAllPipelinesUsingGETOK {
	return &GetAllPipelinesUsingGETOK{}
}

/*
GetAllPipelinesUsingGETOK describes a response with status code 200, with default header values.

'Success' with the requested Pipelines
*/
type GetAllPipelinesUsingGETOK struct {
	Payload models.Pipelines
}

// IsSuccess returns true when this get all pipelines using g e t o k response has a 2xx status code
func (o *GetAllPipelinesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all pipelines using g e t o k response has a 3xx status code
func (o *GetAllPipelinesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all pipelines using g e t o k response has a 4xx status code
func (o *GetAllPipelinesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all pipelines using g e t o k response has a 5xx status code
func (o *GetAllPipelinesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all pipelines using g e t o k response a status code equal to that given
func (o *GetAllPipelinesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAllPipelinesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllPipelinesUsingGETOK) String() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllPipelinesUsingGETOK) GetPayload() models.Pipelines {
	return o.Payload
}

func (o *GetAllPipelinesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalPipelines(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetAllPipelinesUsingGETUnauthorized creates a GetAllPipelinesUsingGETUnauthorized with default headers values
func NewGetAllPipelinesUsingGETUnauthorized() *GetAllPipelinesUsingGETUnauthorized {
	return &GetAllPipelinesUsingGETUnauthorized{}
}

/*
GetAllPipelinesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetAllPipelinesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all pipelines using g e t unauthorized response has a 2xx status code
func (o *GetAllPipelinesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all pipelines using g e t unauthorized response has a 3xx status code
func (o *GetAllPipelinesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all pipelines using g e t unauthorized response has a 4xx status code
func (o *GetAllPipelinesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all pipelines using g e t unauthorized response has a 5xx status code
func (o *GetAllPipelinesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all pipelines using g e t unauthorized response a status code equal to that given
func (o *GetAllPipelinesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAllPipelinesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETUnauthorized ", 401)
}

func (o *GetAllPipelinesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETUnauthorized ", 401)
}

func (o *GetAllPipelinesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllPipelinesUsingGETForbidden creates a GetAllPipelinesUsingGETForbidden with default headers values
func NewGetAllPipelinesUsingGETForbidden() *GetAllPipelinesUsingGETForbidden {
	return &GetAllPipelinesUsingGETForbidden{}
}

/*
GetAllPipelinesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllPipelinesUsingGETForbidden struct {
}

// IsSuccess returns true when this get all pipelines using g e t forbidden response has a 2xx status code
func (o *GetAllPipelinesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all pipelines using g e t forbidden response has a 3xx status code
func (o *GetAllPipelinesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all pipelines using g e t forbidden response has a 4xx status code
func (o *GetAllPipelinesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all pipelines using g e t forbidden response has a 5xx status code
func (o *GetAllPipelinesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all pipelines using g e t forbidden response a status code equal to that given
func (o *GetAllPipelinesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAllPipelinesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETForbidden ", 403)
}

func (o *GetAllPipelinesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETForbidden ", 403)
}

func (o *GetAllPipelinesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllPipelinesUsingGETNotFound creates a GetAllPipelinesUsingGETNotFound with default headers values
func NewGetAllPipelinesUsingGETNotFound() *GetAllPipelinesUsingGETNotFound {
	return &GetAllPipelinesUsingGETNotFound{}
}

/*
GetAllPipelinesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllPipelinesUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all pipelines using g e t not found response has a 2xx status code
func (o *GetAllPipelinesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all pipelines using g e t not found response has a 3xx status code
func (o *GetAllPipelinesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all pipelines using g e t not found response has a 4xx status code
func (o *GetAllPipelinesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all pipelines using g e t not found response has a 5xx status code
func (o *GetAllPipelinesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all pipelines using g e t not found response a status code equal to that given
func (o *GetAllPipelinesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAllPipelinesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetAllPipelinesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetAllPipelinesUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllPipelinesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPipelinesUsingGETInternalServerError creates a GetAllPipelinesUsingGETInternalServerError with default headers values
func NewGetAllPipelinesUsingGETInternalServerError() *GetAllPipelinesUsingGETInternalServerError {
	return &GetAllPipelinesUsingGETInternalServerError{}
}

/*
GetAllPipelinesUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetAllPipelinesUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get all pipelines using g e t internal server error response has a 2xx status code
func (o *GetAllPipelinesUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all pipelines using g e t internal server error response has a 3xx status code
func (o *GetAllPipelinesUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all pipelines using g e t internal server error response has a 4xx status code
func (o *GetAllPipelinesUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all pipelines using g e t internal server error response has a 5xx status code
func (o *GetAllPipelinesUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all pipelines using g e t internal server error response a status code equal to that given
func (o *GetAllPipelinesUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAllPipelinesUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETInternalServerError ", 500)
}

func (o *GetAllPipelinesUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllPipelinesUsingGETInternalServerError ", 500)
}

func (o *GetAllPipelinesUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
