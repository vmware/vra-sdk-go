// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdatePipelineUsingPUTReader is a Reader for the UpdatePipelineUsingPUT structure.
type UpdatePipelineUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePipelineUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePipelineUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdatePipelineUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePipelineUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePipelineUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePipelineUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePipelineUsingPUTOK creates a UpdatePipelineUsingPUTOK with default headers values
func NewUpdatePipelineUsingPUTOK() *UpdatePipelineUsingPUTOK {
	return &UpdatePipelineUsingPUTOK{}
}

/*
UpdatePipelineUsingPUTOK describes a response with status code 200, with default header values.

'Success' with the updated Pipeline
*/
type UpdatePipelineUsingPUTOK struct {
	Payload models.Pipeline
}

// IsSuccess returns true when this update pipeline using p u t o k response has a 2xx status code
func (o *UpdatePipelineUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update pipeline using p u t o k response has a 3xx status code
func (o *UpdatePipelineUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update pipeline using p u t o k response has a 4xx status code
func (o *UpdatePipelineUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update pipeline using p u t o k response has a 5xx status code
func (o *UpdatePipelineUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update pipeline using p u t o k response a status code equal to that given
func (o *UpdatePipelineUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdatePipelineUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdatePipelineUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdatePipelineUsingPUTOK) GetPayload() models.Pipeline {
	return o.Payload
}

func (o *UpdatePipelineUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalPipeline(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewUpdatePipelineUsingPUTUnauthorized creates a UpdatePipelineUsingPUTUnauthorized with default headers values
func NewUpdatePipelineUsingPUTUnauthorized() *UpdatePipelineUsingPUTUnauthorized {
	return &UpdatePipelineUsingPUTUnauthorized{}
}

/*
UpdatePipelineUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type UpdatePipelineUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update pipeline using p u t unauthorized response has a 2xx status code
func (o *UpdatePipelineUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update pipeline using p u t unauthorized response has a 3xx status code
func (o *UpdatePipelineUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update pipeline using p u t unauthorized response has a 4xx status code
func (o *UpdatePipelineUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update pipeline using p u t unauthorized response has a 5xx status code
func (o *UpdatePipelineUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update pipeline using p u t unauthorized response a status code equal to that given
func (o *UpdatePipelineUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdatePipelineUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTUnauthorized ", 401)
}

func (o *UpdatePipelineUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTUnauthorized ", 401)
}

func (o *UpdatePipelineUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePipelineUsingPUTForbidden creates a UpdatePipelineUsingPUTForbidden with default headers values
func NewUpdatePipelineUsingPUTForbidden() *UpdatePipelineUsingPUTForbidden {
	return &UpdatePipelineUsingPUTForbidden{}
}

/*
UpdatePipelineUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdatePipelineUsingPUTForbidden struct {
}

// IsSuccess returns true when this update pipeline using p u t forbidden response has a 2xx status code
func (o *UpdatePipelineUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update pipeline using p u t forbidden response has a 3xx status code
func (o *UpdatePipelineUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update pipeline using p u t forbidden response has a 4xx status code
func (o *UpdatePipelineUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update pipeline using p u t forbidden response has a 5xx status code
func (o *UpdatePipelineUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update pipeline using p u t forbidden response a status code equal to that given
func (o *UpdatePipelineUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdatePipelineUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTForbidden ", 403)
}

func (o *UpdatePipelineUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTForbidden ", 403)
}

func (o *UpdatePipelineUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePipelineUsingPUTNotFound creates a UpdatePipelineUsingPUTNotFound with default headers values
func NewUpdatePipelineUsingPUTNotFound() *UpdatePipelineUsingPUTNotFound {
	return &UpdatePipelineUsingPUTNotFound{}
}

/*
UpdatePipelineUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdatePipelineUsingPUTNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update pipeline using p u t not found response has a 2xx status code
func (o *UpdatePipelineUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update pipeline using p u t not found response has a 3xx status code
func (o *UpdatePipelineUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update pipeline using p u t not found response has a 4xx status code
func (o *UpdatePipelineUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update pipeline using p u t not found response has a 5xx status code
func (o *UpdatePipelineUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update pipeline using p u t not found response a status code equal to that given
func (o *UpdatePipelineUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdatePipelineUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTNotFound  %+v", 404, o.Payload)
}

func (o *UpdatePipelineUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTNotFound  %+v", 404, o.Payload)
}

func (o *UpdatePipelineUsingPUTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePipelineUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePipelineUsingPUTInternalServerError creates a UpdatePipelineUsingPUTInternalServerError with default headers values
func NewUpdatePipelineUsingPUTInternalServerError() *UpdatePipelineUsingPUTInternalServerError {
	return &UpdatePipelineUsingPUTInternalServerError{}
}

/*
UpdatePipelineUsingPUTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdatePipelineUsingPUTInternalServerError struct {
}

// IsSuccess returns true when this update pipeline using p u t internal server error response has a 2xx status code
func (o *UpdatePipelineUsingPUTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update pipeline using p u t internal server error response has a 3xx status code
func (o *UpdatePipelineUsingPUTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update pipeline using p u t internal server error response has a 4xx status code
func (o *UpdatePipelineUsingPUTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update pipeline using p u t internal server error response has a 5xx status code
func (o *UpdatePipelineUsingPUTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update pipeline using p u t internal server error response a status code equal to that given
func (o *UpdatePipelineUsingPUTInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdatePipelineUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTInternalServerError ", 500)
}

func (o *UpdatePipelineUsingPUTInternalServerError) String() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updatePipelineUsingPUTInternalServerError ", 500)
}

func (o *UpdatePipelineUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
