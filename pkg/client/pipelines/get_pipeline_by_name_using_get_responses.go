// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetPipelineByNameUsingGETReader is a Reader for the GetPipelineByNameUsingGET structure.
type GetPipelineByNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPipelineByNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPipelineByNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPipelineByNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPipelineByNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPipelineByNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPipelineByNameUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPipelineByNameUsingGETOK creates a GetPipelineByNameUsingGETOK with default headers values
func NewGetPipelineByNameUsingGETOK() *GetPipelineByNameUsingGETOK {
	return &GetPipelineByNameUsingGETOK{}
}

/* GetPipelineByNameUsingGETOK describes a response with status code 200, with default header values.

'Success' with the requested Pipeline
*/
type GetPipelineByNameUsingGETOK struct {
	Payload models.Pipeline
}

func (o *GetPipelineByNameUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}][%d] getPipelineByNameUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetPipelineByNameUsingGETOK) GetPayload() models.Pipeline {
	return o.Payload
}

func (o *GetPipelineByNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalPipeline(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetPipelineByNameUsingGETUnauthorized creates a GetPipelineByNameUsingGETUnauthorized with default headers values
func NewGetPipelineByNameUsingGETUnauthorized() *GetPipelineByNameUsingGETUnauthorized {
	return &GetPipelineByNameUsingGETUnauthorized{}
}

/* GetPipelineByNameUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetPipelineByNameUsingGETUnauthorized struct {
}

func (o *GetPipelineByNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}][%d] getPipelineByNameUsingGETUnauthorized ", 401)
}

func (o *GetPipelineByNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPipelineByNameUsingGETForbidden creates a GetPipelineByNameUsingGETForbidden with default headers values
func NewGetPipelineByNameUsingGETForbidden() *GetPipelineByNameUsingGETForbidden {
	return &GetPipelineByNameUsingGETForbidden{}
}

/* GetPipelineByNameUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPipelineByNameUsingGETForbidden struct {
}

func (o *GetPipelineByNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}][%d] getPipelineByNameUsingGETForbidden ", 403)
}

func (o *GetPipelineByNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPipelineByNameUsingGETNotFound creates a GetPipelineByNameUsingGETNotFound with default headers values
func NewGetPipelineByNameUsingGETNotFound() *GetPipelineByNameUsingGETNotFound {
	return &GetPipelineByNameUsingGETNotFound{}
}

/* GetPipelineByNameUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPipelineByNameUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetPipelineByNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}][%d] getPipelineByNameUsingGETNotFound  %+v", 404, o.Payload)
}
func (o *GetPipelineByNameUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPipelineByNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPipelineByNameUsingGETInternalServerError creates a GetPipelineByNameUsingGETInternalServerError with default headers values
func NewGetPipelineByNameUsingGETInternalServerError() *GetPipelineByNameUsingGETInternalServerError {
	return &GetPipelineByNameUsingGETInternalServerError{}
}

/* GetPipelineByNameUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetPipelineByNameUsingGETInternalServerError struct {
}

func (o *GetPipelineByNameUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}][%d] getPipelineByNameUsingGETInternalServerError ", 500)
}

func (o *GetPipelineByNameUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
