// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeletePipelineByIDUsingDELETEReader is a Reader for the DeletePipelineByIDUsingDELETE structure.
type DeletePipelineByIDUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePipelineByIDUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePipelineByIDUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePipelineByIDUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePipelineByIDUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePipelineByIDUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePipelineByIDUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeletePipelineByIDUsingDELETEOK creates a DeletePipelineByIDUsingDELETEOK with default headers values
func NewDeletePipelineByIDUsingDELETEOK() *DeletePipelineByIDUsingDELETEOK {
	return &DeletePipelineByIDUsingDELETEOK{}
}

/*
DeletePipelineByIDUsingDELETEOK describes a response with status code 200, with default header values.

'Success' with the deleted Pipeline
*/
type DeletePipelineByIDUsingDELETEOK struct {
	Payload models.Pipeline
}

// IsSuccess returns true when this delete pipeline by Id using d e l e t e o k response has a 2xx status code
func (o *DeletePipelineByIDUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete pipeline by Id using d e l e t e o k response has a 3xx status code
func (o *DeletePipelineByIDUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline by Id using d e l e t e o k response has a 4xx status code
func (o *DeletePipelineByIDUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete pipeline by Id using d e l e t e o k response has a 5xx status code
func (o *DeletePipelineByIDUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline by Id using d e l e t e o k response a status code equal to that given
func (o *DeletePipelineByIDUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeletePipelineByIDUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeletePipelineByIDUsingDELETEOK) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeletePipelineByIDUsingDELETEOK) GetPayload() models.Pipeline {
	return o.Payload
}

func (o *DeletePipelineByIDUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalPipeline(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewDeletePipelineByIDUsingDELETEUnauthorized creates a DeletePipelineByIDUsingDELETEUnauthorized with default headers values
func NewDeletePipelineByIDUsingDELETEUnauthorized() *DeletePipelineByIDUsingDELETEUnauthorized {
	return &DeletePipelineByIDUsingDELETEUnauthorized{}
}

/*
DeletePipelineByIDUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeletePipelineByIDUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete pipeline by Id using d e l e t e unauthorized response has a 2xx status code
func (o *DeletePipelineByIDUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline by Id using d e l e t e unauthorized response has a 3xx status code
func (o *DeletePipelineByIDUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline by Id using d e l e t e unauthorized response has a 4xx status code
func (o *DeletePipelineByIDUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pipeline by Id using d e l e t e unauthorized response has a 5xx status code
func (o *DeletePipelineByIDUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline by Id using d e l e t e unauthorized response a status code equal to that given
func (o *DeletePipelineByIDUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeletePipelineByIDUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETEUnauthorized ", 401)
}

func (o *DeletePipelineByIDUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETEUnauthorized ", 401)
}

func (o *DeletePipelineByIDUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePipelineByIDUsingDELETEForbidden creates a DeletePipelineByIDUsingDELETEForbidden with default headers values
func NewDeletePipelineByIDUsingDELETEForbidden() *DeletePipelineByIDUsingDELETEForbidden {
	return &DeletePipelineByIDUsingDELETEForbidden{}
}

/*
DeletePipelineByIDUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeletePipelineByIDUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete pipeline by Id using d e l e t e forbidden response has a 2xx status code
func (o *DeletePipelineByIDUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline by Id using d e l e t e forbidden response has a 3xx status code
func (o *DeletePipelineByIDUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline by Id using d e l e t e forbidden response has a 4xx status code
func (o *DeletePipelineByIDUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pipeline by Id using d e l e t e forbidden response has a 5xx status code
func (o *DeletePipelineByIDUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline by Id using d e l e t e forbidden response a status code equal to that given
func (o *DeletePipelineByIDUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeletePipelineByIDUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETEForbidden ", 403)
}

func (o *DeletePipelineByIDUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETEForbidden ", 403)
}

func (o *DeletePipelineByIDUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePipelineByIDUsingDELETENotFound creates a DeletePipelineByIDUsingDELETENotFound with default headers values
func NewDeletePipelineByIDUsingDELETENotFound() *DeletePipelineByIDUsingDELETENotFound {
	return &DeletePipelineByIDUsingDELETENotFound{}
}

/*
DeletePipelineByIDUsingDELETENotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeletePipelineByIDUsingDELETENotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete pipeline by Id using d e l e t e not found response has a 2xx status code
func (o *DeletePipelineByIDUsingDELETENotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline by Id using d e l e t e not found response has a 3xx status code
func (o *DeletePipelineByIDUsingDELETENotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline by Id using d e l e t e not found response has a 4xx status code
func (o *DeletePipelineByIDUsingDELETENotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pipeline by Id using d e l e t e not found response has a 5xx status code
func (o *DeletePipelineByIDUsingDELETENotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pipeline by Id using d e l e t e not found response a status code equal to that given
func (o *DeletePipelineByIDUsingDELETENotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeletePipelineByIDUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeletePipelineByIDUsingDELETENotFound) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeletePipelineByIDUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeletePipelineByIDUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePipelineByIDUsingDELETEInternalServerError creates a DeletePipelineByIDUsingDELETEInternalServerError with default headers values
func NewDeletePipelineByIDUsingDELETEInternalServerError() *DeletePipelineByIDUsingDELETEInternalServerError {
	return &DeletePipelineByIDUsingDELETEInternalServerError{}
}

/*
DeletePipelineByIDUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeletePipelineByIDUsingDELETEInternalServerError struct {
}

// IsSuccess returns true when this delete pipeline by Id using d e l e t e internal server error response has a 2xx status code
func (o *DeletePipelineByIDUsingDELETEInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pipeline by Id using d e l e t e internal server error response has a 3xx status code
func (o *DeletePipelineByIDUsingDELETEInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pipeline by Id using d e l e t e internal server error response has a 4xx status code
func (o *DeletePipelineByIDUsingDELETEInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete pipeline by Id using d e l e t e internal server error response has a 5xx status code
func (o *DeletePipelineByIDUsingDELETEInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete pipeline by Id using d e l e t e internal server error response a status code equal to that given
func (o *DeletePipelineByIDUsingDELETEInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeletePipelineByIDUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETEInternalServerError ", 500)
}

func (o *DeletePipelineByIDUsingDELETEInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /codestream/api/pipelines/{id}][%d] deletePipelineByIdUsingDELETEInternalServerError ", 500)
}

func (o *DeletePipelineByIDUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
