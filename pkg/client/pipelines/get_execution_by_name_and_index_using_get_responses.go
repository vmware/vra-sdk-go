// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetExecutionByNameAndIndexUsingGETReader is a Reader for the GetExecutionByNameAndIndexUsingGET structure.
type GetExecutionByNameAndIndexUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExecutionByNameAndIndexUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExecutionByNameAndIndexUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetExecutionByNameAndIndexUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExecutionByNameAndIndexUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExecutionByNameAndIndexUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExecutionByNameAndIndexUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExecutionByNameAndIndexUsingGETOK creates a GetExecutionByNameAndIndexUsingGETOK with default headers values
func NewGetExecutionByNameAndIndexUsingGETOK() *GetExecutionByNameAndIndexUsingGETOK {
	return &GetExecutionByNameAndIndexUsingGETOK{}
}

/* GetExecutionByNameAndIndexUsingGETOK describes a response with status code 200, with default header values.

'Success' with the requested Execution
*/
type GetExecutionByNameAndIndexUsingGETOK struct {
	Payload models.Execution
}

func (o *GetExecutionByNameAndIndexUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}/executions/{index}][%d] getExecutionByNameAndIndexUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetExecutionByNameAndIndexUsingGETOK) GetPayload() models.Execution {
	return o.Payload
}

func (o *GetExecutionByNameAndIndexUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalExecution(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetExecutionByNameAndIndexUsingGETUnauthorized creates a GetExecutionByNameAndIndexUsingGETUnauthorized with default headers values
func NewGetExecutionByNameAndIndexUsingGETUnauthorized() *GetExecutionByNameAndIndexUsingGETUnauthorized {
	return &GetExecutionByNameAndIndexUsingGETUnauthorized{}
}

/* GetExecutionByNameAndIndexUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetExecutionByNameAndIndexUsingGETUnauthorized struct {
}

func (o *GetExecutionByNameAndIndexUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}/executions/{index}][%d] getExecutionByNameAndIndexUsingGETUnauthorized ", 401)
}

func (o *GetExecutionByNameAndIndexUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExecutionByNameAndIndexUsingGETForbidden creates a GetExecutionByNameAndIndexUsingGETForbidden with default headers values
func NewGetExecutionByNameAndIndexUsingGETForbidden() *GetExecutionByNameAndIndexUsingGETForbidden {
	return &GetExecutionByNameAndIndexUsingGETForbidden{}
}

/* GetExecutionByNameAndIndexUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetExecutionByNameAndIndexUsingGETForbidden struct {
}

func (o *GetExecutionByNameAndIndexUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}/executions/{index}][%d] getExecutionByNameAndIndexUsingGETForbidden ", 403)
}

func (o *GetExecutionByNameAndIndexUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExecutionByNameAndIndexUsingGETNotFound creates a GetExecutionByNameAndIndexUsingGETNotFound with default headers values
func NewGetExecutionByNameAndIndexUsingGETNotFound() *GetExecutionByNameAndIndexUsingGETNotFound {
	return &GetExecutionByNameAndIndexUsingGETNotFound{}
}

/* GetExecutionByNameAndIndexUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetExecutionByNameAndIndexUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetExecutionByNameAndIndexUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}/executions/{index}][%d] getExecutionByNameAndIndexUsingGETNotFound  %+v", 404, o.Payload)
}
func (o *GetExecutionByNameAndIndexUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetExecutionByNameAndIndexUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutionByNameAndIndexUsingGETInternalServerError creates a GetExecutionByNameAndIndexUsingGETInternalServerError with default headers values
func NewGetExecutionByNameAndIndexUsingGETInternalServerError() *GetExecutionByNameAndIndexUsingGETInternalServerError {
	return &GetExecutionByNameAndIndexUsingGETInternalServerError{}
}

/* GetExecutionByNameAndIndexUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetExecutionByNameAndIndexUsingGETInternalServerError struct {
}

func (o *GetExecutionByNameAndIndexUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines/{project}/{name}/executions/{index}][%d] getExecutionByNameAndIndexUsingGETInternalServerError ", 500)
}

func (o *GetExecutionByNameAndIndexUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
