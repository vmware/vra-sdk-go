// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ClonePipelineByNameUsingPOSTReader is a Reader for the ClonePipelineByNameUsingPOST structure.
type ClonePipelineByNameUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClonePipelineByNameUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewClonePipelineByNameUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewClonePipelineByNameUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewClonePipelineByNameUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewClonePipelineByNameUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewClonePipelineByNameUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewClonePipelineByNameUsingPOSTOK creates a ClonePipelineByNameUsingPOSTOK with default headers values
func NewClonePipelineByNameUsingPOSTOK() *ClonePipelineByNameUsingPOSTOK {
	return &ClonePipelineByNameUsingPOSTOK{}
}

/*
ClonePipelineByNameUsingPOSTOK describes a response with status code 200, with default header values.

'Success' with the cloned Pipeline
*/
type ClonePipelineByNameUsingPOSTOK struct {
	Payload models.Pipeline
}

// IsSuccess returns true when this clone pipeline by name using p o s t o k response has a 2xx status code
func (o *ClonePipelineByNameUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this clone pipeline by name using p o s t o k response has a 3xx status code
func (o *ClonePipelineByNameUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone pipeline by name using p o s t o k response has a 4xx status code
func (o *ClonePipelineByNameUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this clone pipeline by name using p o s t o k response has a 5xx status code
func (o *ClonePipelineByNameUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this clone pipeline by name using p o s t o k response a status code equal to that given
func (o *ClonePipelineByNameUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

func (o *ClonePipelineByNameUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *ClonePipelineByNameUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *ClonePipelineByNameUsingPOSTOK) GetPayload() models.Pipeline {
	return o.Payload
}

func (o *ClonePipelineByNameUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalPipeline(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewClonePipelineByNameUsingPOSTUnauthorized creates a ClonePipelineByNameUsingPOSTUnauthorized with default headers values
func NewClonePipelineByNameUsingPOSTUnauthorized() *ClonePipelineByNameUsingPOSTUnauthorized {
	return &ClonePipelineByNameUsingPOSTUnauthorized{}
}

/*
ClonePipelineByNameUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type ClonePipelineByNameUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this clone pipeline by name using p o s t unauthorized response has a 2xx status code
func (o *ClonePipelineByNameUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone pipeline by name using p o s t unauthorized response has a 3xx status code
func (o *ClonePipelineByNameUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone pipeline by name using p o s t unauthorized response has a 4xx status code
func (o *ClonePipelineByNameUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this clone pipeline by name using p o s t unauthorized response has a 5xx status code
func (o *ClonePipelineByNameUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this clone pipeline by name using p o s t unauthorized response a status code equal to that given
func (o *ClonePipelineByNameUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ClonePipelineByNameUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTUnauthorized ", 401)
}

func (o *ClonePipelineByNameUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTUnauthorized ", 401)
}

func (o *ClonePipelineByNameUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewClonePipelineByNameUsingPOSTForbidden creates a ClonePipelineByNameUsingPOSTForbidden with default headers values
func NewClonePipelineByNameUsingPOSTForbidden() *ClonePipelineByNameUsingPOSTForbidden {
	return &ClonePipelineByNameUsingPOSTForbidden{}
}

/*
ClonePipelineByNameUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ClonePipelineByNameUsingPOSTForbidden struct {
}

// IsSuccess returns true when this clone pipeline by name using p o s t forbidden response has a 2xx status code
func (o *ClonePipelineByNameUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone pipeline by name using p o s t forbidden response has a 3xx status code
func (o *ClonePipelineByNameUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone pipeline by name using p o s t forbidden response has a 4xx status code
func (o *ClonePipelineByNameUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this clone pipeline by name using p o s t forbidden response has a 5xx status code
func (o *ClonePipelineByNameUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this clone pipeline by name using p o s t forbidden response a status code equal to that given
func (o *ClonePipelineByNameUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ClonePipelineByNameUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTForbidden ", 403)
}

func (o *ClonePipelineByNameUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTForbidden ", 403)
}

func (o *ClonePipelineByNameUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewClonePipelineByNameUsingPOSTNotFound creates a ClonePipelineByNameUsingPOSTNotFound with default headers values
func NewClonePipelineByNameUsingPOSTNotFound() *ClonePipelineByNameUsingPOSTNotFound {
	return &ClonePipelineByNameUsingPOSTNotFound{}
}

/*
ClonePipelineByNameUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ClonePipelineByNameUsingPOSTNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this clone pipeline by name using p o s t not found response has a 2xx status code
func (o *ClonePipelineByNameUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone pipeline by name using p o s t not found response has a 3xx status code
func (o *ClonePipelineByNameUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone pipeline by name using p o s t not found response has a 4xx status code
func (o *ClonePipelineByNameUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this clone pipeline by name using p o s t not found response has a 5xx status code
func (o *ClonePipelineByNameUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this clone pipeline by name using p o s t not found response a status code equal to that given
func (o *ClonePipelineByNameUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ClonePipelineByNameUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTNotFound  %+v", 404, o.Payload)
}

func (o *ClonePipelineByNameUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTNotFound  %+v", 404, o.Payload)
}

func (o *ClonePipelineByNameUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ClonePipelineByNameUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClonePipelineByNameUsingPOSTInternalServerError creates a ClonePipelineByNameUsingPOSTInternalServerError with default headers values
func NewClonePipelineByNameUsingPOSTInternalServerError() *ClonePipelineByNameUsingPOSTInternalServerError {
	return &ClonePipelineByNameUsingPOSTInternalServerError{}
}

/*
ClonePipelineByNameUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ClonePipelineByNameUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this clone pipeline by name using p o s t internal server error response has a 2xx status code
func (o *ClonePipelineByNameUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this clone pipeline by name using p o s t internal server error response has a 3xx status code
func (o *ClonePipelineByNameUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this clone pipeline by name using p o s t internal server error response has a 4xx status code
func (o *ClonePipelineByNameUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this clone pipeline by name using p o s t internal server error response has a 5xx status code
func (o *ClonePipelineByNameUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this clone pipeline by name using p o s t internal server error response a status code equal to that given
func (o *ClonePipelineByNameUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ClonePipelineByNameUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTInternalServerError ", 500)
}

func (o *ClonePipelineByNameUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /codestream/api/pipelines/{project}/{name}][%d] clonePipelineByNameUsingPOSTInternalServerError ", 500)
}

func (o *ClonePipelineByNameUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
