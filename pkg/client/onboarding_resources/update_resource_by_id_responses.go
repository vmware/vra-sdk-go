// Code generated by go-swagger; DO NOT EDIT.

package onboarding_resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateResourceByIDReader is a Reader for the UpdateResourceByID structure.
type UpdateResourceByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateResourceByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateResourceByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateResourceByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateResourceByIDOK creates a UpdateResourceByIDOK with default headers values
func NewUpdateResourceByIDOK() *UpdateResourceByIDOK {
	return &UpdateResourceByIDOK{}
}

/*
UpdateResourceByIDOK describes a response with status code 200, with default header values.

Success
*/
type UpdateResourceByIDOK struct {
}

// IsSuccess returns true when this update resource by Id o k response has a 2xx status code
func (o *UpdateResourceByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update resource by Id o k response has a 3xx status code
func (o *UpdateResourceByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource by Id o k response has a 4xx status code
func (o *UpdateResourceByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resource by Id o k response has a 5xx status code
func (o *UpdateResourceByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource by Id o k response a status code equal to that given
func (o *UpdateResourceByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateResourceByIDOK) Error() string {
	return fmt.Sprintf("[PATCH /relocation/onboarding/resource/{id}][%d] updateResourceByIdOK ", 200)
}

func (o *UpdateResourceByIDOK) String() string {
	return fmt.Sprintf("[PATCH /relocation/onboarding/resource/{id}][%d] updateResourceByIdOK ", 200)
}

func (o *UpdateResourceByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateResourceByIDUnauthorized creates a UpdateResourceByIDUnauthorized with default headers values
func NewUpdateResourceByIDUnauthorized() *UpdateResourceByIDUnauthorized {
	return &UpdateResourceByIDUnauthorized{}
}

/*
UpdateResourceByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateResourceByIDUnauthorized struct {
}

// IsSuccess returns true when this update resource by Id unauthorized response has a 2xx status code
func (o *UpdateResourceByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource by Id unauthorized response has a 3xx status code
func (o *UpdateResourceByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource by Id unauthorized response has a 4xx status code
func (o *UpdateResourceByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource by Id unauthorized response has a 5xx status code
func (o *UpdateResourceByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource by Id unauthorized response a status code equal to that given
func (o *UpdateResourceByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateResourceByIDUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /relocation/onboarding/resource/{id}][%d] updateResourceByIdUnauthorized ", 401)
}

func (o *UpdateResourceByIDUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /relocation/onboarding/resource/{id}][%d] updateResourceByIdUnauthorized ", 401)
}

func (o *UpdateResourceByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
