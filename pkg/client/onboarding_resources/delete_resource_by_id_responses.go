// Code generated by go-swagger; DO NOT EDIT.

package onboarding_resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteResourceByIDReader is a Reader for the DeleteResourceByID structure.
type DeleteResourceByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResourceByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteResourceByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteResourceByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteResourceByIDOK creates a DeleteResourceByIDOK with default headers values
func NewDeleteResourceByIDOK() *DeleteResourceByIDOK {
	return &DeleteResourceByIDOK{}
}

/*
DeleteResourceByIDOK describes a response with status code 200, with default header values.

Success
*/
type DeleteResourceByIDOK struct {
}

// IsSuccess returns true when this delete resource by Id o k response has a 2xx status code
func (o *DeleteResourceByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete resource by Id o k response has a 3xx status code
func (o *DeleteResourceByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource by Id o k response has a 4xx status code
func (o *DeleteResourceByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resource by Id o k response has a 5xx status code
func (o *DeleteResourceByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource by Id o k response a status code equal to that given
func (o *DeleteResourceByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteResourceByIDOK) Error() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/resource/{id}][%d] deleteResourceByIdOK ", 200)
}

func (o *DeleteResourceByIDOK) String() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/resource/{id}][%d] deleteResourceByIdOK ", 200)
}

func (o *DeleteResourceByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourceByIDUnauthorized creates a DeleteResourceByIDUnauthorized with default headers values
func NewDeleteResourceByIDUnauthorized() *DeleteResourceByIDUnauthorized {
	return &DeleteResourceByIDUnauthorized{}
}

/*
DeleteResourceByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteResourceByIDUnauthorized struct {
}

// IsSuccess returns true when this delete resource by Id unauthorized response has a 2xx status code
func (o *DeleteResourceByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource by Id unauthorized response has a 3xx status code
func (o *DeleteResourceByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource by Id unauthorized response has a 4xx status code
func (o *DeleteResourceByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource by Id unauthorized response has a 5xx status code
func (o *DeleteResourceByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource by Id unauthorized response a status code equal to that given
func (o *DeleteResourceByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteResourceByIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/resource/{id}][%d] deleteResourceByIdUnauthorized ", 401)
}

func (o *DeleteResourceByIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/resource/{id}][%d] deleteResourceByIdUnauthorized ", 401)
}

func (o *DeleteResourceByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
