// Code generated by go-swagger; DO NOT EDIT.

package source_control_sync

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetSyncRequestUsingGETReader is a Reader for the GetSyncRequestUsingGET structure.
type GetSyncRequestUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSyncRequestUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSyncRequestUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSyncRequestUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSyncRequestUsingGETOK creates a GetSyncRequestUsingGETOK with default headers values
func NewGetSyncRequestUsingGETOK() *GetSyncRequestUsingGETOK {
	return &GetSyncRequestUsingGETOK{}
}

/*GetSyncRequestUsingGETOK handles this case with default header values.

Sync request for id
*/
type GetSyncRequestUsingGETOK struct {
	Payload *models.SourceControlSyncRequest
}

func (o *GetSyncRequestUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /content/api/sourcecontrol/sync-requests/{id}][%d] getSyncRequestUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetSyncRequestUsingGETOK) GetPayload() *models.SourceControlSyncRequest {
	return o.Payload
}

func (o *GetSyncRequestUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SourceControlSyncRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSyncRequestUsingGETNotFound creates a GetSyncRequestUsingGETNotFound with default headers values
func NewGetSyncRequestUsingGETNotFound() *GetSyncRequestUsingGETNotFound {
	return &GetSyncRequestUsingGETNotFound{}
}

/*GetSyncRequestUsingGETNotFound handles this case with default header values.

request not found
*/
type GetSyncRequestUsingGETNotFound struct {
}

func (o *GetSyncRequestUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /content/api/sourcecontrol/sync-requests/{id}][%d] getSyncRequestUsingGETNotFound ", 404)
}

func (o *GetSyncRequestUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
