// Code generated by go-swagger; DO NOT EDIT.

package source_control_sync

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetSyncRequestUsingGETReader is a Reader for the GetSyncRequestUsingGET structure.
type GetSyncRequestUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSyncRequestUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSyncRequestUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSyncRequestUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSyncRequestUsingGETOK creates a GetSyncRequestUsingGETOK with default headers values
func NewGetSyncRequestUsingGETOK() *GetSyncRequestUsingGETOK {
	return &GetSyncRequestUsingGETOK{}
}

/*
GetSyncRequestUsingGETOK describes a response with status code 200, with default header values.

Sync request for id
*/
type GetSyncRequestUsingGETOK struct {
	Payload *models.SourceControlSyncRequest
}

// IsSuccess returns true when this get sync request using g e t o k response has a 2xx status code
func (o *GetSyncRequestUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get sync request using g e t o k response has a 3xx status code
func (o *GetSyncRequestUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get sync request using g e t o k response has a 4xx status code
func (o *GetSyncRequestUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get sync request using g e t o k response has a 5xx status code
func (o *GetSyncRequestUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get sync request using g e t o k response a status code equal to that given
func (o *GetSyncRequestUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSyncRequestUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /content/api/sourcecontrol/sync-requests/{id}][%d] getSyncRequestUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetSyncRequestUsingGETOK) String() string {
	return fmt.Sprintf("[GET /content/api/sourcecontrol/sync-requests/{id}][%d] getSyncRequestUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetSyncRequestUsingGETOK) GetPayload() *models.SourceControlSyncRequest {
	return o.Payload
}

func (o *GetSyncRequestUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SourceControlSyncRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSyncRequestUsingGETNotFound creates a GetSyncRequestUsingGETNotFound with default headers values
func NewGetSyncRequestUsingGETNotFound() *GetSyncRequestUsingGETNotFound {
	return &GetSyncRequestUsingGETNotFound{}
}

/*
GetSyncRequestUsingGETNotFound describes a response with status code 404, with default header values.

request not found
*/
type GetSyncRequestUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get sync request using g e t not found response has a 2xx status code
func (o *GetSyncRequestUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get sync request using g e t not found response has a 3xx status code
func (o *GetSyncRequestUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get sync request using g e t not found response has a 4xx status code
func (o *GetSyncRequestUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get sync request using g e t not found response has a 5xx status code
func (o *GetSyncRequestUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get sync request using g e t not found response a status code equal to that given
func (o *GetSyncRequestUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSyncRequestUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /content/api/sourcecontrol/sync-requests/{id}][%d] getSyncRequestUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetSyncRequestUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /content/api/sourcecontrol/sync-requests/{id}][%d] getSyncRequestUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetSyncRequestUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSyncRequestUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
