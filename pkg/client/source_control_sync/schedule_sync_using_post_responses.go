// Code generated by go-swagger; DO NOT EDIT.

package source_control_sync

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// ScheduleSyncUsingPOSTReader is a Reader for the ScheduleSyncUsingPOST structure.
type ScheduleSyncUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScheduleSyncUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewScheduleSyncUsingPOSTAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewScheduleSyncUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewScheduleSyncUsingPOSTAccepted creates a ScheduleSyncUsingPOSTAccepted with default headers values
func NewScheduleSyncUsingPOSTAccepted() *ScheduleSyncUsingPOSTAccepted {
	return &ScheduleSyncUsingPOSTAccepted{}
}

/*ScheduleSyncUsingPOSTAccepted handles this case with default header values.

Submitted sync requests
*/
type ScheduleSyncUsingPOSTAccepted struct {
	Payload *models.SourceControlSyncRequest
}

func (o *ScheduleSyncUsingPOSTAccepted) Error() string {
	return fmt.Sprintf("[POST /content/api/sourcecontrol/sync-requests][%d] scheduleSyncUsingPOSTAccepted  %+v", 202, o.Payload)
}

func (o *ScheduleSyncUsingPOSTAccepted) GetPayload() *models.SourceControlSyncRequest {
	return o.Payload
}

func (o *ScheduleSyncUsingPOSTAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SourceControlSyncRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduleSyncUsingPOSTNotFound creates a ScheduleSyncUsingPOSTNotFound with default headers values
func NewScheduleSyncUsingPOSTNotFound() *ScheduleSyncUsingPOSTNotFound {
	return &ScheduleSyncUsingPOSTNotFound{}
}

/*ScheduleSyncUsingPOSTNotFound handles this case with default header values.

source not found
*/
type ScheduleSyncUsingPOSTNotFound struct {
	Payload *models.Error
}

func (o *ScheduleSyncUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /content/api/sourcecontrol/sync-requests][%d] scheduleSyncUsingPOSTNotFound  %+v", 404, o.Payload)
}

func (o *ScheduleSyncUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScheduleSyncUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
