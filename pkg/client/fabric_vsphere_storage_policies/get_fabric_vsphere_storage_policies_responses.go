// Code generated by go-swagger; DO NOT EDIT.

package fabric_vsphere_storage_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetFabricVSphereStoragePoliciesReader is a Reader for the GetFabricVSphereStoragePolicies structure.
type GetFabricVSphereStoragePoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFabricVSphereStoragePoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFabricVSphereStoragePoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetFabricVSphereStoragePoliciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFabricVSphereStoragePoliciesOK creates a GetFabricVSphereStoragePoliciesOK with default headers values
func NewGetFabricVSphereStoragePoliciesOK() *GetFabricVSphereStoragePoliciesOK {
	return &GetFabricVSphereStoragePoliciesOK{}
}

/*
GetFabricVSphereStoragePoliciesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetFabricVSphereStoragePoliciesOK struct {
	Payload *models.FabricVsphereStoragePolicyResult
}

// IsSuccess returns true when this get fabric v sphere storage policies o k response has a 2xx status code
func (o *GetFabricVSphereStoragePoliciesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fabric v sphere storage policies o k response has a 3xx status code
func (o *GetFabricVSphereStoragePoliciesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric v sphere storage policies o k response has a 4xx status code
func (o *GetFabricVSphereStoragePoliciesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fabric v sphere storage policies o k response has a 5xx status code
func (o *GetFabricVSphereStoragePoliciesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric v sphere storage policies o k response a status code equal to that given
func (o *GetFabricVSphereStoragePoliciesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFabricVSphereStoragePoliciesOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/fabric-vsphere-storage-policies][%d] getFabricVSphereStoragePoliciesOK  %+v", 200, o.Payload)
}

func (o *GetFabricVSphereStoragePoliciesOK) String() string {
	return fmt.Sprintf("[GET /iaas/api/fabric-vsphere-storage-policies][%d] getFabricVSphereStoragePoliciesOK  %+v", 200, o.Payload)
}

func (o *GetFabricVSphereStoragePoliciesOK) GetPayload() *models.FabricVsphereStoragePolicyResult {
	return o.Payload
}

func (o *GetFabricVSphereStoragePoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FabricVsphereStoragePolicyResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFabricVSphereStoragePoliciesForbidden creates a GetFabricVSphereStoragePoliciesForbidden with default headers values
func NewGetFabricVSphereStoragePoliciesForbidden() *GetFabricVSphereStoragePoliciesForbidden {
	return &GetFabricVSphereStoragePoliciesForbidden{}
}

/*
GetFabricVSphereStoragePoliciesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetFabricVSphereStoragePoliciesForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this get fabric v sphere storage policies forbidden response has a 2xx status code
func (o *GetFabricVSphereStoragePoliciesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fabric v sphere storage policies forbidden response has a 3xx status code
func (o *GetFabricVSphereStoragePoliciesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fabric v sphere storage policies forbidden response has a 4xx status code
func (o *GetFabricVSphereStoragePoliciesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get fabric v sphere storage policies forbidden response has a 5xx status code
func (o *GetFabricVSphereStoragePoliciesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get fabric v sphere storage policies forbidden response a status code equal to that given
func (o *GetFabricVSphereStoragePoliciesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetFabricVSphereStoragePoliciesForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/fabric-vsphere-storage-policies][%d] getFabricVSphereStoragePoliciesForbidden  %+v", 403, o.Payload)
}

func (o *GetFabricVSphereStoragePoliciesForbidden) String() string {
	return fmt.Sprintf("[GET /iaas/api/fabric-vsphere-storage-policies][%d] getFabricVSphereStoragePoliciesForbidden  %+v", 403, o.Payload)
}

func (o *GetFabricVSphereStoragePoliciesForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetFabricVSphereStoragePoliciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
