// Code generated by go-swagger; DO NOT EDIT.

package compute_gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// CreateComputeGatewayReader is a Reader for the CreateComputeGateway structure.
type CreateComputeGatewayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateComputeGatewayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateComputeGatewayOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateComputeGatewayBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateComputeGatewayForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateComputeGatewayOK creates a CreateComputeGatewayOK with default headers values
func NewCreateComputeGatewayOK() *CreateComputeGatewayOK {
	return &CreateComputeGatewayOK{}
}

/*CreateComputeGatewayOK handles this case with default header values.

successful operation
*/
type CreateComputeGatewayOK struct {
	Payload *models.RequestTracker
}

func (o *CreateComputeGatewayOK) Error() string {
	return fmt.Sprintf("[POST /iaas/api/compute-gateways][%d] createComputeGatewayOK  %+v", 200, o.Payload)
}

func (o *CreateComputeGatewayOK) GetPayload() *models.RequestTracker {
	return o.Payload
}

func (o *CreateComputeGatewayOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateComputeGatewayBadRequest creates a CreateComputeGatewayBadRequest with default headers values
func NewCreateComputeGatewayBadRequest() *CreateComputeGatewayBadRequest {
	return &CreateComputeGatewayBadRequest{}
}

/*CreateComputeGatewayBadRequest handles this case with default header values.

Invalid Request - bad data
*/
type CreateComputeGatewayBadRequest struct {
	Payload *models.Error
}

func (o *CreateComputeGatewayBadRequest) Error() string {
	return fmt.Sprintf("[POST /iaas/api/compute-gateways][%d] createComputeGatewayBadRequest  %+v", 400, o.Payload)
}

func (o *CreateComputeGatewayBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateComputeGatewayBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateComputeGatewayForbidden creates a CreateComputeGatewayForbidden with default headers values
func NewCreateComputeGatewayForbidden() *CreateComputeGatewayForbidden {
	return &CreateComputeGatewayForbidden{}
}

/*CreateComputeGatewayForbidden handles this case with default header values.

Forbidden
*/
type CreateComputeGatewayForbidden struct {
}

func (o *CreateComputeGatewayForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/compute-gateways][%d] createComputeGatewayForbidden ", 403)
}

func (o *CreateComputeGatewayForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
