// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetDeploymentRequestsUsingGET2Reader is a Reader for the GetDeploymentRequestsUsingGET2 structure.
type GetDeploymentRequestsUsingGET2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentRequestsUsingGET2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentRequestsUsingGET2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDeploymentRequestsUsingGET2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeploymentRequestsUsingGET2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDeploymentRequestsUsingGET2OK creates a GetDeploymentRequestsUsingGET2OK with default headers values
func NewGetDeploymentRequestsUsingGET2OK() *GetDeploymentRequestsUsingGET2OK {
	return &GetDeploymentRequestsUsingGET2OK{}
}

/* GetDeploymentRequestsUsingGET2OK describes a response with status code 200, with default header values.

OK
*/
type GetDeploymentRequestsUsingGET2OK struct {
	Payload *models.PageOfRequest
}

func (o *GetDeploymentRequestsUsingGET2OK) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{deploymentId}/requests][%d] getDeploymentRequestsUsingGET2OK  %+v", 200, o.Payload)
}
func (o *GetDeploymentRequestsUsingGET2OK) GetPayload() *models.PageOfRequest {
	return o.Payload
}

func (o *GetDeploymentRequestsUsingGET2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentRequestsUsingGET2Unauthorized creates a GetDeploymentRequestsUsingGET2Unauthorized with default headers values
func NewGetDeploymentRequestsUsingGET2Unauthorized() *GetDeploymentRequestsUsingGET2Unauthorized {
	return &GetDeploymentRequestsUsingGET2Unauthorized{}
}

/* GetDeploymentRequestsUsingGET2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDeploymentRequestsUsingGET2Unauthorized struct {
}

func (o *GetDeploymentRequestsUsingGET2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{deploymentId}/requests][%d] getDeploymentRequestsUsingGET2Unauthorized ", 401)
}

func (o *GetDeploymentRequestsUsingGET2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploymentRequestsUsingGET2NotFound creates a GetDeploymentRequestsUsingGET2NotFound with default headers values
func NewGetDeploymentRequestsUsingGET2NotFound() *GetDeploymentRequestsUsingGET2NotFound {
	return &GetDeploymentRequestsUsingGET2NotFound{}
}

/* GetDeploymentRequestsUsingGET2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDeploymentRequestsUsingGET2NotFound struct {
	Payload *models.Error
}

func (o *GetDeploymentRequestsUsingGET2NotFound) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{deploymentId}/requests][%d] getDeploymentRequestsUsingGET2NotFound  %+v", 404, o.Payload)
}
func (o *GetDeploymentRequestsUsingGET2NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDeploymentRequestsUsingGET2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
