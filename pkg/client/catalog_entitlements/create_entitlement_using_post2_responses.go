// Code generated by go-swagger; DO NOT EDIT.

package catalog_entitlements

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// CreateEntitlementUsingPOST2Reader is a Reader for the CreateEntitlementUsingPOST2 structure.
type CreateEntitlementUsingPOST2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEntitlementUsingPOST2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateEntitlementUsingPOST2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateEntitlementUsingPOST2Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateEntitlementUsingPOST2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateEntitlementUsingPOST2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateEntitlementUsingPOST2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateEntitlementUsingPOST2OK creates a CreateEntitlementUsingPOST2OK with default headers values
func NewCreateEntitlementUsingPOST2OK() *CreateEntitlementUsingPOST2OK {
	return &CreateEntitlementUsingPOST2OK{}
}

/*
CreateEntitlementUsingPOST2OK describes a response with status code 200, with default header values.

OK
*/
type CreateEntitlementUsingPOST2OK struct {
	Payload *models.Entitlement
}

// IsSuccess returns true when this create entitlement using p o s t2 o k response has a 2xx status code
func (o *CreateEntitlementUsingPOST2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create entitlement using p o s t2 o k response has a 3xx status code
func (o *CreateEntitlementUsingPOST2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create entitlement using p o s t2 o k response has a 4xx status code
func (o *CreateEntitlementUsingPOST2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create entitlement using p o s t2 o k response has a 5xx status code
func (o *CreateEntitlementUsingPOST2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this create entitlement using p o s t2 o k response a status code equal to that given
func (o *CreateEntitlementUsingPOST2OK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateEntitlementUsingPOST2OK) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2OK  %+v", 200, o.Payload)
}

func (o *CreateEntitlementUsingPOST2OK) String() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2OK  %+v", 200, o.Payload)
}

func (o *CreateEntitlementUsingPOST2OK) GetPayload() *models.Entitlement {
	return o.Payload
}

func (o *CreateEntitlementUsingPOST2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Entitlement)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntitlementUsingPOST2Created creates a CreateEntitlementUsingPOST2Created with default headers values
func NewCreateEntitlementUsingPOST2Created() *CreateEntitlementUsingPOST2Created {
	return &CreateEntitlementUsingPOST2Created{}
}

/*
CreateEntitlementUsingPOST2Created describes a response with status code 201, with default header values.

Created
*/
type CreateEntitlementUsingPOST2Created struct {
	Payload *models.Entitlement
}

// IsSuccess returns true when this create entitlement using p o s t2 created response has a 2xx status code
func (o *CreateEntitlementUsingPOST2Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create entitlement using p o s t2 created response has a 3xx status code
func (o *CreateEntitlementUsingPOST2Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create entitlement using p o s t2 created response has a 4xx status code
func (o *CreateEntitlementUsingPOST2Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create entitlement using p o s t2 created response has a 5xx status code
func (o *CreateEntitlementUsingPOST2Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create entitlement using p o s t2 created response a status code equal to that given
func (o *CreateEntitlementUsingPOST2Created) IsCode(code int) bool {
	return code == 201
}

func (o *CreateEntitlementUsingPOST2Created) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2Created  %+v", 201, o.Payload)
}

func (o *CreateEntitlementUsingPOST2Created) String() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2Created  %+v", 201, o.Payload)
}

func (o *CreateEntitlementUsingPOST2Created) GetPayload() *models.Entitlement {
	return o.Payload
}

func (o *CreateEntitlementUsingPOST2Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Entitlement)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntitlementUsingPOST2BadRequest creates a CreateEntitlementUsingPOST2BadRequest with default headers values
func NewCreateEntitlementUsingPOST2BadRequest() *CreateEntitlementUsingPOST2BadRequest {
	return &CreateEntitlementUsingPOST2BadRequest{}
}

/*
CreateEntitlementUsingPOST2BadRequest describes a response with status code 400, with default header values.

Catalog item or source cannot be entitled to the project
*/
type CreateEntitlementUsingPOST2BadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create entitlement using p o s t2 bad request response has a 2xx status code
func (o *CreateEntitlementUsingPOST2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create entitlement using p o s t2 bad request response has a 3xx status code
func (o *CreateEntitlementUsingPOST2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create entitlement using p o s t2 bad request response has a 4xx status code
func (o *CreateEntitlementUsingPOST2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create entitlement using p o s t2 bad request response has a 5xx status code
func (o *CreateEntitlementUsingPOST2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create entitlement using p o s t2 bad request response a status code equal to that given
func (o *CreateEntitlementUsingPOST2BadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateEntitlementUsingPOST2BadRequest) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2BadRequest  %+v", 400, o.Payload)
}

func (o *CreateEntitlementUsingPOST2BadRequest) String() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2BadRequest  %+v", 400, o.Payload)
}

func (o *CreateEntitlementUsingPOST2BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateEntitlementUsingPOST2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEntitlementUsingPOST2Unauthorized creates a CreateEntitlementUsingPOST2Unauthorized with default headers values
func NewCreateEntitlementUsingPOST2Unauthorized() *CreateEntitlementUsingPOST2Unauthorized {
	return &CreateEntitlementUsingPOST2Unauthorized{}
}

/*
CreateEntitlementUsingPOST2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateEntitlementUsingPOST2Unauthorized struct {
}

// IsSuccess returns true when this create entitlement using p o s t2 unauthorized response has a 2xx status code
func (o *CreateEntitlementUsingPOST2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create entitlement using p o s t2 unauthorized response has a 3xx status code
func (o *CreateEntitlementUsingPOST2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create entitlement using p o s t2 unauthorized response has a 4xx status code
func (o *CreateEntitlementUsingPOST2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create entitlement using p o s t2 unauthorized response has a 5xx status code
func (o *CreateEntitlementUsingPOST2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create entitlement using p o s t2 unauthorized response a status code equal to that given
func (o *CreateEntitlementUsingPOST2Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateEntitlementUsingPOST2Unauthorized) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2Unauthorized ", 401)
}

func (o *CreateEntitlementUsingPOST2Unauthorized) String() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2Unauthorized ", 401)
}

func (o *CreateEntitlementUsingPOST2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateEntitlementUsingPOST2NotFound creates a CreateEntitlementUsingPOST2NotFound with default headers values
func NewCreateEntitlementUsingPOST2NotFound() *CreateEntitlementUsingPOST2NotFound {
	return &CreateEntitlementUsingPOST2NotFound{}
}

/*
CreateEntitlementUsingPOST2NotFound describes a response with status code 404, with default header values.

Catalog item or catalog source not found
*/
type CreateEntitlementUsingPOST2NotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create entitlement using p o s t2 not found response has a 2xx status code
func (o *CreateEntitlementUsingPOST2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create entitlement using p o s t2 not found response has a 3xx status code
func (o *CreateEntitlementUsingPOST2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create entitlement using p o s t2 not found response has a 4xx status code
func (o *CreateEntitlementUsingPOST2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create entitlement using p o s t2 not found response has a 5xx status code
func (o *CreateEntitlementUsingPOST2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create entitlement using p o s t2 not found response a status code equal to that given
func (o *CreateEntitlementUsingPOST2NotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateEntitlementUsingPOST2NotFound) Error() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2NotFound  %+v", 404, o.Payload)
}

func (o *CreateEntitlementUsingPOST2NotFound) String() string {
	return fmt.Sprintf("[POST /catalog/api/admin/entitlements][%d] createEntitlementUsingPOST2NotFound  %+v", 404, o.Payload)
}

func (o *CreateEntitlementUsingPOST2NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateEntitlementUsingPOST2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
