// Code generated by go-swagger; DO NOT EDIT.

package catalog_item_types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetTypeByIDUsingGETReader is a Reader for the GetTypeByIDUsingGET structure.
type GetTypeByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTypeByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTypeByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTypeByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTypeByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTypeByIDUsingGETOK creates a GetTypeByIDUsingGETOK with default headers values
func NewGetTypeByIDUsingGETOK() *GetTypeByIDUsingGETOK {
	return &GetTypeByIDUsingGETOK{}
}

/*GetTypeByIDUsingGETOK handles this case with default header values.

OK
*/
type GetTypeByIDUsingGETOK struct {
	Payload *models.CatalogItemType
}

func (o *GetTypeByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /catalog/api/types/{id}][%d] getTypeByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetTypeByIDUsingGETOK) GetPayload() *models.CatalogItemType {
	return o.Payload
}

func (o *GetTypeByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogItemType)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTypeByIDUsingGETUnauthorized creates a GetTypeByIDUsingGETUnauthorized with default headers values
func NewGetTypeByIDUsingGETUnauthorized() *GetTypeByIDUsingGETUnauthorized {
	return &GetTypeByIDUsingGETUnauthorized{}
}

/*GetTypeByIDUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetTypeByIDUsingGETUnauthorized struct {
}

func (o *GetTypeByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /catalog/api/types/{id}][%d] getTypeByIdUsingGETUnauthorized ", 401)
}

func (o *GetTypeByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTypeByIDUsingGETNotFound creates a GetTypeByIDUsingGETNotFound with default headers values
func NewGetTypeByIDUsingGETNotFound() *GetTypeByIDUsingGETNotFound {
	return &GetTypeByIDUsingGETNotFound{}
}

/*GetTypeByIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetTypeByIDUsingGETNotFound struct {
}

func (o *GetTypeByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /catalog/api/types/{id}][%d] getTypeByIdUsingGETNotFound ", 404)
}

func (o *GetTypeByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
