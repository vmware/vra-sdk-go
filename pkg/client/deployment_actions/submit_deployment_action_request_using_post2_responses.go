// Code generated by go-swagger; DO NOT EDIT.

package deployment_actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// SubmitDeploymentActionRequestUsingPOST2Reader is a Reader for the SubmitDeploymentActionRequestUsingPOST2 structure.
type SubmitDeploymentActionRequestUsingPOST2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubmitDeploymentActionRequestUsingPOST2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSubmitDeploymentActionRequestUsingPOST2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSubmitDeploymentActionRequestUsingPOST2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSubmitDeploymentActionRequestUsingPOST2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubmitDeploymentActionRequestUsingPOST2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSubmitDeploymentActionRequestUsingPOST2Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSubmitDeploymentActionRequestUsingPOST2OK creates a SubmitDeploymentActionRequestUsingPOST2OK with default headers values
func NewSubmitDeploymentActionRequestUsingPOST2OK() *SubmitDeploymentActionRequestUsingPOST2OK {
	return &SubmitDeploymentActionRequestUsingPOST2OK{}
}

/*
SubmitDeploymentActionRequestUsingPOST2OK describes a response with status code 200, with default header values.

OK
*/
type SubmitDeploymentActionRequestUsingPOST2OK struct {
	Payload *models.Request
}

// IsSuccess returns true when this submit deployment action request using p o s t2 o k response has a 2xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this submit deployment action request using p o s t2 o k response has a 3xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit deployment action request using p o s t2 o k response has a 4xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this submit deployment action request using p o s t2 o k response has a 5xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this submit deployment action request using p o s t2 o k response a status code equal to that given
func (o *SubmitDeploymentActionRequestUsingPOST2OK) IsCode(code int) bool {
	return code == 200
}

func (o *SubmitDeploymentActionRequestUsingPOST2OK) Error() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2OK  %+v", 200, o.Payload)
}

func (o *SubmitDeploymentActionRequestUsingPOST2OK) String() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2OK  %+v", 200, o.Payload)
}

func (o *SubmitDeploymentActionRequestUsingPOST2OK) GetPayload() *models.Request {
	return o.Payload
}

func (o *SubmitDeploymentActionRequestUsingPOST2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Request)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitDeploymentActionRequestUsingPOST2Unauthorized creates a SubmitDeploymentActionRequestUsingPOST2Unauthorized with default headers values
func NewSubmitDeploymentActionRequestUsingPOST2Unauthorized() *SubmitDeploymentActionRequestUsingPOST2Unauthorized {
	return &SubmitDeploymentActionRequestUsingPOST2Unauthorized{}
}

/*
SubmitDeploymentActionRequestUsingPOST2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SubmitDeploymentActionRequestUsingPOST2Unauthorized struct {
}

// IsSuccess returns true when this submit deployment action request using p o s t2 unauthorized response has a 2xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit deployment action request using p o s t2 unauthorized response has a 3xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit deployment action request using p o s t2 unauthorized response has a 4xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit deployment action request using p o s t2 unauthorized response has a 5xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this submit deployment action request using p o s t2 unauthorized response a status code equal to that given
func (o *SubmitDeploymentActionRequestUsingPOST2Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SubmitDeploymentActionRequestUsingPOST2Unauthorized) Error() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2Unauthorized ", 401)
}

func (o *SubmitDeploymentActionRequestUsingPOST2Unauthorized) String() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2Unauthorized ", 401)
}

func (o *SubmitDeploymentActionRequestUsingPOST2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitDeploymentActionRequestUsingPOST2Forbidden creates a SubmitDeploymentActionRequestUsingPOST2Forbidden with default headers values
func NewSubmitDeploymentActionRequestUsingPOST2Forbidden() *SubmitDeploymentActionRequestUsingPOST2Forbidden {
	return &SubmitDeploymentActionRequestUsingPOST2Forbidden{}
}

/*
SubmitDeploymentActionRequestUsingPOST2Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SubmitDeploymentActionRequestUsingPOST2Forbidden struct {
}

// IsSuccess returns true when this submit deployment action request using p o s t2 forbidden response has a 2xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit deployment action request using p o s t2 forbidden response has a 3xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit deployment action request using p o s t2 forbidden response has a 4xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit deployment action request using p o s t2 forbidden response has a 5xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this submit deployment action request using p o s t2 forbidden response a status code equal to that given
func (o *SubmitDeploymentActionRequestUsingPOST2Forbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SubmitDeploymentActionRequestUsingPOST2Forbidden) Error() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2Forbidden ", 403)
}

func (o *SubmitDeploymentActionRequestUsingPOST2Forbidden) String() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2Forbidden ", 403)
}

func (o *SubmitDeploymentActionRequestUsingPOST2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubmitDeploymentActionRequestUsingPOST2NotFound creates a SubmitDeploymentActionRequestUsingPOST2NotFound with default headers values
func NewSubmitDeploymentActionRequestUsingPOST2NotFound() *SubmitDeploymentActionRequestUsingPOST2NotFound {
	return &SubmitDeploymentActionRequestUsingPOST2NotFound{}
}

/*
SubmitDeploymentActionRequestUsingPOST2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type SubmitDeploymentActionRequestUsingPOST2NotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this submit deployment action request using p o s t2 not found response has a 2xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit deployment action request using p o s t2 not found response has a 3xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit deployment action request using p o s t2 not found response has a 4xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit deployment action request using p o s t2 not found response has a 5xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this submit deployment action request using p o s t2 not found response a status code equal to that given
func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) Error() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2NotFound  %+v", 404, o.Payload)
}

func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) String() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2NotFound  %+v", 404, o.Payload)
}

func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SubmitDeploymentActionRequestUsingPOST2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubmitDeploymentActionRequestUsingPOST2Conflict creates a SubmitDeploymentActionRequestUsingPOST2Conflict with default headers values
func NewSubmitDeploymentActionRequestUsingPOST2Conflict() *SubmitDeploymentActionRequestUsingPOST2Conflict {
	return &SubmitDeploymentActionRequestUsingPOST2Conflict{}
}

/*
SubmitDeploymentActionRequestUsingPOST2Conflict describes a response with status code 409, with default header values.

Conflict
*/
type SubmitDeploymentActionRequestUsingPOST2Conflict struct {
}

// IsSuccess returns true when this submit deployment action request using p o s t2 conflict response has a 2xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Conflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this submit deployment action request using p o s t2 conflict response has a 3xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Conflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this submit deployment action request using p o s t2 conflict response has a 4xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Conflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this submit deployment action request using p o s t2 conflict response has a 5xx status code
func (o *SubmitDeploymentActionRequestUsingPOST2Conflict) IsServerError() bool {
	return false
}

// IsCode returns true when this submit deployment action request using p o s t2 conflict response a status code equal to that given
func (o *SubmitDeploymentActionRequestUsingPOST2Conflict) IsCode(code int) bool {
	return code == 409
}

func (o *SubmitDeploymentActionRequestUsingPOST2Conflict) Error() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2Conflict ", 409)
}

func (o *SubmitDeploymentActionRequestUsingPOST2Conflict) String() string {
	return fmt.Sprintf("[POST /deployment/api/deployments/{deploymentId}/requests][%d] submitDeploymentActionRequestUsingPOST2Conflict ", 409)
}

func (o *SubmitDeploymentActionRequestUsingPOST2Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
