// Code generated by go-swagger; DO NOT EDIT.

package user_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetUserOperationByIDUsingGETReader is a Reader for the GetUserOperationByIDUsingGET structure.
type GetUserOperationByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserOperationByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserOperationByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserOperationByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserOperationByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserOperationByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserOperationByIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserOperationByIDUsingGETOK creates a GetUserOperationByIDUsingGETOK with default headers values
func NewGetUserOperationByIDUsingGETOK() *GetUserOperationByIDUsingGETOK {
	return &GetUserOperationByIDUsingGETOK{}
}

/*
GetUserOperationByIDUsingGETOK describes a response with status code 200, with default header values.

'Success' with the requested User Operation
*/
type GetUserOperationByIDUsingGETOK struct {
	Payload models.UserOperation
}

// IsSuccess returns true when this get user operation by Id using g e t o k response has a 2xx status code
func (o *GetUserOperationByIDUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user operation by Id using g e t o k response has a 3xx status code
func (o *GetUserOperationByIDUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user operation by Id using g e t o k response has a 4xx status code
func (o *GetUserOperationByIDUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user operation by Id using g e t o k response has a 5xx status code
func (o *GetUserOperationByIDUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user operation by Id using g e t o k response a status code equal to that given
func (o *GetUserOperationByIDUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUserOperationByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUserOperationByIDUsingGETOK) String() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUserOperationByIDUsingGETOK) GetPayload() models.UserOperation {
	return o.Payload
}

func (o *GetUserOperationByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalUserOperation(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetUserOperationByIDUsingGETUnauthorized creates a GetUserOperationByIDUsingGETUnauthorized with default headers values
func NewGetUserOperationByIDUsingGETUnauthorized() *GetUserOperationByIDUsingGETUnauthorized {
	return &GetUserOperationByIDUsingGETUnauthorized{}
}

/*
GetUserOperationByIDUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetUserOperationByIDUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get user operation by Id using g e t unauthorized response has a 2xx status code
func (o *GetUserOperationByIDUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user operation by Id using g e t unauthorized response has a 3xx status code
func (o *GetUserOperationByIDUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user operation by Id using g e t unauthorized response has a 4xx status code
func (o *GetUserOperationByIDUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user operation by Id using g e t unauthorized response has a 5xx status code
func (o *GetUserOperationByIDUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user operation by Id using g e t unauthorized response a status code equal to that given
func (o *GetUserOperationByIDUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUserOperationByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETUnauthorized ", 401)
}

func (o *GetUserOperationByIDUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETUnauthorized ", 401)
}

func (o *GetUserOperationByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserOperationByIDUsingGETForbidden creates a GetUserOperationByIDUsingGETForbidden with default headers values
func NewGetUserOperationByIDUsingGETForbidden() *GetUserOperationByIDUsingGETForbidden {
	return &GetUserOperationByIDUsingGETForbidden{}
}

/*
GetUserOperationByIDUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUserOperationByIDUsingGETForbidden struct {
}

// IsSuccess returns true when this get user operation by Id using g e t forbidden response has a 2xx status code
func (o *GetUserOperationByIDUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user operation by Id using g e t forbidden response has a 3xx status code
func (o *GetUserOperationByIDUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user operation by Id using g e t forbidden response has a 4xx status code
func (o *GetUserOperationByIDUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user operation by Id using g e t forbidden response has a 5xx status code
func (o *GetUserOperationByIDUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user operation by Id using g e t forbidden response a status code equal to that given
func (o *GetUserOperationByIDUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetUserOperationByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETForbidden ", 403)
}

func (o *GetUserOperationByIDUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETForbidden ", 403)
}

func (o *GetUserOperationByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserOperationByIDUsingGETNotFound creates a GetUserOperationByIDUsingGETNotFound with default headers values
func NewGetUserOperationByIDUsingGETNotFound() *GetUserOperationByIDUsingGETNotFound {
	return &GetUserOperationByIDUsingGETNotFound{}
}

/*
GetUserOperationByIDUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUserOperationByIDUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user operation by Id using g e t not found response has a 2xx status code
func (o *GetUserOperationByIDUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user operation by Id using g e t not found response has a 3xx status code
func (o *GetUserOperationByIDUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user operation by Id using g e t not found response has a 4xx status code
func (o *GetUserOperationByIDUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user operation by Id using g e t not found response has a 5xx status code
func (o *GetUserOperationByIDUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user operation by Id using g e t not found response a status code equal to that given
func (o *GetUserOperationByIDUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUserOperationByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetUserOperationByIDUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetUserOperationByIDUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserOperationByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserOperationByIDUsingGETInternalServerError creates a GetUserOperationByIDUsingGETInternalServerError with default headers values
func NewGetUserOperationByIDUsingGETInternalServerError() *GetUserOperationByIDUsingGETInternalServerError {
	return &GetUserOperationByIDUsingGETInternalServerError{}
}

/*
GetUserOperationByIDUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetUserOperationByIDUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get user operation by Id using g e t internal server error response has a 2xx status code
func (o *GetUserOperationByIDUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user operation by Id using g e t internal server error response has a 3xx status code
func (o *GetUserOperationByIDUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user operation by Id using g e t internal server error response has a 4xx status code
func (o *GetUserOperationByIDUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user operation by Id using g e t internal server error response has a 5xx status code
func (o *GetUserOperationByIDUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user operation by Id using g e t internal server error response a status code equal to that given
func (o *GetUserOperationByIDUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUserOperationByIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETInternalServerError ", 500)
}

func (o *GetUserOperationByIDUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /codestream/api/user-operations/{id}][%d] getUserOperationByIdUsingGETInternalServerError ", 500)
}

func (o *GetUserOperationByIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
