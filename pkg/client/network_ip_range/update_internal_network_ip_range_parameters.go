// Code generated by go-swagger; DO NOT EDIT.

package network_ip_range

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// NewUpdateInternalNetworkIPRangeParams creates a new UpdateInternalNetworkIPRangeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateInternalNetworkIPRangeParams() *UpdateInternalNetworkIPRangeParams {
	return &UpdateInternalNetworkIPRangeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateInternalNetworkIPRangeParamsWithTimeout creates a new UpdateInternalNetworkIPRangeParams object
// with the ability to set a timeout on a request.
func NewUpdateInternalNetworkIPRangeParamsWithTimeout(timeout time.Duration) *UpdateInternalNetworkIPRangeParams {
	return &UpdateInternalNetworkIPRangeParams{
		timeout: timeout,
	}
}

// NewUpdateInternalNetworkIPRangeParamsWithContext creates a new UpdateInternalNetworkIPRangeParams object
// with the ability to set a context for a request.
func NewUpdateInternalNetworkIPRangeParamsWithContext(ctx context.Context) *UpdateInternalNetworkIPRangeParams {
	return &UpdateInternalNetworkIPRangeParams{
		Context: ctx,
	}
}

// NewUpdateInternalNetworkIPRangeParamsWithHTTPClient creates a new UpdateInternalNetworkIPRangeParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateInternalNetworkIPRangeParamsWithHTTPClient(client *http.Client) *UpdateInternalNetworkIPRangeParams {
	return &UpdateInternalNetworkIPRangeParams{
		HTTPClient: client,
	}
}

/*
UpdateInternalNetworkIPRangeParams contains all the parameters to send to the API endpoint

	for the update internal network IP range operation.

	Typically these are written to a http.Request.
*/
type UpdateInternalNetworkIPRangeParams struct {

	/* APIVersion.

	   The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about
	*/
	APIVersion *string

	/* Body.

	   Network IP range Specification
	*/
	Body *models.NetworkIPRangeSpecification

	/* ID.

	   The ID of the network IP range.
	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update internal network IP range params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateInternalNetworkIPRangeParams) WithDefaults() *UpdateInternalNetworkIPRangeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update internal network IP range params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateInternalNetworkIPRangeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) WithTimeout(timeout time.Duration) *UpdateInternalNetworkIPRangeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) WithContext(ctx context.Context) *UpdateInternalNetworkIPRangeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) WithHTTPClient(client *http.Client) *UpdateInternalNetworkIPRangeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) WithAPIVersion(aPIVersion *string) *UpdateInternalNetworkIPRangeParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithBody adds the body to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) WithBody(body *models.NetworkIPRangeSpecification) *UpdateInternalNetworkIPRangeParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) SetBody(body *models.NetworkIPRangeSpecification) {
	o.Body = body
}

// WithID adds the id to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) WithID(id string) *UpdateInternalNetworkIPRangeParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update internal network IP range params
func (o *UpdateInternalNetworkIPRangeParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateInternalNetworkIPRangeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string

		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {

			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
