// Code generated by go-swagger; DO NOT EDIT.

package network_ip_range

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// CreateInternalNetworkIPRangeReader is a Reader for the CreateInternalNetworkIPRange structure.
type CreateInternalNetworkIPRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInternalNetworkIPRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateInternalNetworkIPRangeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInternalNetworkIPRangeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInternalNetworkIPRangeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateInternalNetworkIPRangeCreated creates a CreateInternalNetworkIPRangeCreated with default headers values
func NewCreateInternalNetworkIPRangeCreated() *CreateInternalNetworkIPRangeCreated {
	return &CreateInternalNetworkIPRangeCreated{}
}

/*
CreateInternalNetworkIPRangeCreated describes a response with status code 201, with default header values.

successful operation
*/
type CreateInternalNetworkIPRangeCreated struct {
	Payload *models.NetworkIPRange
}

// IsSuccess returns true when this create internal network Ip range created response has a 2xx status code
func (o *CreateInternalNetworkIPRangeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create internal network Ip range created response has a 3xx status code
func (o *CreateInternalNetworkIPRangeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create internal network Ip range created response has a 4xx status code
func (o *CreateInternalNetworkIPRangeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create internal network Ip range created response has a 5xx status code
func (o *CreateInternalNetworkIPRangeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create internal network Ip range created response a status code equal to that given
func (o *CreateInternalNetworkIPRangeCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateInternalNetworkIPRangeCreated) Error() string {
	return fmt.Sprintf("[POST /iaas/api/network-ip-ranges][%d] createInternalNetworkIpRangeCreated  %+v", 201, o.Payload)
}

func (o *CreateInternalNetworkIPRangeCreated) String() string {
	return fmt.Sprintf("[POST /iaas/api/network-ip-ranges][%d] createInternalNetworkIpRangeCreated  %+v", 201, o.Payload)
}

func (o *CreateInternalNetworkIPRangeCreated) GetPayload() *models.NetworkIPRange {
	return o.Payload
}

func (o *CreateInternalNetworkIPRangeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkIPRange)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternalNetworkIPRangeBadRequest creates a CreateInternalNetworkIPRangeBadRequest with default headers values
func NewCreateInternalNetworkIPRangeBadRequest() *CreateInternalNetworkIPRangeBadRequest {
	return &CreateInternalNetworkIPRangeBadRequest{}
}

/*
CreateInternalNetworkIPRangeBadRequest describes a response with status code 400, with default header values.

Invalid Request - bad data
*/
type CreateInternalNetworkIPRangeBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create internal network Ip range bad request response has a 2xx status code
func (o *CreateInternalNetworkIPRangeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create internal network Ip range bad request response has a 3xx status code
func (o *CreateInternalNetworkIPRangeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create internal network Ip range bad request response has a 4xx status code
func (o *CreateInternalNetworkIPRangeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create internal network Ip range bad request response has a 5xx status code
func (o *CreateInternalNetworkIPRangeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create internal network Ip range bad request response a status code equal to that given
func (o *CreateInternalNetworkIPRangeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateInternalNetworkIPRangeBadRequest) Error() string {
	return fmt.Sprintf("[POST /iaas/api/network-ip-ranges][%d] createInternalNetworkIpRangeBadRequest  %+v", 400, o.Payload)
}

func (o *CreateInternalNetworkIPRangeBadRequest) String() string {
	return fmt.Sprintf("[POST /iaas/api/network-ip-ranges][%d] createInternalNetworkIpRangeBadRequest  %+v", 400, o.Payload)
}

func (o *CreateInternalNetworkIPRangeBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateInternalNetworkIPRangeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternalNetworkIPRangeForbidden creates a CreateInternalNetworkIPRangeForbidden with default headers values
func NewCreateInternalNetworkIPRangeForbidden() *CreateInternalNetworkIPRangeForbidden {
	return &CreateInternalNetworkIPRangeForbidden{}
}

/*
CreateInternalNetworkIPRangeForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateInternalNetworkIPRangeForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this create internal network Ip range forbidden response has a 2xx status code
func (o *CreateInternalNetworkIPRangeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create internal network Ip range forbidden response has a 3xx status code
func (o *CreateInternalNetworkIPRangeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create internal network Ip range forbidden response has a 4xx status code
func (o *CreateInternalNetworkIPRangeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create internal network Ip range forbidden response has a 5xx status code
func (o *CreateInternalNetworkIPRangeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create internal network Ip range forbidden response a status code equal to that given
func (o *CreateInternalNetworkIPRangeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateInternalNetworkIPRangeForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/network-ip-ranges][%d] createInternalNetworkIpRangeForbidden  %+v", 403, o.Payload)
}

func (o *CreateInternalNetworkIPRangeForbidden) String() string {
	return fmt.Sprintf("[POST /iaas/api/network-ip-ranges][%d] createInternalNetworkIpRangeForbidden  %+v", 403, o.Payload)
}

func (o *CreateInternalNetworkIPRangeForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *CreateInternalNetworkIPRangeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
