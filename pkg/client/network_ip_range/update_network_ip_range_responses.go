// Code generated by go-swagger; DO NOT EDIT.

package network_ip_range

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateNetworkIPRangeReader is a Reader for the UpdateNetworkIPRange structure.
type UpdateNetworkIPRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkIPRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkIPRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateNetworkIPRangeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateNetworkIPRangeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateNetworkIPRangeOK creates a UpdateNetworkIPRangeOK with default headers values
func NewUpdateNetworkIPRangeOK() *UpdateNetworkIPRangeOK {
	return &UpdateNetworkIPRangeOK{}
}

/*UpdateNetworkIPRangeOK handles this case with default header values.

successful operation
*/
type UpdateNetworkIPRangeOK struct {
	Payload *models.FabricNetwork
}

func (o *UpdateNetworkIPRangeOK) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/network-ip-ranges/{id}][%d] updateNetworkIpRangeOK  %+v", 200, o.Payload)
}

func (o *UpdateNetworkIPRangeOK) GetPayload() *models.FabricNetwork {
	return o.Payload
}

func (o *UpdateNetworkIPRangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FabricNetwork)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNetworkIPRangeForbidden creates a UpdateNetworkIPRangeForbidden with default headers values
func NewUpdateNetworkIPRangeForbidden() *UpdateNetworkIPRangeForbidden {
	return &UpdateNetworkIPRangeForbidden{}
}

/*UpdateNetworkIPRangeForbidden handles this case with default header values.

Forbidden
*/
type UpdateNetworkIPRangeForbidden struct {
}

func (o *UpdateNetworkIPRangeForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/network-ip-ranges/{id}][%d] updateNetworkIpRangeForbidden ", 403)
}

func (o *UpdateNetworkIPRangeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNetworkIPRangeNotFound creates a UpdateNetworkIPRangeNotFound with default headers values
func NewUpdateNetworkIPRangeNotFound() *UpdateNetworkIPRangeNotFound {
	return &UpdateNetworkIPRangeNotFound{}
}

/*UpdateNetworkIPRangeNotFound handles this case with default header values.

Not Found
*/
type UpdateNetworkIPRangeNotFound struct {
}

func (o *UpdateNetworkIPRangeNotFound) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/network-ip-ranges/{id}][%d] updateNetworkIpRangeNotFound ", 404)
}

func (o *UpdateNetworkIPRangeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
