// Code generated by go-swagger; DO NOT EDIT.

package network_ip_range

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetInternalNetworkIPRangeReader is a Reader for the GetInternalNetworkIPRange structure.
type GetInternalNetworkIPRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInternalNetworkIPRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInternalNetworkIPRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetInternalNetworkIPRangeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInternalNetworkIPRangeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInternalNetworkIPRangeOK creates a GetInternalNetworkIPRangeOK with default headers values
func NewGetInternalNetworkIPRangeOK() *GetInternalNetworkIPRangeOK {
	return &GetInternalNetworkIPRangeOK{}
}

/*
GetInternalNetworkIPRangeOK describes a response with status code 200, with default header values.

successful operation
*/
type GetInternalNetworkIPRangeOK struct {
	Payload *models.NetworkIPRange
}

// IsSuccess returns true when this get internal network Ip range o k response has a 2xx status code
func (o *GetInternalNetworkIPRangeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get internal network Ip range o k response has a 3xx status code
func (o *GetInternalNetworkIPRangeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get internal network Ip range o k response has a 4xx status code
func (o *GetInternalNetworkIPRangeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get internal network Ip range o k response has a 5xx status code
func (o *GetInternalNetworkIPRangeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get internal network Ip range o k response a status code equal to that given
func (o *GetInternalNetworkIPRangeOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetInternalNetworkIPRangeOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getInternalNetworkIpRangeOK  %+v", 200, o.Payload)
}

func (o *GetInternalNetworkIPRangeOK) String() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getInternalNetworkIpRangeOK  %+v", 200, o.Payload)
}

func (o *GetInternalNetworkIPRangeOK) GetPayload() *models.NetworkIPRange {
	return o.Payload
}

func (o *GetInternalNetworkIPRangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkIPRange)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternalNetworkIPRangeForbidden creates a GetInternalNetworkIPRangeForbidden with default headers values
func NewGetInternalNetworkIPRangeForbidden() *GetInternalNetworkIPRangeForbidden {
	return &GetInternalNetworkIPRangeForbidden{}
}

/*
GetInternalNetworkIPRangeForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInternalNetworkIPRangeForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this get internal network Ip range forbidden response has a 2xx status code
func (o *GetInternalNetworkIPRangeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get internal network Ip range forbidden response has a 3xx status code
func (o *GetInternalNetworkIPRangeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get internal network Ip range forbidden response has a 4xx status code
func (o *GetInternalNetworkIPRangeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get internal network Ip range forbidden response has a 5xx status code
func (o *GetInternalNetworkIPRangeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get internal network Ip range forbidden response a status code equal to that given
func (o *GetInternalNetworkIPRangeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetInternalNetworkIPRangeForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getInternalNetworkIpRangeForbidden  %+v", 403, o.Payload)
}

func (o *GetInternalNetworkIPRangeForbidden) String() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getInternalNetworkIpRangeForbidden  %+v", 403, o.Payload)
}

func (o *GetInternalNetworkIPRangeForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetInternalNetworkIPRangeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternalNetworkIPRangeNotFound creates a GetInternalNetworkIPRangeNotFound with default headers values
func NewGetInternalNetworkIPRangeNotFound() *GetInternalNetworkIPRangeNotFound {
	return &GetInternalNetworkIPRangeNotFound{}
}

/*
GetInternalNetworkIPRangeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetInternalNetworkIPRangeNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get internal network Ip range not found response has a 2xx status code
func (o *GetInternalNetworkIPRangeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get internal network Ip range not found response has a 3xx status code
func (o *GetInternalNetworkIPRangeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get internal network Ip range not found response has a 4xx status code
func (o *GetInternalNetworkIPRangeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get internal network Ip range not found response has a 5xx status code
func (o *GetInternalNetworkIPRangeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get internal network Ip range not found response a status code equal to that given
func (o *GetInternalNetworkIPRangeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetInternalNetworkIPRangeNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getInternalNetworkIpRangeNotFound  %+v", 404, o.Payload)
}

func (o *GetInternalNetworkIPRangeNotFound) String() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getInternalNetworkIpRangeNotFound  %+v", 404, o.Payload)
}

func (o *GetInternalNetworkIPRangeNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInternalNetworkIPRangeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
