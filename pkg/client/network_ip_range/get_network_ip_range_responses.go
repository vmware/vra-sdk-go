// Code generated by go-swagger; DO NOT EDIT.

package network_ip_range

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetNetworkIPRangeReader is a Reader for the GetNetworkIPRange structure.
type GetNetworkIPRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkIPRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkIPRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetNetworkIPRangeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNetworkIPRangeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNetworkIPRangeOK creates a GetNetworkIPRangeOK with default headers values
func NewGetNetworkIPRangeOK() *GetNetworkIPRangeOK {
	return &GetNetworkIPRangeOK{}
}

/*GetNetworkIPRangeOK handles this case with default header values.

successful operation
*/
type GetNetworkIPRangeOK struct {
	Payload *models.NetworkIPRange
}

func (o *GetNetworkIPRangeOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getNetworkIpRangeOK  %+v", 200, o.Payload)
}

func (o *GetNetworkIPRangeOK) GetPayload() *models.NetworkIPRange {
	return o.Payload
}

func (o *GetNetworkIPRangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkIPRange)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkIPRangeForbidden creates a GetNetworkIPRangeForbidden with default headers values
func NewGetNetworkIPRangeForbidden() *GetNetworkIPRangeForbidden {
	return &GetNetworkIPRangeForbidden{}
}

/*GetNetworkIPRangeForbidden handles this case with default header values.

Forbidden
*/
type GetNetworkIPRangeForbidden struct {
}

func (o *GetNetworkIPRangeForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getNetworkIpRangeForbidden ", 403)
}

func (o *GetNetworkIPRangeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNetworkIPRangeNotFound creates a GetNetworkIPRangeNotFound with default headers values
func NewGetNetworkIPRangeNotFound() *GetNetworkIPRangeNotFound {
	return &GetNetworkIPRangeNotFound{}
}

/*GetNetworkIPRangeNotFound handles this case with default header values.

Not Found
*/
type GetNetworkIPRangeNotFound struct {
}

func (o *GetNetworkIPRangeNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges/{id}][%d] getNetworkIpRangeNotFound ", 404)
}

func (o *GetNetworkIPRangeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
