// Code generated by go-swagger; DO NOT EDIT.

package network_ip_range

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetNetworkIPRangesReader is a Reader for the GetNetworkIPRanges structure.
type GetNetworkIPRangesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkIPRangesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkIPRangesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetNetworkIPRangesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNetworkIPRangesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNetworkIPRangesOK creates a GetNetworkIPRangesOK with default headers values
func NewGetNetworkIPRangesOK() *GetNetworkIPRangesOK {
	return &GetNetworkIPRangesOK{}
}

/*GetNetworkIPRangesOK handles this case with default header values.

successful operation
*/
type GetNetworkIPRangesOK struct {
	Payload *models.NetworkIPRangeResult
}

func (o *GetNetworkIPRangesOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges][%d] getNetworkIpRangesOK  %+v", 200, o.Payload)
}

func (o *GetNetworkIPRangesOK) GetPayload() *models.NetworkIPRangeResult {
	return o.Payload
}

func (o *GetNetworkIPRangesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkIPRangeResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkIPRangesForbidden creates a GetNetworkIPRangesForbidden with default headers values
func NewGetNetworkIPRangesForbidden() *GetNetworkIPRangesForbidden {
	return &GetNetworkIPRangesForbidden{}
}

/*GetNetworkIPRangesForbidden handles this case with default header values.

Forbidden
*/
type GetNetworkIPRangesForbidden struct {
}

func (o *GetNetworkIPRangesForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges][%d] getNetworkIpRangesForbidden ", 403)
}

func (o *GetNetworkIPRangesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNetworkIPRangesNotFound creates a GetNetworkIPRangesNotFound with default headers values
func NewGetNetworkIPRangesNotFound() *GetNetworkIPRangesNotFound {
	return &GetNetworkIPRangesNotFound{}
}

/*GetNetworkIPRangesNotFound handles this case with default header values.

Not Found
*/
type GetNetworkIPRangesNotFound struct {
}

func (o *GetNetworkIPRangesNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/network-ip-ranges][%d] getNetworkIpRangesNotFound ", 404)
}

func (o *GetNetworkIPRangesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
