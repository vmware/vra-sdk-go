// Code generated by go-swagger; DO NOT EDIT.

package disk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetBlockDeviceReader is a Reader for the GetBlockDevice structure.
type GetBlockDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBlockDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBlockDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetBlockDeviceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBlockDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBlockDeviceOK creates a GetBlockDeviceOK with default headers values
func NewGetBlockDeviceOK() *GetBlockDeviceOK {
	return &GetBlockDeviceOK{}
}

/*
GetBlockDeviceOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBlockDeviceOK struct {
	Payload *models.BlockDevice
}

// IsSuccess returns true when this get block device o k response has a 2xx status code
func (o *GetBlockDeviceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get block device o k response has a 3xx status code
func (o *GetBlockDeviceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get block device o k response has a 4xx status code
func (o *GetBlockDeviceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get block device o k response has a 5xx status code
func (o *GetBlockDeviceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get block device o k response a status code equal to that given
func (o *GetBlockDeviceOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetBlockDeviceOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices/{id}][%d] getBlockDeviceOK  %+v", 200, o.Payload)
}

func (o *GetBlockDeviceOK) String() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices/{id}][%d] getBlockDeviceOK  %+v", 200, o.Payload)
}

func (o *GetBlockDeviceOK) GetPayload() *models.BlockDevice {
	return o.Payload
}

func (o *GetBlockDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BlockDevice)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlockDeviceForbidden creates a GetBlockDeviceForbidden with default headers values
func NewGetBlockDeviceForbidden() *GetBlockDeviceForbidden {
	return &GetBlockDeviceForbidden{}
}

/*
GetBlockDeviceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBlockDeviceForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this get block device forbidden response has a 2xx status code
func (o *GetBlockDeviceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get block device forbidden response has a 3xx status code
func (o *GetBlockDeviceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get block device forbidden response has a 4xx status code
func (o *GetBlockDeviceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get block device forbidden response has a 5xx status code
func (o *GetBlockDeviceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get block device forbidden response a status code equal to that given
func (o *GetBlockDeviceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetBlockDeviceForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices/{id}][%d] getBlockDeviceForbidden  %+v", 403, o.Payload)
}

func (o *GetBlockDeviceForbidden) String() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices/{id}][%d] getBlockDeviceForbidden  %+v", 403, o.Payload)
}

func (o *GetBlockDeviceForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetBlockDeviceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlockDeviceNotFound creates a GetBlockDeviceNotFound with default headers values
func NewGetBlockDeviceNotFound() *GetBlockDeviceNotFound {
	return &GetBlockDeviceNotFound{}
}

/*
GetBlockDeviceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBlockDeviceNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get block device not found response has a 2xx status code
func (o *GetBlockDeviceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get block device not found response has a 3xx status code
func (o *GetBlockDeviceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get block device not found response has a 4xx status code
func (o *GetBlockDeviceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get block device not found response has a 5xx status code
func (o *GetBlockDeviceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get block device not found response a status code equal to that given
func (o *GetBlockDeviceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetBlockDeviceNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices/{id}][%d] getBlockDeviceNotFound  %+v", 404, o.Payload)
}

func (o *GetBlockDeviceNotFound) String() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices/{id}][%d] getBlockDeviceNotFound  %+v", 404, o.Payload)
}

func (o *GetBlockDeviceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBlockDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
