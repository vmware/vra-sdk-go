// Code generated by go-swagger; DO NOT EDIT.

package disk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetBlockDevicesReader is a Reader for the GetBlockDevices structure.
type GetBlockDevicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBlockDevicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBlockDevicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetBlockDevicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBlockDevicesOK creates a GetBlockDevicesOK with default headers values
func NewGetBlockDevicesOK() *GetBlockDevicesOK {
	return &GetBlockDevicesOK{}
}

/*
GetBlockDevicesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBlockDevicesOK struct {
	Payload *models.BlockDeviceResult
}

// IsSuccess returns true when this get block devices o k response has a 2xx status code
func (o *GetBlockDevicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get block devices o k response has a 3xx status code
func (o *GetBlockDevicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get block devices o k response has a 4xx status code
func (o *GetBlockDevicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get block devices o k response has a 5xx status code
func (o *GetBlockDevicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get block devices o k response a status code equal to that given
func (o *GetBlockDevicesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetBlockDevicesOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices][%d] getBlockDevicesOK  %+v", 200, o.Payload)
}

func (o *GetBlockDevicesOK) String() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices][%d] getBlockDevicesOK  %+v", 200, o.Payload)
}

func (o *GetBlockDevicesOK) GetPayload() *models.BlockDeviceResult {
	return o.Payload
}

func (o *GetBlockDevicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BlockDeviceResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlockDevicesForbidden creates a GetBlockDevicesForbidden with default headers values
func NewGetBlockDevicesForbidden() *GetBlockDevicesForbidden {
	return &GetBlockDevicesForbidden{}
}

/*
GetBlockDevicesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBlockDevicesForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this get block devices forbidden response has a 2xx status code
func (o *GetBlockDevicesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get block devices forbidden response has a 3xx status code
func (o *GetBlockDevicesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get block devices forbidden response has a 4xx status code
func (o *GetBlockDevicesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get block devices forbidden response has a 5xx status code
func (o *GetBlockDevicesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get block devices forbidden response a status code equal to that given
func (o *GetBlockDevicesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetBlockDevicesForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices][%d] getBlockDevicesForbidden  %+v", 403, o.Payload)
}

func (o *GetBlockDevicesForbidden) String() string {
	return fmt.Sprintf("[GET /iaas/api/block-devices][%d] getBlockDevicesForbidden  %+v", 403, o.Payload)
}

func (o *GetBlockDevicesForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetBlockDevicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
