// Code generated by go-swagger; DO NOT EDIT.

package disk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// RevertDiskSnapshotReader is a Reader for the RevertDiskSnapshot structure.
type RevertDiskSnapshotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevertDiskSnapshotReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewRevertDiskSnapshotAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRevertDiskSnapshotForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevertDiskSnapshotNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevertDiskSnapshotAccepted creates a RevertDiskSnapshotAccepted with default headers values
func NewRevertDiskSnapshotAccepted() *RevertDiskSnapshotAccepted {
	return &RevertDiskSnapshotAccepted{}
}

/*
RevertDiskSnapshotAccepted describes a response with status code 202, with default header values.

successful operation
*/
type RevertDiskSnapshotAccepted struct {
	Payload *models.RequestTracker
}

// IsSuccess returns true when this revert disk snapshot accepted response has a 2xx status code
func (o *RevertDiskSnapshotAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revert disk snapshot accepted response has a 3xx status code
func (o *RevertDiskSnapshotAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revert disk snapshot accepted response has a 4xx status code
func (o *RevertDiskSnapshotAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this revert disk snapshot accepted response has a 5xx status code
func (o *RevertDiskSnapshotAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this revert disk snapshot accepted response a status code equal to that given
func (o *RevertDiskSnapshotAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *RevertDiskSnapshotAccepted) Error() string {
	return fmt.Sprintf("[POST /iaas/api/block-devices/{diskId}/operations/revert][%d] revertDiskSnapshotAccepted  %+v", 202, o.Payload)
}

func (o *RevertDiskSnapshotAccepted) String() string {
	return fmt.Sprintf("[POST /iaas/api/block-devices/{diskId}/operations/revert][%d] revertDiskSnapshotAccepted  %+v", 202, o.Payload)
}

func (o *RevertDiskSnapshotAccepted) GetPayload() *models.RequestTracker {
	return o.Payload
}

func (o *RevertDiskSnapshotAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevertDiskSnapshotForbidden creates a RevertDiskSnapshotForbidden with default headers values
func NewRevertDiskSnapshotForbidden() *RevertDiskSnapshotForbidden {
	return &RevertDiskSnapshotForbidden{}
}

/*
RevertDiskSnapshotForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RevertDiskSnapshotForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this revert disk snapshot forbidden response has a 2xx status code
func (o *RevertDiskSnapshotForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revert disk snapshot forbidden response has a 3xx status code
func (o *RevertDiskSnapshotForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revert disk snapshot forbidden response has a 4xx status code
func (o *RevertDiskSnapshotForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revert disk snapshot forbidden response has a 5xx status code
func (o *RevertDiskSnapshotForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revert disk snapshot forbidden response a status code equal to that given
func (o *RevertDiskSnapshotForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RevertDiskSnapshotForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/block-devices/{diskId}/operations/revert][%d] revertDiskSnapshotForbidden  %+v", 403, o.Payload)
}

func (o *RevertDiskSnapshotForbidden) String() string {
	return fmt.Sprintf("[POST /iaas/api/block-devices/{diskId}/operations/revert][%d] revertDiskSnapshotForbidden  %+v", 403, o.Payload)
}

func (o *RevertDiskSnapshotForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *RevertDiskSnapshotForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevertDiskSnapshotNotFound creates a RevertDiskSnapshotNotFound with default headers values
func NewRevertDiskSnapshotNotFound() *RevertDiskSnapshotNotFound {
	return &RevertDiskSnapshotNotFound{}
}

/*
RevertDiskSnapshotNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RevertDiskSnapshotNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this revert disk snapshot not found response has a 2xx status code
func (o *RevertDiskSnapshotNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revert disk snapshot not found response has a 3xx status code
func (o *RevertDiskSnapshotNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revert disk snapshot not found response has a 4xx status code
func (o *RevertDiskSnapshotNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revert disk snapshot not found response has a 5xx status code
func (o *RevertDiskSnapshotNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revert disk snapshot not found response a status code equal to that given
func (o *RevertDiskSnapshotNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RevertDiskSnapshotNotFound) Error() string {
	return fmt.Sprintf("[POST /iaas/api/block-devices/{diskId}/operations/revert][%d] revertDiskSnapshotNotFound  %+v", 404, o.Payload)
}

func (o *RevertDiskSnapshotNotFound) String() string {
	return fmt.Sprintf("[POST /iaas/api/block-devices/{diskId}/operations/revert][%d] revertDiskSnapshotNotFound  %+v", 404, o.Payload)
}

func (o *RevertDiskSnapshotNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevertDiskSnapshotNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
