// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetResourceByIDUsingGETReader is a Reader for the GetResourceByIDUsingGET structure.
type GetResourceByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetResourceByIDUsingGETOK creates a GetResourceByIDUsingGETOK with default headers values
func NewGetResourceByIDUsingGETOK() *GetResourceByIDUsingGETOK {
	return &GetResourceByIDUsingGETOK{}
}

/*GetResourceByIDUsingGETOK handles this case with default header values.

OK
*/
type GetResourceByIDUsingGETOK struct {
	Payload *models.Resource
}

func (o *GetResourceByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{depId}/resources/{resourceId}][%d] getResourceByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetResourceByIDUsingGETOK) GetPayload() *models.Resource {
	return o.Payload
}

func (o *GetResourceByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Resource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByIDUsingGETUnauthorized creates a GetResourceByIDUsingGETUnauthorized with default headers values
func NewGetResourceByIDUsingGETUnauthorized() *GetResourceByIDUsingGETUnauthorized {
	return &GetResourceByIDUsingGETUnauthorized{}
}

/*GetResourceByIDUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetResourceByIDUsingGETUnauthorized struct {
}

func (o *GetResourceByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{depId}/resources/{resourceId}][%d] getResourceByIdUsingGETUnauthorized ", 401)
}

func (o *GetResourceByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceByIDUsingGETNotFound creates a GetResourceByIDUsingGETNotFound with default headers values
func NewGetResourceByIDUsingGETNotFound() *GetResourceByIDUsingGETNotFound {
	return &GetResourceByIDUsingGETNotFound{}
}

/*GetResourceByIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetResourceByIDUsingGETNotFound struct {
}

func (o *GetResourceByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /deployment/api/deployments/{depId}/resources/{resourceId}][%d] getResourceByIdUsingGETNotFound ", 404)
}

func (o *GetResourceByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
