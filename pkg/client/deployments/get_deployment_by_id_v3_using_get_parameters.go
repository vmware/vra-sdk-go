// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetDeploymentByIDV3UsingGETParams creates a new GetDeploymentByIDV3UsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDeploymentByIDV3UsingGETParams() *GetDeploymentByIDV3UsingGETParams {
	return &GetDeploymentByIDV3UsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeploymentByIDV3UsingGETParamsWithTimeout creates a new GetDeploymentByIDV3UsingGETParams object
// with the ability to set a timeout on a request.
func NewGetDeploymentByIDV3UsingGETParamsWithTimeout(timeout time.Duration) *GetDeploymentByIDV3UsingGETParams {
	return &GetDeploymentByIDV3UsingGETParams{
		timeout: timeout,
	}
}

// NewGetDeploymentByIDV3UsingGETParamsWithContext creates a new GetDeploymentByIDV3UsingGETParams object
// with the ability to set a context for a request.
func NewGetDeploymentByIDV3UsingGETParamsWithContext(ctx context.Context) *GetDeploymentByIDV3UsingGETParams {
	return &GetDeploymentByIDV3UsingGETParams{
		Context: ctx,
	}
}

// NewGetDeploymentByIDV3UsingGETParamsWithHTTPClient creates a new GetDeploymentByIDV3UsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDeploymentByIDV3UsingGETParamsWithHTTPClient(client *http.Client) *GetDeploymentByIDV3UsingGETParams {
	return &GetDeploymentByIDV3UsingGETParams{
		HTTPClient: client,
	}
}

/* GetDeploymentByIDV3UsingGETParams contains all the parameters to send to the API endpoint
   for the get deployment by Id v3 using g e t operation.

   Typically these are written to a http.Request.
*/
type GetDeploymentByIDV3UsingGETParams struct {

	/* APIVersion.

	   The version of the API in yyyy-MM-dd format (UTC). If you do not specify explicitly an exact version, you will be calling the latest supported API version.
	*/
	APIVersion *string

	/* Deleted.

	   Retrieves the deployment, includes soft-deleted deployments that have not yet been completely deleted.
	*/
	Deleted *bool

	/* DeploymentID.

	   Deployment ID

	   Format: uuid
	*/
	DeploymentID strfmt.UUID

	/* Expand.

	   The expanded details of the requested comma separated objects. <br /> 'resources' option returns resources with summary properties
	*/
	Expand []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get deployment by Id v3 using get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDeploymentByIDV3UsingGETParams) WithDefaults() *GetDeploymentByIDV3UsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get deployment by Id v3 using get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDeploymentByIDV3UsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) WithTimeout(timeout time.Duration) *GetDeploymentByIDV3UsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) WithContext(ctx context.Context) *GetDeploymentByIDV3UsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) WithHTTPClient(client *http.Client) *GetDeploymentByIDV3UsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) WithAPIVersion(aPIVersion *string) *GetDeploymentByIDV3UsingGETParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithDeleted adds the deleted to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) WithDeleted(deleted *bool) *GetDeploymentByIDV3UsingGETParams {
	o.SetDeleted(deleted)
	return o
}

// SetDeleted adds the deleted to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) SetDeleted(deleted *bool) {
	o.Deleted = deleted
}

// WithDeploymentID adds the deploymentID to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) WithDeploymentID(deploymentID strfmt.UUID) *GetDeploymentByIDV3UsingGETParams {
	o.SetDeploymentID(deploymentID)
	return o
}

// SetDeploymentID adds the deploymentId to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) SetDeploymentID(deploymentID strfmt.UUID) {
	o.DeploymentID = deploymentID
}

// WithExpand adds the expand to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) WithExpand(expand []string) *GetDeploymentByIDV3UsingGETParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get deployment by Id v3 using get params
func (o *GetDeploymentByIDV3UsingGETParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeploymentByIDV3UsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string

		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {

			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}
	}

	if o.Deleted != nil {

		// query param deleted
		var qrDeleted bool

		if o.Deleted != nil {
			qrDeleted = *o.Deleted
		}
		qDeleted := swag.FormatBool(qrDeleted)
		if qDeleted != "" {

			if err := r.SetQueryParam("deleted", qDeleted); err != nil {
				return err
			}
		}
	}

	// path param deploymentId
	if err := r.SetPathParam("deploymentId", o.DeploymentID.String()); err != nil {
		return err
	}

	if o.Expand != nil {

		// binding items for expand
		joinedExpand := o.bindParamExpand(reg)

		// query array param expand
		if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetDeploymentByIDV3UsingGET binds the parameter expand
func (o *GetDeploymentByIDV3UsingGETParams) bindParamExpand(formats strfmt.Registry) []string {
	expandIR := o.Expand

	var expandIC []string
	for _, expandIIR := range expandIR { // explode []string

		expandIIV := expandIIR // string as string
		expandIC = append(expandIC, expandIIV)
	}

	// items.CollectionFormat: "multi"
	expandIS := swag.JoinByFormat(expandIC, "multi")

	return expandIS
}
