// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDeploymentByIDUsingGETParams creates a new GetDeploymentByIDUsingGETParams object
// with the default values initialized.
func NewGetDeploymentByIDUsingGETParams() *GetDeploymentByIDUsingGETParams {
	var ()
	return &GetDeploymentByIDUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeploymentByIDUsingGETParamsWithTimeout creates a new GetDeploymentByIDUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDeploymentByIDUsingGETParamsWithTimeout(timeout time.Duration) *GetDeploymentByIDUsingGETParams {
	var ()
	return &GetDeploymentByIDUsingGETParams{

		timeout: timeout,
	}
}

// NewGetDeploymentByIDUsingGETParamsWithContext creates a new GetDeploymentByIDUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDeploymentByIDUsingGETParamsWithContext(ctx context.Context) *GetDeploymentByIDUsingGETParams {
	var ()
	return &GetDeploymentByIDUsingGETParams{

		Context: ctx,
	}
}

// NewGetDeploymentByIDUsingGETParamsWithHTTPClient creates a new GetDeploymentByIDUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDeploymentByIDUsingGETParamsWithHTTPClient(client *http.Client) *GetDeploymentByIDUsingGETParams {
	var ()
	return &GetDeploymentByIDUsingGETParams{
		HTTPClient: client,
	}
}

/*GetDeploymentByIDUsingGETParams contains all the parameters to send to the API endpoint
for the get deployment by Id using g e t operation typically these are written to a http.Request
*/
type GetDeploymentByIDUsingGETParams struct {

	/*DepID
	  Deployment ID

	*/
	DepID strfmt.UUID
	/*ExpandLastRequest
	  Expands deployment last request.

	*/
	ExpandLastRequest *bool
	/*ExpandProject
	  The 'project' field of the deployment will be retrieved.

	*/
	ExpandProject *bool
	/*ExpandResources
	  The 'resources' field of the deployment will be retrieved.

	*/
	ExpandResources *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) WithTimeout(timeout time.Duration) *GetDeploymentByIDUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) WithContext(ctx context.Context) *GetDeploymentByIDUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) WithHTTPClient(client *http.Client) *GetDeploymentByIDUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDepID adds the depID to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) WithDepID(depID strfmt.UUID) *GetDeploymentByIDUsingGETParams {
	o.SetDepID(depID)
	return o
}

// SetDepID adds the depId to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) SetDepID(depID strfmt.UUID) {
	o.DepID = depID
}

// WithExpandLastRequest adds the expandLastRequest to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) WithExpandLastRequest(expandLastRequest *bool) *GetDeploymentByIDUsingGETParams {
	o.SetExpandLastRequest(expandLastRequest)
	return o
}

// SetExpandLastRequest adds the expandLastRequest to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) SetExpandLastRequest(expandLastRequest *bool) {
	o.ExpandLastRequest = expandLastRequest
}

// WithExpandProject adds the expandProject to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) WithExpandProject(expandProject *bool) *GetDeploymentByIDUsingGETParams {
	o.SetExpandProject(expandProject)
	return o
}

// SetExpandProject adds the expandProject to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) SetExpandProject(expandProject *bool) {
	o.ExpandProject = expandProject
}

// WithExpandResources adds the expandResources to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) WithExpandResources(expandResources *bool) *GetDeploymentByIDUsingGETParams {
	o.SetExpandResources(expandResources)
	return o
}

// SetExpandResources adds the expandResources to the get deployment by Id using get params
func (o *GetDeploymentByIDUsingGETParams) SetExpandResources(expandResources *bool) {
	o.ExpandResources = expandResources
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeploymentByIDUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param depId
	if err := r.SetPathParam("depId", o.DepID.String()); err != nil {
		return err
	}

	if o.ExpandLastRequest != nil {

		// query param expandLastRequest
		var qrExpandLastRequest bool
		if o.ExpandLastRequest != nil {
			qrExpandLastRequest = *o.ExpandLastRequest
		}
		qExpandLastRequest := swag.FormatBool(qrExpandLastRequest)
		if qExpandLastRequest != "" {
			if err := r.SetQueryParam("expandLastRequest", qExpandLastRequest); err != nil {
				return err
			}
		}

	}

	if o.ExpandProject != nil {

		// query param expandProject
		var qrExpandProject bool
		if o.ExpandProject != nil {
			qrExpandProject = *o.ExpandProject
		}
		qExpandProject := swag.FormatBool(qrExpandProject)
		if qExpandProject != "" {
			if err := r.SetQueryParam("expandProject", qExpandProject); err != nil {
				return err
			}
		}

	}

	if o.ExpandResources != nil {

		// query param expandResources
		var qrExpandResources bool
		if o.ExpandResources != nil {
			qrExpandResources = *o.ExpandResources
		}
		qExpandResources := swag.FormatBool(qrExpandResources)
		if qExpandResources != "" {
			if err := r.SetQueryParam("expandResources", qExpandResources); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
