// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetApplciationByIDUsingGET2Params creates a new GetApplciationByIDUsingGET2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetApplciationByIDUsingGET2Params() *GetApplciationByIDUsingGET2Params {
	return &GetApplciationByIDUsingGET2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetApplciationByIDUsingGET2ParamsWithTimeout creates a new GetApplciationByIDUsingGET2Params object
// with the ability to set a timeout on a request.
func NewGetApplciationByIDUsingGET2ParamsWithTimeout(timeout time.Duration) *GetApplciationByIDUsingGET2Params {
	return &GetApplciationByIDUsingGET2Params{
		timeout: timeout,
	}
}

// NewGetApplciationByIDUsingGET2ParamsWithContext creates a new GetApplciationByIDUsingGET2Params object
// with the ability to set a context for a request.
func NewGetApplciationByIDUsingGET2ParamsWithContext(ctx context.Context) *GetApplciationByIDUsingGET2Params {
	return &GetApplciationByIDUsingGET2Params{
		Context: ctx,
	}
}

// NewGetApplciationByIDUsingGET2ParamsWithHTTPClient creates a new GetApplciationByIDUsingGET2Params object
// with the ability to set a custom HTTPClient for a request.
func NewGetApplciationByIDUsingGET2ParamsWithHTTPClient(client *http.Client) *GetApplciationByIDUsingGET2Params {
	return &GetApplciationByIDUsingGET2Params{
		HTTPClient: client,
	}
}

/* GetApplciationByIDUsingGET2Params contains all the parameters to send to the API endpoint
   for the get applciation by Id using g e t 2 operation.

   Typically these are written to a http.Request.
*/
type GetApplciationByIDUsingGET2Params struct {

	/* APIVersion.

	   The version of the API in yyyy-MM-dd format (UTC). If you do not specify explicitly an exact version, you will be calling the latest supported API version.
	*/
	APIVersion *string

	/* AppID.

	   Application ID
	*/
	AppID string

	/* Expand.

	   The expanded details of the requested comma separated objects. 'resources' option returns resources with all properties.
	*/
	Expand []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get applciation by Id using g e t 2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetApplciationByIDUsingGET2Params) WithDefaults() *GetApplciationByIDUsingGET2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get applciation by Id using g e t 2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetApplciationByIDUsingGET2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) WithTimeout(timeout time.Duration) *GetApplciationByIDUsingGET2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) WithContext(ctx context.Context) *GetApplciationByIDUsingGET2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) WithHTTPClient(client *http.Client) *GetApplciationByIDUsingGET2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) WithAPIVersion(aPIVersion *string) *GetApplciationByIDUsingGET2Params {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithAppID adds the appID to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) WithAppID(appID string) *GetApplciationByIDUsingGET2Params {
	o.SetAppID(appID)
	return o
}

// SetAppID adds the appId to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) SetAppID(appID string) {
	o.AppID = appID
}

// WithExpand adds the expand to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) WithExpand(expand []string) *GetApplciationByIDUsingGET2Params {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get applciation by Id using g e t 2 params
func (o *GetApplciationByIDUsingGET2Params) SetExpand(expand []string) {
	o.Expand = expand
}

// WriteToRequest writes these params to a swagger request
func (o *GetApplciationByIDUsingGET2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string

		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {

			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}
	}

	// path param appId
	if err := r.SetPathParam("appId", o.AppID); err != nil {
		return err
	}

	if o.Expand != nil {

		// binding items for expand
		joinedExpand := o.bindParamExpand(reg)

		// query array param expand
		if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetApplciationByIDUsingGET2 binds the parameter expand
func (o *GetApplciationByIDUsingGET2Params) bindParamExpand(formats strfmt.Registry) []string {
	expandIR := o.Expand

	var expandIC []string
	for _, expandIIR := range expandIR { // explode []string

		expandIIV := expandIIR // string as string
		expandIC = append(expandIC, expandIIV)
	}

	// items.CollectionFormat: "multi"
	expandIS := swag.JoinByFormat(expandIC, "multi")

	return expandIS
}
