// Code generated by go-swagger; DO NOT EDIT.

package property

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// PatchConfigurationPropertyReader is a Reader for the PatchConfigurationProperty structure.
type PatchConfigurationPropertyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchConfigurationPropertyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchConfigurationPropertyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPatchConfigurationPropertyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchConfigurationPropertyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchConfigurationPropertyOK creates a PatchConfigurationPropertyOK with default headers values
func NewPatchConfigurationPropertyOK() *PatchConfigurationPropertyOK {
	return &PatchConfigurationPropertyOK{}
}

/* PatchConfigurationPropertyOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchConfigurationPropertyOK struct {
	Payload *models.ConfigurationProperty
}

func (o *PatchConfigurationPropertyOK) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/configuration-properties][%d] patchConfigurationPropertyOK  %+v", 200, o.Payload)
}
func (o *PatchConfigurationPropertyOK) GetPayload() *models.ConfigurationProperty {
	return o.Payload
}

func (o *PatchConfigurationPropertyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigurationProperty)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConfigurationPropertyForbidden creates a PatchConfigurationPropertyForbidden with default headers values
func NewPatchConfigurationPropertyForbidden() *PatchConfigurationPropertyForbidden {
	return &PatchConfigurationPropertyForbidden{}
}

/* PatchConfigurationPropertyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchConfigurationPropertyForbidden struct {
	Payload *models.ServiceErrorResponse
}

func (o *PatchConfigurationPropertyForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/configuration-properties][%d] patchConfigurationPropertyForbidden  %+v", 403, o.Payload)
}
func (o *PatchConfigurationPropertyForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *PatchConfigurationPropertyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConfigurationPropertyNotFound creates a PatchConfigurationPropertyNotFound with default headers values
func NewPatchConfigurationPropertyNotFound() *PatchConfigurationPropertyNotFound {
	return &PatchConfigurationPropertyNotFound{}
}

/* PatchConfigurationPropertyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PatchConfigurationPropertyNotFound struct {
	Payload *models.Error
}

func (o *PatchConfigurationPropertyNotFound) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/configuration-properties][%d] patchConfigurationPropertyNotFound  %+v", 404, o.Payload)
}
func (o *PatchConfigurationPropertyNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchConfigurationPropertyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
