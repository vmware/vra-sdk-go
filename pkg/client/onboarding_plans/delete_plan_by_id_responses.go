// Code generated by go-swagger; DO NOT EDIT.

package onboarding_plans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeletePlanByIDReader is a Reader for the DeletePlanByID structure.
type DeletePlanByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePlanByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePlanByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePlanByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeletePlanByIDOK creates a DeletePlanByIDOK with default headers values
func NewDeletePlanByIDOK() *DeletePlanByIDOK {
	return &DeletePlanByIDOK{}
}

/*
DeletePlanByIDOK describes a response with status code 200, with default header values.

Success
*/
type DeletePlanByIDOK struct {
}

// IsSuccess returns true when this delete plan by Id o k response has a 2xx status code
func (o *DeletePlanByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete plan by Id o k response has a 3xx status code
func (o *DeletePlanByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan by Id o k response has a 4xx status code
func (o *DeletePlanByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete plan by Id o k response has a 5xx status code
func (o *DeletePlanByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plan by Id o k response a status code equal to that given
func (o *DeletePlanByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeletePlanByIDOK) Error() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/plan/{id}][%d] deletePlanByIdOK ", 200)
}

func (o *DeletePlanByIDOK) String() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/plan/{id}][%d] deletePlanByIdOK ", 200)
}

func (o *DeletePlanByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlanByIDUnauthorized creates a DeletePlanByIDUnauthorized with default headers values
func NewDeletePlanByIDUnauthorized() *DeletePlanByIDUnauthorized {
	return &DeletePlanByIDUnauthorized{}
}

/*
DeletePlanByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeletePlanByIDUnauthorized struct {
}

// IsSuccess returns true when this delete plan by Id unauthorized response has a 2xx status code
func (o *DeletePlanByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete plan by Id unauthorized response has a 3xx status code
func (o *DeletePlanByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete plan by Id unauthorized response has a 4xx status code
func (o *DeletePlanByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete plan by Id unauthorized response has a 5xx status code
func (o *DeletePlanByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete plan by Id unauthorized response a status code equal to that given
func (o *DeletePlanByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeletePlanByIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/plan/{id}][%d] deletePlanByIdUnauthorized ", 401)
}

func (o *DeletePlanByIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /relocation/onboarding/plan/{id}][%d] deletePlanByIdUnauthorized ", 401)
}

func (o *DeletePlanByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
