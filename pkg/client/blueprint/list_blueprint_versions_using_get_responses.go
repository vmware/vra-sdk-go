// Code generated by go-swagger; DO NOT EDIT.

package blueprint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ListBlueprintVersionsUsingGETReader is a Reader for the ListBlueprintVersionsUsingGET structure.
type ListBlueprintVersionsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBlueprintVersionsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListBlueprintVersionsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListBlueprintVersionsUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListBlueprintVersionsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListBlueprintVersionsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListBlueprintVersionsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListBlueprintVersionsUsingGETOK creates a ListBlueprintVersionsUsingGETOK with default headers values
func NewListBlueprintVersionsUsingGETOK() *ListBlueprintVersionsUsingGETOK {
	return &ListBlueprintVersionsUsingGETOK{}
}

/*
ListBlueprintVersionsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListBlueprintVersionsUsingGETOK struct {
	Payload *models.PageOfBlueprintVersion
}

// IsSuccess returns true when this list blueprint versions using g e t o k response has a 2xx status code
func (o *ListBlueprintVersionsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list blueprint versions using g e t o k response has a 3xx status code
func (o *ListBlueprintVersionsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list blueprint versions using g e t o k response has a 4xx status code
func (o *ListBlueprintVersionsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list blueprint versions using g e t o k response has a 5xx status code
func (o *ListBlueprintVersionsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list blueprint versions using g e t o k response a status code equal to that given
func (o *ListBlueprintVersionsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListBlueprintVersionsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETOK  %+v", 200, o.Payload)
}

func (o *ListBlueprintVersionsUsingGETOK) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETOK  %+v", 200, o.Payload)
}

func (o *ListBlueprintVersionsUsingGETOK) GetPayload() *models.PageOfBlueprintVersion {
	return o.Payload
}

func (o *ListBlueprintVersionsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfBlueprintVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBlueprintVersionsUsingGETBadRequest creates a ListBlueprintVersionsUsingGETBadRequest with default headers values
func NewListBlueprintVersionsUsingGETBadRequest() *ListBlueprintVersionsUsingGETBadRequest {
	return &ListBlueprintVersionsUsingGETBadRequest{}
}

/*
ListBlueprintVersionsUsingGETBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListBlueprintVersionsUsingGETBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list blueprint versions using g e t bad request response has a 2xx status code
func (o *ListBlueprintVersionsUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list blueprint versions using g e t bad request response has a 3xx status code
func (o *ListBlueprintVersionsUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list blueprint versions using g e t bad request response has a 4xx status code
func (o *ListBlueprintVersionsUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list blueprint versions using g e t bad request response has a 5xx status code
func (o *ListBlueprintVersionsUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list blueprint versions using g e t bad request response a status code equal to that given
func (o *ListBlueprintVersionsUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListBlueprintVersionsUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *ListBlueprintVersionsUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *ListBlueprintVersionsUsingGETBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListBlueprintVersionsUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBlueprintVersionsUsingGETUnauthorized creates a ListBlueprintVersionsUsingGETUnauthorized with default headers values
func NewListBlueprintVersionsUsingGETUnauthorized() *ListBlueprintVersionsUsingGETUnauthorized {
	return &ListBlueprintVersionsUsingGETUnauthorized{}
}

/*
ListBlueprintVersionsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListBlueprintVersionsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list blueprint versions using g e t unauthorized response has a 2xx status code
func (o *ListBlueprintVersionsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list blueprint versions using g e t unauthorized response has a 3xx status code
func (o *ListBlueprintVersionsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list blueprint versions using g e t unauthorized response has a 4xx status code
func (o *ListBlueprintVersionsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list blueprint versions using g e t unauthorized response has a 5xx status code
func (o *ListBlueprintVersionsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list blueprint versions using g e t unauthorized response a status code equal to that given
func (o *ListBlueprintVersionsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListBlueprintVersionsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETUnauthorized ", 401)
}

func (o *ListBlueprintVersionsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETUnauthorized ", 401)
}

func (o *ListBlueprintVersionsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBlueprintVersionsUsingGETForbidden creates a ListBlueprintVersionsUsingGETForbidden with default headers values
func NewListBlueprintVersionsUsingGETForbidden() *ListBlueprintVersionsUsingGETForbidden {
	return &ListBlueprintVersionsUsingGETForbidden{}
}

/*
ListBlueprintVersionsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListBlueprintVersionsUsingGETForbidden struct {
}

// IsSuccess returns true when this list blueprint versions using g e t forbidden response has a 2xx status code
func (o *ListBlueprintVersionsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list blueprint versions using g e t forbidden response has a 3xx status code
func (o *ListBlueprintVersionsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list blueprint versions using g e t forbidden response has a 4xx status code
func (o *ListBlueprintVersionsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list blueprint versions using g e t forbidden response has a 5xx status code
func (o *ListBlueprintVersionsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list blueprint versions using g e t forbidden response a status code equal to that given
func (o *ListBlueprintVersionsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListBlueprintVersionsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETForbidden ", 403)
}

func (o *ListBlueprintVersionsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETForbidden ", 403)
}

func (o *ListBlueprintVersionsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBlueprintVersionsUsingGETNotFound creates a ListBlueprintVersionsUsingGETNotFound with default headers values
func NewListBlueprintVersionsUsingGETNotFound() *ListBlueprintVersionsUsingGETNotFound {
	return &ListBlueprintVersionsUsingGETNotFound{}
}

/*
ListBlueprintVersionsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListBlueprintVersionsUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list blueprint versions using g e t not found response has a 2xx status code
func (o *ListBlueprintVersionsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list blueprint versions using g e t not found response has a 3xx status code
func (o *ListBlueprintVersionsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list blueprint versions using g e t not found response has a 4xx status code
func (o *ListBlueprintVersionsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list blueprint versions using g e t not found response has a 5xx status code
func (o *ListBlueprintVersionsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list blueprint versions using g e t not found response a status code equal to that given
func (o *ListBlueprintVersionsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListBlueprintVersionsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *ListBlueprintVersionsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /blueprint/api/blueprints/{blueprintId}/versions][%d] listBlueprintVersionsUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *ListBlueprintVersionsUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListBlueprintVersionsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
