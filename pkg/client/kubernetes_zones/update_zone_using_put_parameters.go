// Code generated by go-swagger; DO NOT EDIT.

package kubernetes_zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// NewUpdateZoneUsingPUTParams creates a new UpdateZoneUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateZoneUsingPUTParams() *UpdateZoneUsingPUTParams {
	return &UpdateZoneUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateZoneUsingPUTParamsWithTimeout creates a new UpdateZoneUsingPUTParams object
// with the ability to set a timeout on a request.
func NewUpdateZoneUsingPUTParamsWithTimeout(timeout time.Duration) *UpdateZoneUsingPUTParams {
	return &UpdateZoneUsingPUTParams{
		timeout: timeout,
	}
}

// NewUpdateZoneUsingPUTParamsWithContext creates a new UpdateZoneUsingPUTParams object
// with the ability to set a context for a request.
func NewUpdateZoneUsingPUTParamsWithContext(ctx context.Context) *UpdateZoneUsingPUTParams {
	return &UpdateZoneUsingPUTParams{
		Context: ctx,
	}
}

// NewUpdateZoneUsingPUTParamsWithHTTPClient creates a new UpdateZoneUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateZoneUsingPUTParamsWithHTTPClient(client *http.Client) *UpdateZoneUsingPUTParams {
	return &UpdateZoneUsingPUTParams{
		HTTPClient: client,
	}
}

/* UpdateZoneUsingPUTParams contains all the parameters to send to the API endpoint
   for the update zone using p u t operation.

   Typically these are written to a http.Request.
*/
type UpdateZoneUsingPUTParams struct {

	/* ID.

	   id

	   Format: uuid
	*/
	ID strfmt.UUID

	/* Zone.

	   zone
	*/
	Zone *models.K8SZone

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update zone using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateZoneUsingPUTParams) WithDefaults() *UpdateZoneUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update zone using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateZoneUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) WithTimeout(timeout time.Duration) *UpdateZoneUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) WithContext(ctx context.Context) *UpdateZoneUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) WithHTTPClient(client *http.Client) *UpdateZoneUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) WithID(id strfmt.UUID) *UpdateZoneUsingPUTParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WithZone adds the zone to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) WithZone(zone *models.K8SZone) *UpdateZoneUsingPUTParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the update zone using p u t params
func (o *UpdateZoneUsingPUTParams) SetZone(zone *models.K8SZone) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateZoneUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}
	if o.Zone != nil {
		if err := r.SetBodyParam(o.Zone); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
