// Code generated by go-swagger; DO NOT EDIT.

package kubernetes_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetKubeConfigUsingGETReader is a Reader for the GetKubeConfigUsingGET structure.
type GetKubeConfigUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubeConfigUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubeConfigUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKubeConfigUsingGETOK creates a GetKubeConfigUsingGETOK with default headers values
func NewGetKubeConfigUsingGETOK() *GetKubeConfigUsingGETOK {
	return &GetKubeConfigUsingGETOK{}
}

/* GetKubeConfigUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetKubeConfigUsingGETOK struct {
	Payload *models.ResponseEntity
}

func (o *GetKubeConfigUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /cmx/api/resources/k8s/clusters/{id}/kube-config][%d] getKubeConfigUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetKubeConfigUsingGETOK) GetPayload() *models.ResponseEntity {
	return o.Payload
}

func (o *GetKubeConfigUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
