// Code generated by go-swagger; DO NOT EDIT.

package catalog_admin_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateCatalogItemUsingPATCHReader is a Reader for the UpdateCatalogItemUsingPATCH structure.
type UpdateCatalogItemUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCatalogItemUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCatalogItemUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateCatalogItemUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCatalogItemUsingPATCHOK creates a UpdateCatalogItemUsingPATCHOK with default headers values
func NewUpdateCatalogItemUsingPATCHOK() *UpdateCatalogItemUsingPATCHOK {
	return &UpdateCatalogItemUsingPATCHOK{}
}

/*UpdateCatalogItemUsingPATCHOK handles this case with default header values.

OK
*/
type UpdateCatalogItemUsingPATCHOK struct {
}

func (o *UpdateCatalogItemUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /catalog/api/admin/items/{id}][%d] updateCatalogItemUsingPATCHOK ", 200)
}

func (o *UpdateCatalogItemUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCatalogItemUsingPATCHUnauthorized creates a UpdateCatalogItemUsingPATCHUnauthorized with default headers values
func NewUpdateCatalogItemUsingPATCHUnauthorized() *UpdateCatalogItemUsingPATCHUnauthorized {
	return &UpdateCatalogItemUsingPATCHUnauthorized{}
}

/*UpdateCatalogItemUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateCatalogItemUsingPATCHUnauthorized struct {
}

func (o *UpdateCatalogItemUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /catalog/api/admin/items/{id}][%d] updateCatalogItemUsingPATCHUnauthorized ", 401)
}

func (o *UpdateCatalogItemUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
