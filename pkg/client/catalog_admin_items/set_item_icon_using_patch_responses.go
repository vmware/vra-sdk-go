// Code generated by go-swagger; DO NOT EDIT.

package catalog_admin_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SetItemIconUsingPATCHReader is a Reader for the SetItemIconUsingPATCH structure.
type SetItemIconUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetItemIconUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetItemIconUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetItemIconUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetItemIconUsingPATCHOK creates a SetItemIconUsingPATCHOK with default headers values
func NewSetItemIconUsingPATCHOK() *SetItemIconUsingPATCHOK {
	return &SetItemIconUsingPATCHOK{}
}

/*SetItemIconUsingPATCHOK handles this case with default header values.

OK
*/
type SetItemIconUsingPATCHOK struct {
}

func (o *SetItemIconUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /catalog/api/admin/items/{id}][%d] setItemIconUsingPATCHOK ", 200)
}

func (o *SetItemIconUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetItemIconUsingPATCHUnauthorized creates a SetItemIconUsingPATCHUnauthorized with default headers values
func NewSetItemIconUsingPATCHUnauthorized() *SetItemIconUsingPATCHUnauthorized {
	return &SetItemIconUsingPATCHUnauthorized{}
}

/*SetItemIconUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type SetItemIconUsingPATCHUnauthorized struct {
}

func (o *SetItemIconUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /catalog/api/admin/items/{id}][%d] setItemIconUsingPATCHUnauthorized ", 401)
}

func (o *SetItemIconUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
