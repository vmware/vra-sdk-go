// Code generated by go-swagger; DO NOT EDIT.

package catalog_admin_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateCatalogItemUsingPATCH2Reader is a Reader for the UpdateCatalogItemUsingPATCH2 structure.
type UpdateCatalogItemUsingPATCH2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCatalogItemUsingPATCH2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCatalogItemUsingPATCH2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateCatalogItemUsingPATCH2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCatalogItemUsingPATCH2OK creates a UpdateCatalogItemUsingPATCH2OK with default headers values
func NewUpdateCatalogItemUsingPATCH2OK() *UpdateCatalogItemUsingPATCH2OK {
	return &UpdateCatalogItemUsingPATCH2OK{}
}

/*
UpdateCatalogItemUsingPATCH2OK describes a response with status code 200, with default header values.

OK
*/
type UpdateCatalogItemUsingPATCH2OK struct {
}

// IsSuccess returns true when this update catalog item using p a t c h2 o k response has a 2xx status code
func (o *UpdateCatalogItemUsingPATCH2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update catalog item using p a t c h2 o k response has a 3xx status code
func (o *UpdateCatalogItemUsingPATCH2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update catalog item using p a t c h2 o k response has a 4xx status code
func (o *UpdateCatalogItemUsingPATCH2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update catalog item using p a t c h2 o k response has a 5xx status code
func (o *UpdateCatalogItemUsingPATCH2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this update catalog item using p a t c h2 o k response a status code equal to that given
func (o *UpdateCatalogItemUsingPATCH2OK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateCatalogItemUsingPATCH2OK) Error() string {
	return fmt.Sprintf("[PATCH /catalog/api/admin/items/{id}][%d] updateCatalogItemUsingPATCH2OK ", 200)
}

func (o *UpdateCatalogItemUsingPATCH2OK) String() string {
	return fmt.Sprintf("[PATCH /catalog/api/admin/items/{id}][%d] updateCatalogItemUsingPATCH2OK ", 200)
}

func (o *UpdateCatalogItemUsingPATCH2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCatalogItemUsingPATCH2Unauthorized creates a UpdateCatalogItemUsingPATCH2Unauthorized with default headers values
func NewUpdateCatalogItemUsingPATCH2Unauthorized() *UpdateCatalogItemUsingPATCH2Unauthorized {
	return &UpdateCatalogItemUsingPATCH2Unauthorized{}
}

/*
UpdateCatalogItemUsingPATCH2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateCatalogItemUsingPATCH2Unauthorized struct {
}

// IsSuccess returns true when this update catalog item using p a t c h2 unauthorized response has a 2xx status code
func (o *UpdateCatalogItemUsingPATCH2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update catalog item using p a t c h2 unauthorized response has a 3xx status code
func (o *UpdateCatalogItemUsingPATCH2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update catalog item using p a t c h2 unauthorized response has a 4xx status code
func (o *UpdateCatalogItemUsingPATCH2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update catalog item using p a t c h2 unauthorized response has a 5xx status code
func (o *UpdateCatalogItemUsingPATCH2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update catalog item using p a t c h2 unauthorized response a status code equal to that given
func (o *UpdateCatalogItemUsingPATCH2Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateCatalogItemUsingPATCH2Unauthorized) Error() string {
	return fmt.Sprintf("[PATCH /catalog/api/admin/items/{id}][%d] updateCatalogItemUsingPATCH2Unauthorized ", 401)
}

func (o *UpdateCatalogItemUsingPATCH2Unauthorized) String() string {
	return fmt.Sprintf("[PATCH /catalog/api/admin/items/{id}][%d] updateCatalogItemUsingPATCH2Unauthorized ", 401)
}

func (o *UpdateCatalogItemUsingPATCH2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
