// Code generated by go-swagger; DO NOT EDIT.

package flavors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetFlavorsParams creates a new GetFlavorsParams object
// with the default values initialized.
func NewGetFlavorsParams() *GetFlavorsParams {
	var ()
	return &GetFlavorsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFlavorsParamsWithTimeout creates a new GetFlavorsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFlavorsParamsWithTimeout(timeout time.Duration) *GetFlavorsParams {
	var ()
	return &GetFlavorsParams{

		timeout: timeout,
	}
}

// NewGetFlavorsParamsWithContext creates a new GetFlavorsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFlavorsParamsWithContext(ctx context.Context) *GetFlavorsParams {
	var ()
	return &GetFlavorsParams{

		Context: ctx,
	}
}

// NewGetFlavorsParamsWithHTTPClient creates a new GetFlavorsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFlavorsParamsWithHTTPClient(client *http.Client) *GetFlavorsParams {
	var ()
	return &GetFlavorsParams{
		HTTPClient: client,
	}
}

/*GetFlavorsParams contains all the parameters to send to the API endpoint
for the get flavors operation typically these are written to a http.Request
*/
type GetFlavorsParams struct {

	/*APIVersion
	  The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about

	*/
	APIVersion *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get flavors params
func (o *GetFlavorsParams) WithTimeout(timeout time.Duration) *GetFlavorsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get flavors params
func (o *GetFlavorsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get flavors params
func (o *GetFlavorsParams) WithContext(ctx context.Context) *GetFlavorsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get flavors params
func (o *GetFlavorsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get flavors params
func (o *GetFlavorsParams) WithHTTPClient(client *http.Client) *GetFlavorsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get flavors params
func (o *GetFlavorsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get flavors params
func (o *GetFlavorsParams) WithAPIVersion(aPIVersion *string) *GetFlavorsParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get flavors params
func (o *GetFlavorsParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WriteToRequest writes these params to a swagger request
func (o *GetFlavorsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string
		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {
			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
