// Code generated by go-swagger; DO NOT EDIT.

package t_m_c_endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetWorkspacesByEndpointUsingGETReader is a Reader for the GetWorkspacesByEndpointUsingGET structure.
type GetWorkspacesByEndpointUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkspacesByEndpointUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkspacesByEndpointUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetWorkspacesByEndpointUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkspacesByEndpointUsingGETOK creates a GetWorkspacesByEndpointUsingGETOK with default headers values
func NewGetWorkspacesByEndpointUsingGETOK() *GetWorkspacesByEndpointUsingGETOK {
	return &GetWorkspacesByEndpointUsingGETOK{}
}

/*
GetWorkspacesByEndpointUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetWorkspacesByEndpointUsingGETOK struct {
	Payload *models.PageOfWorkspace
}

// IsSuccess returns true when this get workspaces by endpoint using g e t o k response has a 2xx status code
func (o *GetWorkspacesByEndpointUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workspaces by endpoint using g e t o k response has a 3xx status code
func (o *GetWorkspacesByEndpointUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspaces by endpoint using g e t o k response has a 4xx status code
func (o *GetWorkspacesByEndpointUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workspaces by endpoint using g e t o k response has a 5xx status code
func (o *GetWorkspacesByEndpointUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspaces by endpoint using g e t o k response a status code equal to that given
func (o *GetWorkspacesByEndpointUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetWorkspacesByEndpointUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /cmx/api/resources/tmc/endpoints/{id}/workspaces][%d] getWorkspacesByEndpointUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetWorkspacesByEndpointUsingGETOK) String() string {
	return fmt.Sprintf("[GET /cmx/api/resources/tmc/endpoints/{id}/workspaces][%d] getWorkspacesByEndpointUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetWorkspacesByEndpointUsingGETOK) GetPayload() *models.PageOfWorkspace {
	return o.Payload
}

func (o *GetWorkspacesByEndpointUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfWorkspace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspacesByEndpointUsingGETForbidden creates a GetWorkspacesByEndpointUsingGETForbidden with default headers values
func NewGetWorkspacesByEndpointUsingGETForbidden() *GetWorkspacesByEndpointUsingGETForbidden {
	return &GetWorkspacesByEndpointUsingGETForbidden{}
}

/*
GetWorkspacesByEndpointUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden, the user lacks permissions
*/
type GetWorkspacesByEndpointUsingGETForbidden struct {
}

// IsSuccess returns true when this get workspaces by endpoint using g e t forbidden response has a 2xx status code
func (o *GetWorkspacesByEndpointUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspaces by endpoint using g e t forbidden response has a 3xx status code
func (o *GetWorkspacesByEndpointUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspaces by endpoint using g e t forbidden response has a 4xx status code
func (o *GetWorkspacesByEndpointUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspaces by endpoint using g e t forbidden response has a 5xx status code
func (o *GetWorkspacesByEndpointUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspaces by endpoint using g e t forbidden response a status code equal to that given
func (o *GetWorkspacesByEndpointUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetWorkspacesByEndpointUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cmx/api/resources/tmc/endpoints/{id}/workspaces][%d] getWorkspacesByEndpointUsingGETForbidden ", 403)
}

func (o *GetWorkspacesByEndpointUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cmx/api/resources/tmc/endpoints/{id}/workspaces][%d] getWorkspacesByEndpointUsingGETForbidden ", 403)
}

func (o *GetWorkspacesByEndpointUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
