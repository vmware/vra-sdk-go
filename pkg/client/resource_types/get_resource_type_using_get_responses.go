// Code generated by go-swagger; DO NOT EDIT.

package resource_types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetResourceTypeUsingGETReader is a Reader for the GetResourceTypeUsingGET structure.
type GetResourceTypeUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceTypeUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceTypeUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceTypeUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceTypeUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceTypeUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetResourceTypeUsingGETOK creates a GetResourceTypeUsingGETOK with default headers values
func NewGetResourceTypeUsingGETOK() *GetResourceTypeUsingGETOK {
	return &GetResourceTypeUsingGETOK{}
}

/*
GetResourceTypeUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceTypeUsingGETOK struct {
	Payload *models.ResourceType
}

// IsSuccess returns true when this get resource type using g e t o k response has a 2xx status code
func (o *GetResourceTypeUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource type using g e t o k response has a 3xx status code
func (o *GetResourceTypeUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource type using g e t o k response has a 4xx status code
func (o *GetResourceTypeUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource type using g e t o k response has a 5xx status code
func (o *GetResourceTypeUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource type using g e t o k response a status code equal to that given
func (o *GetResourceTypeUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetResourceTypeUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/resource-types/{resourceTypeId}][%d] getResourceTypeUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetResourceTypeUsingGETOK) String() string {
	return fmt.Sprintf("[GET /blueprint/api/resource-types/{resourceTypeId}][%d] getResourceTypeUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetResourceTypeUsingGETOK) GetPayload() *models.ResourceType {
	return o.Payload
}

func (o *GetResourceTypeUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceType)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceTypeUsingGETUnauthorized creates a GetResourceTypeUsingGETUnauthorized with default headers values
func NewGetResourceTypeUsingGETUnauthorized() *GetResourceTypeUsingGETUnauthorized {
	return &GetResourceTypeUsingGETUnauthorized{}
}

/*
GetResourceTypeUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceTypeUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource type using g e t unauthorized response has a 2xx status code
func (o *GetResourceTypeUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource type using g e t unauthorized response has a 3xx status code
func (o *GetResourceTypeUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource type using g e t unauthorized response has a 4xx status code
func (o *GetResourceTypeUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource type using g e t unauthorized response has a 5xx status code
func (o *GetResourceTypeUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource type using g e t unauthorized response a status code equal to that given
func (o *GetResourceTypeUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetResourceTypeUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/resource-types/{resourceTypeId}][%d] getResourceTypeUsingGETUnauthorized ", 401)
}

func (o *GetResourceTypeUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /blueprint/api/resource-types/{resourceTypeId}][%d] getResourceTypeUsingGETUnauthorized ", 401)
}

func (o *GetResourceTypeUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceTypeUsingGETForbidden creates a GetResourceTypeUsingGETForbidden with default headers values
func NewGetResourceTypeUsingGETForbidden() *GetResourceTypeUsingGETForbidden {
	return &GetResourceTypeUsingGETForbidden{}
}

/*
GetResourceTypeUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceTypeUsingGETForbidden struct {
}

// IsSuccess returns true when this get resource type using g e t forbidden response has a 2xx status code
func (o *GetResourceTypeUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource type using g e t forbidden response has a 3xx status code
func (o *GetResourceTypeUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource type using g e t forbidden response has a 4xx status code
func (o *GetResourceTypeUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource type using g e t forbidden response has a 5xx status code
func (o *GetResourceTypeUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource type using g e t forbidden response a status code equal to that given
func (o *GetResourceTypeUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetResourceTypeUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/resource-types/{resourceTypeId}][%d] getResourceTypeUsingGETForbidden ", 403)
}

func (o *GetResourceTypeUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /blueprint/api/resource-types/{resourceTypeId}][%d] getResourceTypeUsingGETForbidden ", 403)
}

func (o *GetResourceTypeUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceTypeUsingGETNotFound creates a GetResourceTypeUsingGETNotFound with default headers values
func NewGetResourceTypeUsingGETNotFound() *GetResourceTypeUsingGETNotFound {
	return &GetResourceTypeUsingGETNotFound{}
}

/*
GetResourceTypeUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceTypeUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get resource type using g e t not found response has a 2xx status code
func (o *GetResourceTypeUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource type using g e t not found response has a 3xx status code
func (o *GetResourceTypeUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource type using g e t not found response has a 4xx status code
func (o *GetResourceTypeUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource type using g e t not found response has a 5xx status code
func (o *GetResourceTypeUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource type using g e t not found response a status code equal to that given
func (o *GetResourceTypeUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetResourceTypeUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /blueprint/api/resource-types/{resourceTypeId}][%d] getResourceTypeUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetResourceTypeUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /blueprint/api/resource-types/{resourceTypeId}][%d] getResourceTypeUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetResourceTypeUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceTypeUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
