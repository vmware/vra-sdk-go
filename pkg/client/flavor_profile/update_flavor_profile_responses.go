// Code generated by go-swagger; DO NOT EDIT.

package flavor_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateFlavorProfileReader is a Reader for the UpdateFlavorProfile structure.
type UpdateFlavorProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFlavorProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateFlavorProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateFlavorProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateFlavorProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateFlavorProfileOK creates a UpdateFlavorProfileOK with default headers values
func NewUpdateFlavorProfileOK() *UpdateFlavorProfileOK {
	return &UpdateFlavorProfileOK{}
}

/*UpdateFlavorProfileOK handles this case with default header values.

successful operation
*/
type UpdateFlavorProfileOK struct {
	Payload *models.FlavorProfile
}

func (o *UpdateFlavorProfileOK) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/flavor-profiles/{id}][%d] updateFlavorProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateFlavorProfileOK) GetPayload() *models.FlavorProfile {
	return o.Payload
}

func (o *UpdateFlavorProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FlavorProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFlavorProfileForbidden creates a UpdateFlavorProfileForbidden with default headers values
func NewUpdateFlavorProfileForbidden() *UpdateFlavorProfileForbidden {
	return &UpdateFlavorProfileForbidden{}
}

/*UpdateFlavorProfileForbidden handles this case with default header values.

Forbidden
*/
type UpdateFlavorProfileForbidden struct {
}

func (o *UpdateFlavorProfileForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/flavor-profiles/{id}][%d] updateFlavorProfileForbidden ", 403)
}

func (o *UpdateFlavorProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFlavorProfileNotFound creates a UpdateFlavorProfileNotFound with default headers values
func NewUpdateFlavorProfileNotFound() *UpdateFlavorProfileNotFound {
	return &UpdateFlavorProfileNotFound{}
}

/*UpdateFlavorProfileNotFound handles this case with default header values.

Not Found
*/
type UpdateFlavorProfileNotFound struct {
	Payload *models.Error
}

func (o *UpdateFlavorProfileNotFound) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/flavor-profiles/{id}][%d] updateFlavorProfileNotFound  %+v", 404, o.Payload)
}

func (o *UpdateFlavorProfileNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateFlavorProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
