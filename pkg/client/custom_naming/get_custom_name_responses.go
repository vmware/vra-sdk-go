// Code generated by go-swagger; DO NOT EDIT.

package custom_naming

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetCustomNameReader is a Reader for the GetCustomName structure.
type GetCustomNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCustomNameOK creates a GetCustomNameOK with default headers values
func NewGetCustomNameOK() *GetCustomNameOK {
	return &GetCustomNameOK{}
}

/* GetCustomNameOK describes a response with status code 200, with default header values.

successful operation
*/
type GetCustomNameOK struct {
	Payload *models.CustomNaming
}

func (o *GetCustomNameOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/naming/{id}][%d] getCustomNameOK  %+v", 200, o.Payload)
}
func (o *GetCustomNameOK) GetPayload() *models.CustomNaming {
	return o.Payload
}

func (o *GetCustomNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomNaming)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomNameBadRequest creates a GetCustomNameBadRequest with default headers values
func NewGetCustomNameBadRequest() *GetCustomNameBadRequest {
	return &GetCustomNameBadRequest{}
}

/* GetCustomNameBadRequest describes a response with status code 400, with default header values.

Invalid Request - bad data
*/
type GetCustomNameBadRequest struct {
	Payload *models.Error
}

func (o *GetCustomNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /iaas/api/naming/{id}][%d] getCustomNameBadRequest  %+v", 400, o.Payload)
}
func (o *GetCustomNameBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomNameForbidden creates a GetCustomNameForbidden with default headers values
func NewGetCustomNameForbidden() *GetCustomNameForbidden {
	return &GetCustomNameForbidden{}
}

/* GetCustomNameForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCustomNameForbidden struct {
	Payload *models.ServiceErrorResponse
}

func (o *GetCustomNameForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/naming/{id}][%d] getCustomNameForbidden  %+v", 403, o.Payload)
}
func (o *GetCustomNameForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetCustomNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomNameNotFound creates a GetCustomNameNotFound with default headers values
func NewGetCustomNameNotFound() *GetCustomNameNotFound {
	return &GetCustomNameNotFound{}
}

/* GetCustomNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCustomNameNotFound struct {
	Payload *models.Error
}

func (o *GetCustomNameNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/naming/{id}][%d] getCustomNameNotFound  %+v", 404, o.Payload)
}
func (o *GetCustomNameNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
