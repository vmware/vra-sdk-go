// Code generated by go-swagger; DO NOT EDIT.

package custom_naming

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetCustomNameByProjectIDReader is a Reader for the GetCustomNameByProjectID structure.
type GetCustomNameByProjectIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomNameByProjectIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomNameByProjectIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomNameByProjectIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomNameByProjectIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomNameByProjectIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCustomNameByProjectIDOK creates a GetCustomNameByProjectIDOK with default headers values
func NewGetCustomNameByProjectIDOK() *GetCustomNameByProjectIDOK {
	return &GetCustomNameByProjectIDOK{}
}

/* GetCustomNameByProjectIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetCustomNameByProjectIDOK struct {
	Payload *models.CustomNaming
}

func (o *GetCustomNameByProjectIDOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/naming/projectId/{id}][%d] getCustomNameByProjectIdOK  %+v", 200, o.Payload)
}
func (o *GetCustomNameByProjectIDOK) GetPayload() *models.CustomNaming {
	return o.Payload
}

func (o *GetCustomNameByProjectIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomNaming)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomNameByProjectIDBadRequest creates a GetCustomNameByProjectIDBadRequest with default headers values
func NewGetCustomNameByProjectIDBadRequest() *GetCustomNameByProjectIDBadRequest {
	return &GetCustomNameByProjectIDBadRequest{}
}

/* GetCustomNameByProjectIDBadRequest describes a response with status code 400, with default header values.

Invalid Request - bad data
*/
type GetCustomNameByProjectIDBadRequest struct {
	Payload *models.Error
}

func (o *GetCustomNameByProjectIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /iaas/api/naming/projectId/{id}][%d] getCustomNameByProjectIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetCustomNameByProjectIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomNameByProjectIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomNameByProjectIDForbidden creates a GetCustomNameByProjectIDForbidden with default headers values
func NewGetCustomNameByProjectIDForbidden() *GetCustomNameByProjectIDForbidden {
	return &GetCustomNameByProjectIDForbidden{}
}

/* GetCustomNameByProjectIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCustomNameByProjectIDForbidden struct {
	Payload *models.ServiceErrorResponse
}

func (o *GetCustomNameByProjectIDForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/naming/projectId/{id}][%d] getCustomNameByProjectIdForbidden  %+v", 403, o.Payload)
}
func (o *GetCustomNameByProjectIDForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetCustomNameByProjectIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomNameByProjectIDNotFound creates a GetCustomNameByProjectIDNotFound with default headers values
func NewGetCustomNameByProjectIDNotFound() *GetCustomNameByProjectIDNotFound {
	return &GetCustomNameByProjectIDNotFound{}
}

/* GetCustomNameByProjectIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCustomNameByProjectIDNotFound struct {
	Payload *models.Error
}

func (o *GetCustomNameByProjectIDNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/naming/projectId/{id}][%d] getCustomNameByProjectIdNotFound  %+v", 404, o.Payload)
}
func (o *GetCustomNameByProjectIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomNameByProjectIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
