// Code generated by go-swagger; DO NOT EDIT.

package marketplace_downloads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// DownloadRequestUsingPOSTReader is a Reader for the DownloadRequestUsingPOST structure.
type DownloadRequestUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadRequestUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDownloadRequestUsingPOSTAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDownloadRequestUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadRequestUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDownloadRequestUsingPOSTAccepted creates a DownloadRequestUsingPOSTAccepted with default headers values
func NewDownloadRequestUsingPOSTAccepted() *DownloadRequestUsingPOSTAccepted {
	return &DownloadRequestUsingPOSTAccepted{}
}

/*DownloadRequestUsingPOSTAccepted handles this case with default header values.

Submitted download request
*/
type DownloadRequestUsingPOSTAccepted struct {
	Payload *models.MarketplaceContentDownloadRequest
}

func (o *DownloadRequestUsingPOSTAccepted) Error() string {
	return fmt.Sprintf("[POST /content/api/marketplace/download-requests][%d] downloadRequestUsingPOSTAccepted  %+v", 202, o.Payload)
}

func (o *DownloadRequestUsingPOSTAccepted) GetPayload() *models.MarketplaceContentDownloadRequest {
	return o.Payload
}

func (o *DownloadRequestUsingPOSTAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MarketplaceContentDownloadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadRequestUsingPOSTBadRequest creates a DownloadRequestUsingPOSTBadRequest with default headers values
func NewDownloadRequestUsingPOSTBadRequest() *DownloadRequestUsingPOSTBadRequest {
	return &DownloadRequestUsingPOSTBadRequest{}
}

/*DownloadRequestUsingPOSTBadRequest handles this case with default header values.

Invalid source type
*/
type DownloadRequestUsingPOSTBadRequest struct {
	Payload *models.Error
}

func (o *DownloadRequestUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /content/api/marketplace/download-requests][%d] downloadRequestUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *DownloadRequestUsingPOSTBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadRequestUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadRequestUsingPOSTNotFound creates a DownloadRequestUsingPOSTNotFound with default headers values
func NewDownloadRequestUsingPOSTNotFound() *DownloadRequestUsingPOSTNotFound {
	return &DownloadRequestUsingPOSTNotFound{}
}

/*DownloadRequestUsingPOSTNotFound handles this case with default header values.

source not found
*/
type DownloadRequestUsingPOSTNotFound struct {
	Payload *models.Error
}

func (o *DownloadRequestUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /content/api/marketplace/download-requests][%d] downloadRequestUsingPOSTNotFound  %+v", 404, o.Payload)
}

func (o *DownloadRequestUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadRequestUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
