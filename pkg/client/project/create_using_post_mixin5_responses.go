// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// CreateUsingPOSTMixin5Reader is a Reader for the CreateUsingPOSTMixin5 structure.
type CreateUsingPOSTMixin5Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUsingPOSTMixin5Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateUsingPOSTMixin5Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateUsingPOSTMixin5BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateUsingPOSTMixin5Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateUsingPOSTMixin5Conflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateUsingPOSTMixin5Created creates a CreateUsingPOSTMixin5Created with default headers values
func NewCreateUsingPOSTMixin5Created() *CreateUsingPOSTMixin5Created {
	return &CreateUsingPOSTMixin5Created{}
}

/*
CreateUsingPOSTMixin5Created describes a response with status code 201, with default header values.

'Created' with the newly created project
*/
type CreateUsingPOSTMixin5Created struct {
	Payload models.Project
}

// IsSuccess returns true when this create using p o s t mixin5 created response has a 2xx status code
func (o *CreateUsingPOSTMixin5Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create using p o s t mixin5 created response has a 3xx status code
func (o *CreateUsingPOSTMixin5Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t mixin5 created response has a 4xx status code
func (o *CreateUsingPOSTMixin5Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create using p o s t mixin5 created response has a 5xx status code
func (o *CreateUsingPOSTMixin5Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t mixin5 created response a status code equal to that given
func (o *CreateUsingPOSTMixin5Created) IsCode(code int) bool {
	return code == 201
}

func (o *CreateUsingPOSTMixin5Created) Error() string {
	return fmt.Sprintf("[POST /project-service/api/projects][%d] createUsingPOSTMixin5Created  %+v", 201, o.Payload)
}

func (o *CreateUsingPOSTMixin5Created) String() string {
	return fmt.Sprintf("[POST /project-service/api/projects][%d] createUsingPOSTMixin5Created  %+v", 201, o.Payload)
}

func (o *CreateUsingPOSTMixin5Created) GetPayload() models.Project {
	return o.Payload
}

func (o *CreateUsingPOSTMixin5Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalProject(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewCreateUsingPOSTMixin5BadRequest creates a CreateUsingPOSTMixin5BadRequest with default headers values
func NewCreateUsingPOSTMixin5BadRequest() *CreateUsingPOSTMixin5BadRequest {
	return &CreateUsingPOSTMixin5BadRequest{}
}

/*
CreateUsingPOSTMixin5BadRequest describes a response with status code 400, with default header values.

Invalid Request - bad data
*/
type CreateUsingPOSTMixin5BadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create using p o s t mixin5 bad request response has a 2xx status code
func (o *CreateUsingPOSTMixin5BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create using p o s t mixin5 bad request response has a 3xx status code
func (o *CreateUsingPOSTMixin5BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t mixin5 bad request response has a 4xx status code
func (o *CreateUsingPOSTMixin5BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create using p o s t mixin5 bad request response has a 5xx status code
func (o *CreateUsingPOSTMixin5BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t mixin5 bad request response a status code equal to that given
func (o *CreateUsingPOSTMixin5BadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateUsingPOSTMixin5BadRequest) Error() string {
	return fmt.Sprintf("[POST /project-service/api/projects][%d] createUsingPOSTMixin5BadRequest  %+v", 400, o.Payload)
}

func (o *CreateUsingPOSTMixin5BadRequest) String() string {
	return fmt.Sprintf("[POST /project-service/api/projects][%d] createUsingPOSTMixin5BadRequest  %+v", 400, o.Payload)
}

func (o *CreateUsingPOSTMixin5BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateUsingPOSTMixin5BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTMixin5Forbidden creates a CreateUsingPOSTMixin5Forbidden with default headers values
func NewCreateUsingPOSTMixin5Forbidden() *CreateUsingPOSTMixin5Forbidden {
	return &CreateUsingPOSTMixin5Forbidden{}
}

/*
CreateUsingPOSTMixin5Forbidden describes a response with status code 403, with default header values.

Forbidden, the user lacks permissions
*/
type CreateUsingPOSTMixin5Forbidden struct {
}

// IsSuccess returns true when this create using p o s t mixin5 forbidden response has a 2xx status code
func (o *CreateUsingPOSTMixin5Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create using p o s t mixin5 forbidden response has a 3xx status code
func (o *CreateUsingPOSTMixin5Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t mixin5 forbidden response has a 4xx status code
func (o *CreateUsingPOSTMixin5Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create using p o s t mixin5 forbidden response has a 5xx status code
func (o *CreateUsingPOSTMixin5Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t mixin5 forbidden response a status code equal to that given
func (o *CreateUsingPOSTMixin5Forbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateUsingPOSTMixin5Forbidden) Error() string {
	return fmt.Sprintf("[POST /project-service/api/projects][%d] createUsingPOSTMixin5Forbidden ", 403)
}

func (o *CreateUsingPOSTMixin5Forbidden) String() string {
	return fmt.Sprintf("[POST /project-service/api/projects][%d] createUsingPOSTMixin5Forbidden ", 403)
}

func (o *CreateUsingPOSTMixin5Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUsingPOSTMixin5Conflict creates a CreateUsingPOSTMixin5Conflict with default headers values
func NewCreateUsingPOSTMixin5Conflict() *CreateUsingPOSTMixin5Conflict {
	return &CreateUsingPOSTMixin5Conflict{}
}

/*
CreateUsingPOSTMixin5Conflict describes a response with status code 409, with default header values.

Conflict, project with this name already exists
*/
type CreateUsingPOSTMixin5Conflict struct {
}

// IsSuccess returns true when this create using p o s t mixin5 conflict response has a 2xx status code
func (o *CreateUsingPOSTMixin5Conflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create using p o s t mixin5 conflict response has a 3xx status code
func (o *CreateUsingPOSTMixin5Conflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t mixin5 conflict response has a 4xx status code
func (o *CreateUsingPOSTMixin5Conflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create using p o s t mixin5 conflict response has a 5xx status code
func (o *CreateUsingPOSTMixin5Conflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t mixin5 conflict response a status code equal to that given
func (o *CreateUsingPOSTMixin5Conflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateUsingPOSTMixin5Conflict) Error() string {
	return fmt.Sprintf("[POST /project-service/api/projects][%d] createUsingPOSTMixin5Conflict ", 409)
}

func (o *CreateUsingPOSTMixin5Conflict) String() string {
	return fmt.Sprintf("[POST /project-service/api/projects][%d] createUsingPOSTMixin5Conflict ", 409)
}

func (o *CreateUsingPOSTMixin5Conflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
