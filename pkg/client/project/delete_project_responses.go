// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeleteProjectReader is a Reader for the DeleteProject structure.
type DeleteProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteProjectNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteProjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteProjectNoContent creates a DeleteProjectNoContent with default headers values
func NewDeleteProjectNoContent() *DeleteProjectNoContent {
	return &DeleteProjectNoContent{}
}

/*
DeleteProjectNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteProjectNoContent struct {
}

// IsSuccess returns true when this delete project no content response has a 2xx status code
func (o *DeleteProjectNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete project no content response has a 3xx status code
func (o *DeleteProjectNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project no content response has a 4xx status code
func (o *DeleteProjectNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete project no content response has a 5xx status code
func (o *DeleteProjectNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project no content response a status code equal to that given
func (o *DeleteProjectNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteProjectNoContent) Error() string {
	return fmt.Sprintf("[DELETE /iaas/api/projects/{id}][%d] deleteProjectNoContent ", 204)
}

func (o *DeleteProjectNoContent) String() string {
	return fmt.Sprintf("[DELETE /iaas/api/projects/{id}][%d] deleteProjectNoContent ", 204)
}

func (o *DeleteProjectNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectForbidden creates a DeleteProjectForbidden with default headers values
func NewDeleteProjectForbidden() *DeleteProjectForbidden {
	return &DeleteProjectForbidden{}
}

/*
DeleteProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteProjectForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this delete project forbidden response has a 2xx status code
func (o *DeleteProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project forbidden response has a 3xx status code
func (o *DeleteProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project forbidden response has a 4xx status code
func (o *DeleteProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project forbidden response has a 5xx status code
func (o *DeleteProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project forbidden response a status code equal to that given
func (o *DeleteProjectForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteProjectForbidden) Error() string {
	return fmt.Sprintf("[DELETE /iaas/api/projects/{id}][%d] deleteProjectForbidden  %+v", 403, o.Payload)
}

func (o *DeleteProjectForbidden) String() string {
	return fmt.Sprintf("[DELETE /iaas/api/projects/{id}][%d] deleteProjectForbidden  %+v", 403, o.Payload)
}

func (o *DeleteProjectForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *DeleteProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectConflict creates a DeleteProjectConflict with default headers values
func NewDeleteProjectConflict() *DeleteProjectConflict {
	return &DeleteProjectConflict{}
}

/*
DeleteProjectConflict describes a response with status code 409, with default header values.

Conflict, when the project is in use
*/
type DeleteProjectConflict struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this delete project conflict response has a 2xx status code
func (o *DeleteProjectConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project conflict response has a 3xx status code
func (o *DeleteProjectConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project conflict response has a 4xx status code
func (o *DeleteProjectConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project conflict response has a 5xx status code
func (o *DeleteProjectConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project conflict response a status code equal to that given
func (o *DeleteProjectConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeleteProjectConflict) Error() string {
	return fmt.Sprintf("[DELETE /iaas/api/projects/{id}][%d] deleteProjectConflict  %+v", 409, o.Payload)
}

func (o *DeleteProjectConflict) String() string {
	return fmt.Sprintf("[DELETE /iaas/api/projects/{id}][%d] deleteProjectConflict  %+v", 409, o.Payload)
}

func (o *DeleteProjectConflict) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *DeleteProjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
