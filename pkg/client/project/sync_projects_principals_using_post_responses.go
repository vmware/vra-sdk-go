// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// SyncProjectsPrincipalsUsingPOSTReader is a Reader for the SyncProjectsPrincipalsUsingPOST structure.
type SyncProjectsPrincipalsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncProjectsPrincipalsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncProjectsPrincipalsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSyncProjectsPrincipalsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSyncProjectsPrincipalsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSyncProjectsPrincipalsUsingPOSTOK creates a SyncProjectsPrincipalsUsingPOSTOK with default headers values
func NewSyncProjectsPrincipalsUsingPOSTOK() *SyncProjectsPrincipalsUsingPOSTOK {
	return &SyncProjectsPrincipalsUsingPOSTOK{}
}

/* SyncProjectsPrincipalsUsingPOSTOK describes a response with status code 200, with default header values.

'Success'
*/
type SyncProjectsPrincipalsUsingPOSTOK struct {
	Payload models.PrincipalRole
}

func (o *SyncProjectsPrincipalsUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /project-service/api/projects/{id}/sync-principals][%d] syncProjectsPrincipalsUsingPOSTOK  %+v", 200, o.Payload)
}
func (o *SyncProjectsPrincipalsUsingPOSTOK) GetPayload() models.PrincipalRole {
	return o.Payload
}

func (o *SyncProjectsPrincipalsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalPrincipalRole(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewSyncProjectsPrincipalsUsingPOSTForbidden creates a SyncProjectsPrincipalsUsingPOSTForbidden with default headers values
func NewSyncProjectsPrincipalsUsingPOSTForbidden() *SyncProjectsPrincipalsUsingPOSTForbidden {
	return &SyncProjectsPrincipalsUsingPOSTForbidden{}
}

/* SyncProjectsPrincipalsUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden, the user lacks permissions
*/
type SyncProjectsPrincipalsUsingPOSTForbidden struct {
}

func (o *SyncProjectsPrincipalsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /project-service/api/projects/{id}/sync-principals][%d] syncProjectsPrincipalsUsingPOSTForbidden ", 403)
}

func (o *SyncProjectsPrincipalsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncProjectsPrincipalsUsingPOSTNotFound creates a SyncProjectsPrincipalsUsingPOSTNotFound with default headers values
func NewSyncProjectsPrincipalsUsingPOSTNotFound() *SyncProjectsPrincipalsUsingPOSTNotFound {
	return &SyncProjectsPrincipalsUsingPOSTNotFound{}
}

/* SyncProjectsPrincipalsUsingPOSTNotFound describes a response with status code 404, with default header values.

'Not found' if no project with the provided id
*/
type SyncProjectsPrincipalsUsingPOSTNotFound struct {
	Payload *models.Error
}

func (o *SyncProjectsPrincipalsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /project-service/api/projects/{id}/sync-principals][%d] syncProjectsPrincipalsUsingPOSTNotFound  %+v", 404, o.Payload)
}
func (o *SyncProjectsPrincipalsUsingPOSTNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SyncProjectsPrincipalsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
