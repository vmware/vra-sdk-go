// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteProjectUsingDELETEReader is a Reader for the DeleteProjectUsingDELETE structure.
type DeleteProjectUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteProjectUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteProjectUsingDELETEConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteProjectUsingDELETEOK creates a DeleteProjectUsingDELETEOK with default headers values
func NewDeleteProjectUsingDELETEOK() *DeleteProjectUsingDELETEOK {
	return &DeleteProjectUsingDELETEOK{}
}

/* DeleteProjectUsingDELETEOK describes a response with status code 200, with default header values.

'Success'
*/
type DeleteProjectUsingDELETEOK struct {
	Payload interface{}
}

func (o *DeleteProjectUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /project-service/api/projects/{id}][%d] deleteProjectUsingDELETEOK  %+v", 200, o.Payload)
}
func (o *DeleteProjectUsingDELETEOK) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteProjectUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectUsingDELETEForbidden creates a DeleteProjectUsingDELETEForbidden with default headers values
func NewDeleteProjectUsingDELETEForbidden() *DeleteProjectUsingDELETEForbidden {
	return &DeleteProjectUsingDELETEForbidden{}
}

/* DeleteProjectUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden, the user lacks permissions
*/
type DeleteProjectUsingDELETEForbidden struct {
}

func (o *DeleteProjectUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /project-service/api/projects/{id}][%d] deleteProjectUsingDELETEForbidden ", 403)
}

func (o *DeleteProjectUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectUsingDELETEConflict creates a DeleteProjectUsingDELETEConflict with default headers values
func NewDeleteProjectUsingDELETEConflict() *DeleteProjectUsingDELETEConflict {
	return &DeleteProjectUsingDELETEConflict{}
}

/* DeleteProjectUsingDELETEConflict describes a response with status code 409, with default header values.

Conflict, when the project is in use
*/
type DeleteProjectUsingDELETEConflict struct {
}

func (o *DeleteProjectUsingDELETEConflict) Error() string {
	return fmt.Sprintf("[DELETE /project-service/api/projects/{id}][%d] deleteProjectUsingDELETEConflict ", 409)
}

func (o *DeleteProjectUsingDELETEConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
