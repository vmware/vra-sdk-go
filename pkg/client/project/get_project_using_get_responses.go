// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetProjectUsingGETReader is a Reader for the GetProjectUsingGET structure.
type GetProjectUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetProjectUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProjectUsingGETOK creates a GetProjectUsingGETOK with default headers values
func NewGetProjectUsingGETOK() *GetProjectUsingGETOK {
	return &GetProjectUsingGETOK{}
}

/*
GetProjectUsingGETOK describes a response with status code 200, with default header values.

'Success' with the Project
*/
type GetProjectUsingGETOK struct {
	Payload models.Project
}

// IsSuccess returns true when this get project using g e t o k response has a 2xx status code
func (o *GetProjectUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get project using g e t o k response has a 3xx status code
func (o *GetProjectUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project using g e t o k response has a 4xx status code
func (o *GetProjectUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get project using g e t o k response has a 5xx status code
func (o *GetProjectUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get project using g e t o k response a status code equal to that given
func (o *GetProjectUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetProjectUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /project-service/api/projects/{id}][%d] getProjectUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetProjectUsingGETOK) String() string {
	return fmt.Sprintf("[GET /project-service/api/projects/{id}][%d] getProjectUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetProjectUsingGETOK) GetPayload() models.Project {
	return o.Payload
}

func (o *GetProjectUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalProject(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetProjectUsingGETForbidden creates a GetProjectUsingGETForbidden with default headers values
func NewGetProjectUsingGETForbidden() *GetProjectUsingGETForbidden {
	return &GetProjectUsingGETForbidden{}
}

/*
GetProjectUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden, the user lacks permissions
*/
type GetProjectUsingGETForbidden struct {
}

// IsSuccess returns true when this get project using g e t forbidden response has a 2xx status code
func (o *GetProjectUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project using g e t forbidden response has a 3xx status code
func (o *GetProjectUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project using g e t forbidden response has a 4xx status code
func (o *GetProjectUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project using g e t forbidden response has a 5xx status code
func (o *GetProjectUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get project using g e t forbidden response a status code equal to that given
func (o *GetProjectUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetProjectUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /project-service/api/projects/{id}][%d] getProjectUsingGETForbidden ", 403)
}

func (o *GetProjectUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /project-service/api/projects/{id}][%d] getProjectUsingGETForbidden ", 403)
}

func (o *GetProjectUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectUsingGETNotFound creates a GetProjectUsingGETNotFound with default headers values
func NewGetProjectUsingGETNotFound() *GetProjectUsingGETNotFound {
	return &GetProjectUsingGETNotFound{}
}

/*
GetProjectUsingGETNotFound describes a response with status code 404, with default header values.

'Not found' if no project with the provided id
*/
type GetProjectUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get project using g e t not found response has a 2xx status code
func (o *GetProjectUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project using g e t not found response has a 3xx status code
func (o *GetProjectUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project using g e t not found response has a 4xx status code
func (o *GetProjectUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project using g e t not found response has a 5xx status code
func (o *GetProjectUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get project using g e t not found response a status code equal to that given
func (o *GetProjectUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetProjectUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /project-service/api/projects/{id}][%d] getProjectUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetProjectUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /project-service/api/projects/{id}][%d] getProjectUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetProjectUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetProjectUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
