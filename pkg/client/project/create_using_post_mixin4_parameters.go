// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// NewCreateUsingPOSTMixin4Params creates a new CreateUsingPOSTMixin4Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateUsingPOSTMixin4Params() *CreateUsingPOSTMixin4Params {
	return &CreateUsingPOSTMixin4Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateUsingPOSTMixin4ParamsWithTimeout creates a new CreateUsingPOSTMixin4Params object
// with the ability to set a timeout on a request.
func NewCreateUsingPOSTMixin4ParamsWithTimeout(timeout time.Duration) *CreateUsingPOSTMixin4Params {
	return &CreateUsingPOSTMixin4Params{
		timeout: timeout,
	}
}

// NewCreateUsingPOSTMixin4ParamsWithContext creates a new CreateUsingPOSTMixin4Params object
// with the ability to set a context for a request.
func NewCreateUsingPOSTMixin4ParamsWithContext(ctx context.Context) *CreateUsingPOSTMixin4Params {
	return &CreateUsingPOSTMixin4Params{
		Context: ctx,
	}
}

// NewCreateUsingPOSTMixin4ParamsWithHTTPClient creates a new CreateUsingPOSTMixin4Params object
// with the ability to set a custom HTTPClient for a request.
func NewCreateUsingPOSTMixin4ParamsWithHTTPClient(client *http.Client) *CreateUsingPOSTMixin4Params {
	return &CreateUsingPOSTMixin4Params{
		HTTPClient: client,
	}
}

/* CreateUsingPOSTMixin4Params contains all the parameters to send to the API endpoint
   for the create using p o s t mixin4 operation.

   Typically these are written to a http.Request.
*/
type CreateUsingPOSTMixin4Params struct {

	/* APIVersion.

	   The version of the API in yyyy-MM-dd format. For versioning information refer to /project-service/api/about.
	*/
	APIVersion *string

	/* Request.

	   The project to create.
	*/
	Request models.ProjectSpecification

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create using p o s t mixin4 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateUsingPOSTMixin4Params) WithDefaults() *CreateUsingPOSTMixin4Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create using p o s t mixin4 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateUsingPOSTMixin4Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) WithTimeout(timeout time.Duration) *CreateUsingPOSTMixin4Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) WithContext(ctx context.Context) *CreateUsingPOSTMixin4Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) WithHTTPClient(client *http.Client) *CreateUsingPOSTMixin4Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) WithAPIVersion(aPIVersion *string) *CreateUsingPOSTMixin4Params {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithRequest adds the request to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) WithRequest(request models.ProjectSpecification) *CreateUsingPOSTMixin4Params {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the create using p o s t mixin4 params
func (o *CreateUsingPOSTMixin4Params) SetRequest(request models.ProjectSpecification) {
	o.Request = request
}

// WriteToRequest writes these params to a swagger request
func (o *CreateUsingPOSTMixin4Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string

		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {

			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}
	}
	if err := r.SetBodyParam(o.Request); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
