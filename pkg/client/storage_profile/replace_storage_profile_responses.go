// Code generated by go-swagger; DO NOT EDIT.

package storage_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ReplaceStorageProfileReader is a Reader for the ReplaceStorageProfile structure.
type ReplaceStorageProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceStorageProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceStorageProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReplaceStorageProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReplaceStorageProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplaceStorageProfileOK creates a ReplaceStorageProfileOK with default headers values
func NewReplaceStorageProfileOK() *ReplaceStorageProfileOK {
	return &ReplaceStorageProfileOK{}
}

/*
ReplaceStorageProfileOK describes a response with status code 200, with default header values.

successful operation
*/
type ReplaceStorageProfileOK struct {
	Payload *models.StorageProfile
}

// IsSuccess returns true when this replace storage profile o k response has a 2xx status code
func (o *ReplaceStorageProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replace storage profile o k response has a 3xx status code
func (o *ReplaceStorageProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace storage profile o k response has a 4xx status code
func (o *ReplaceStorageProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace storage profile o k response has a 5xx status code
func (o *ReplaceStorageProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this replace storage profile o k response a status code equal to that given
func (o *ReplaceStorageProfileOK) IsCode(code int) bool {
	return code == 200
}

func (o *ReplaceStorageProfileOK) Error() string {
	return fmt.Sprintf("[PUT /iaas/api/storage-profiles/{id}][%d] replaceStorageProfileOK  %+v", 200, o.Payload)
}

func (o *ReplaceStorageProfileOK) String() string {
	return fmt.Sprintf("[PUT /iaas/api/storage-profiles/{id}][%d] replaceStorageProfileOK  %+v", 200, o.Payload)
}

func (o *ReplaceStorageProfileOK) GetPayload() *models.StorageProfile {
	return o.Payload
}

func (o *ReplaceStorageProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceStorageProfileBadRequest creates a ReplaceStorageProfileBadRequest with default headers values
func NewReplaceStorageProfileBadRequest() *ReplaceStorageProfileBadRequest {
	return &ReplaceStorageProfileBadRequest{}
}

/*
ReplaceStorageProfileBadRequest describes a response with status code 400, with default header values.

Invalid Request - bad data
*/
type ReplaceStorageProfileBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this replace storage profile bad request response has a 2xx status code
func (o *ReplaceStorageProfileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace storage profile bad request response has a 3xx status code
func (o *ReplaceStorageProfileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace storage profile bad request response has a 4xx status code
func (o *ReplaceStorageProfileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace storage profile bad request response has a 5xx status code
func (o *ReplaceStorageProfileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this replace storage profile bad request response a status code equal to that given
func (o *ReplaceStorageProfileBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ReplaceStorageProfileBadRequest) Error() string {
	return fmt.Sprintf("[PUT /iaas/api/storage-profiles/{id}][%d] replaceStorageProfileBadRequest  %+v", 400, o.Payload)
}

func (o *ReplaceStorageProfileBadRequest) String() string {
	return fmt.Sprintf("[PUT /iaas/api/storage-profiles/{id}][%d] replaceStorageProfileBadRequest  %+v", 400, o.Payload)
}

func (o *ReplaceStorageProfileBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceStorageProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceStorageProfileForbidden creates a ReplaceStorageProfileForbidden with default headers values
func NewReplaceStorageProfileForbidden() *ReplaceStorageProfileForbidden {
	return &ReplaceStorageProfileForbidden{}
}

/*
ReplaceStorageProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ReplaceStorageProfileForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this replace storage profile forbidden response has a 2xx status code
func (o *ReplaceStorageProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace storage profile forbidden response has a 3xx status code
func (o *ReplaceStorageProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace storage profile forbidden response has a 4xx status code
func (o *ReplaceStorageProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace storage profile forbidden response has a 5xx status code
func (o *ReplaceStorageProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this replace storage profile forbidden response a status code equal to that given
func (o *ReplaceStorageProfileForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ReplaceStorageProfileForbidden) Error() string {
	return fmt.Sprintf("[PUT /iaas/api/storage-profiles/{id}][%d] replaceStorageProfileForbidden  %+v", 403, o.Payload)
}

func (o *ReplaceStorageProfileForbidden) String() string {
	return fmt.Sprintf("[PUT /iaas/api/storage-profiles/{id}][%d] replaceStorageProfileForbidden  %+v", 403, o.Payload)
}

func (o *ReplaceStorageProfileForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *ReplaceStorageProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
