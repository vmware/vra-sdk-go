// Code generated by go-swagger; DO NOT EDIT.

package storage_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateAwsStorageProfileReader is a Reader for the UpdateAwsStorageProfile structure.
type UpdateAwsStorageProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAwsStorageProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAwsStorageProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAwsStorageProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAwsStorageProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateAwsStorageProfileOK creates a UpdateAwsStorageProfileOK with default headers values
func NewUpdateAwsStorageProfileOK() *UpdateAwsStorageProfileOK {
	return &UpdateAwsStorageProfileOK{}
}

/*
UpdateAwsStorageProfileOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateAwsStorageProfileOK struct {
	Payload *models.AwsStorageProfile
}

// IsSuccess returns true when this update aws storage profile o k response has a 2xx status code
func (o *UpdateAwsStorageProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update aws storage profile o k response has a 3xx status code
func (o *UpdateAwsStorageProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws storage profile o k response has a 4xx status code
func (o *UpdateAwsStorageProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update aws storage profile o k response has a 5xx status code
func (o *UpdateAwsStorageProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws storage profile o k response a status code equal to that given
func (o *UpdateAwsStorageProfileOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateAwsStorageProfileOK) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/storage-profiles-aws/{id}][%d] updateAwsStorageProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateAwsStorageProfileOK) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/storage-profiles-aws/{id}][%d] updateAwsStorageProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateAwsStorageProfileOK) GetPayload() *models.AwsStorageProfile {
	return o.Payload
}

func (o *UpdateAwsStorageProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AwsStorageProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAwsStorageProfileBadRequest creates a UpdateAwsStorageProfileBadRequest with default headers values
func NewUpdateAwsStorageProfileBadRequest() *UpdateAwsStorageProfileBadRequest {
	return &UpdateAwsStorageProfileBadRequest{}
}

/*
UpdateAwsStorageProfileBadRequest describes a response with status code 400, with default header values.

Invalid Request - bad data
*/
type UpdateAwsStorageProfileBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update aws storage profile bad request response has a 2xx status code
func (o *UpdateAwsStorageProfileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws storage profile bad request response has a 3xx status code
func (o *UpdateAwsStorageProfileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws storage profile bad request response has a 4xx status code
func (o *UpdateAwsStorageProfileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update aws storage profile bad request response has a 5xx status code
func (o *UpdateAwsStorageProfileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws storage profile bad request response a status code equal to that given
func (o *UpdateAwsStorageProfileBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateAwsStorageProfileBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/storage-profiles-aws/{id}][%d] updateAwsStorageProfileBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAwsStorageProfileBadRequest) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/storage-profiles-aws/{id}][%d] updateAwsStorageProfileBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAwsStorageProfileBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAwsStorageProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAwsStorageProfileForbidden creates a UpdateAwsStorageProfileForbidden with default headers values
func NewUpdateAwsStorageProfileForbidden() *UpdateAwsStorageProfileForbidden {
	return &UpdateAwsStorageProfileForbidden{}
}

/*
UpdateAwsStorageProfileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateAwsStorageProfileForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this update aws storage profile forbidden response has a 2xx status code
func (o *UpdateAwsStorageProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws storage profile forbidden response has a 3xx status code
func (o *UpdateAwsStorageProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws storage profile forbidden response has a 4xx status code
func (o *UpdateAwsStorageProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update aws storage profile forbidden response has a 5xx status code
func (o *UpdateAwsStorageProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws storage profile forbidden response a status code equal to that given
func (o *UpdateAwsStorageProfileForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateAwsStorageProfileForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/storage-profiles-aws/{id}][%d] updateAwsStorageProfileForbidden  %+v", 403, o.Payload)
}

func (o *UpdateAwsStorageProfileForbidden) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/storage-profiles-aws/{id}][%d] updateAwsStorageProfileForbidden  %+v", 403, o.Payload)
}

func (o *UpdateAwsStorageProfileForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *UpdateAwsStorageProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
