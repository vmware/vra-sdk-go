// Code generated by go-swagger; DO NOT EDIT.

package storage_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new storage profile API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for storage profile API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CreateAwsStorageProfile creates a w s storage profile

Create AWS storage profile
*/
func (a *Client) CreateAwsStorageProfile(params *CreateAwsStorageProfileParams) (*CreateAwsStorageProfileCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAwsStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createAwsStorageProfile",
		Method:             "POST",
		PathPattern:        "/iaas/api/storage-profiles-aws",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateAwsStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateAwsStorageProfileCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createAwsStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateAzureStorageProfile creates azure storage profile

Create Azure storage profile
*/
func (a *Client) CreateAzureStorageProfile(params *CreateAzureStorageProfileParams) (*CreateAzureStorageProfileCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAzureStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createAzureStorageProfile",
		Method:             "POST",
		PathPattern:        "/iaas/api/storage-profiles-azure",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateAzureStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateAzureStorageProfileCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createAzureStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateStorageProfile creates storage profile

Create storage profile
*/
func (a *Client) CreateStorageProfile(params *CreateStorageProfileParams) (*CreateStorageProfileCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createStorageProfile",
		Method:             "POST",
		PathPattern:        "/iaas/api/storage-profiles",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateStorageProfileCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateVSphereStorageProfile creates v sphere storage profile

Create vSphere storage profile
*/
func (a *Client) CreateVSphereStorageProfile(params *CreateVSphereStorageProfileParams) (*CreateVSphereStorageProfileCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateVSphereStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createVSphereStorageProfile",
		Method:             "POST",
		PathPattern:        "/iaas/api/storage-profiles-vsphere",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateVSphereStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateVSphereStorageProfileCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createVSphereStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteAwsStorageProfile deletes a w s storage profile

Delete AWS storage profile with a given id
*/
func (a *Client) DeleteAwsStorageProfile(params *DeleteAwsStorageProfileParams) (*DeleteAwsStorageProfileNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAwsStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAwsStorageProfile",
		Method:             "DELETE",
		PathPattern:        "/iaas/api/storage-profiles-aws/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteAwsStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAwsStorageProfileNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAwsStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteAzureStorageProfile deletes azure storage profile

Delete Azure storage profile with a given id
*/
func (a *Client) DeleteAzureStorageProfile(params *DeleteAzureStorageProfileParams) (*DeleteAzureStorageProfileNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAzureStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAzureStorageProfile",
		Method:             "DELETE",
		PathPattern:        "/iaas/api/storage-profiles-azure/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteAzureStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAzureStorageProfileNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAzureStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteStorageProfile deletes storage profile

Delete storage profile with a given id
*/
func (a *Client) DeleteStorageProfile(params *DeleteStorageProfileParams) (*DeleteStorageProfileNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteStorageProfile",
		Method:             "DELETE",
		PathPattern:        "/iaas/api/storage-profiles/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteStorageProfileNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteVSphereStorageProfile deletes v sphere storage profile

Delete vSphere storage profile with a given id
*/
func (a *Client) DeleteVSphereStorageProfile(params *DeleteVSphereStorageProfileParams) (*DeleteVSphereStorageProfileNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteVSphereStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteVSphereStorageProfile",
		Method:             "DELETE",
		PathPattern:        "/iaas/api/storage-profiles-vsphere/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteVSphereStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteVSphereStorageProfileNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteVSphereStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAwsStorageProfile gets a w s storage profile

Get AWS storage profile with a given id
*/
func (a *Client) GetAwsStorageProfile(params *GetAwsStorageProfileParams) (*GetAwsStorageProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAwsStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAwsStorageProfile",
		Method:             "GET",
		PathPattern:        "/iaas/api/storage-profiles-aws/{id}",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAwsStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAwsStorageProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAwsStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAwsStorageProfiles gets a w s storage profiles

Get all AWS storage profiles
*/
func (a *Client) GetAwsStorageProfiles(params *GetAwsStorageProfilesParams) (*GetAwsStorageProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAwsStorageProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAwsStorageProfiles",
		Method:             "GET",
		PathPattern:        "/iaas/api/storage-profiles-aws",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAwsStorageProfilesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAwsStorageProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAwsStorageProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAzureStorageProfile gets azure storage profile

Get Azure storage profile with a given id
*/
func (a *Client) GetAzureStorageProfile(params *GetAzureStorageProfileParams) (*GetAzureStorageProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAzureStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAzureStorageProfile",
		Method:             "GET",
		PathPattern:        "/iaas/api/storage-profiles-azure/{id}",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAzureStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAzureStorageProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAzureStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetAzureStorageProfiles gets azure storage profiles

Get all Azure storage profiles
*/
func (a *Client) GetAzureStorageProfiles(params *GetAzureStorageProfilesParams) (*GetAzureStorageProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAzureStorageProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAzureStorageProfiles",
		Method:             "GET",
		PathPattern:        "/iaas/api/storage-profiles-azure",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAzureStorageProfilesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAzureStorageProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAzureStorageProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetStorageProfile gets storage profile

Get storage profile with a given id
*/
func (a *Client) GetStorageProfile(params *GetStorageProfileParams) (*GetStorageProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getStorageProfile",
		Method:             "GET",
		PathPattern:        "/iaas/api/storage-profiles/{id}",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetStorageProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetStorageProfiles gets storage profiles

Get all storage profiles
*/
func (a *Client) GetStorageProfiles(params *GetStorageProfilesParams) (*GetStorageProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStorageProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getStorageProfiles",
		Method:             "GET",
		PathPattern:        "/iaas/api/storage-profiles",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetStorageProfilesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetStorageProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getStorageProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetVSphereStorageProfile gets v sphere storage profile

Get vSphere storage profile with a given id
*/
func (a *Client) GetVSphereStorageProfile(params *GetVSphereStorageProfileParams) (*GetVSphereStorageProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetVSphereStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getVSphereStorageProfile",
		Method:             "GET",
		PathPattern:        "/iaas/api/storage-profiles-vsphere/{id}",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetVSphereStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetVSphereStorageProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getVSphereStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetVSphereStorageProfiles gets v sphere storage profiles

Get all vSphere storage profiles
*/
func (a *Client) GetVSphereStorageProfiles(params *GetVSphereStorageProfilesParams) (*GetVSphereStorageProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetVSphereStorageProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getVSphereStorageProfiles",
		Method:             "GET",
		PathPattern:        "/iaas/api/storage-profiles-vsphere",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetVSphereStorageProfilesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetVSphereStorageProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getVSphereStorageProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ReplaceStorageProfile replaces storage profile

Replace storage profile with a given id
*/
func (a *Client) ReplaceStorageProfile(params *ReplaceStorageProfileParams) (*ReplaceStorageProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReplaceStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "replaceStorageProfile",
		Method:             "PUT",
		PathPattern:        "/iaas/api/storage-profiles/{id}",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReplaceStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReplaceStorageProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for replaceStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateAwsStorageProfile updates a w s storage profile

Update AWS storage profile
*/
func (a *Client) UpdateAwsStorageProfile(params *UpdateAwsStorageProfileParams) (*UpdateAwsStorageProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateAwsStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateAwsStorageProfile",
		Method:             "PATCH",
		PathPattern:        "/iaas/api/storage-profiles-aws/{id}",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateAwsStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateAwsStorageProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateAwsStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateAzureStorageProfile updates azure storage profile

Update Azure storage profile
*/
func (a *Client) UpdateAzureStorageProfile(params *UpdateAzureStorageProfileParams) (*UpdateAzureStorageProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateAzureStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateAzureStorageProfile",
		Method:             "PATCH",
		PathPattern:        "/iaas/api/storage-profiles-azure/{id}",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateAzureStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateAzureStorageProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateAzureStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateVSphereStorageProfile updates v sphere storage profile

Update vSphere storage profile
*/
func (a *Client) UpdateVSphereStorageProfile(params *UpdateVSphereStorageProfileParams) (*UpdateVSphereStorageProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateVSphereStorageProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateVSphereStorageProfile",
		Method:             "PATCH",
		PathPattern:        "/iaas/api/storage-profiles-vsphere/{id}",
		ProducesMediaTypes: []string{"app/json", "application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateVSphereStorageProfileReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateVSphereStorageProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateVSphereStorageProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
