// Code generated by go-swagger; DO NOT EDIT.

package executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// DeleteExecutionByIDUsingDELETEReader is a Reader for the DeleteExecutionByIDUsingDELETE structure.
type DeleteExecutionByIDUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteExecutionByIDUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteExecutionByIDUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteExecutionByIDUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteExecutionByIDUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteExecutionByIDUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteExecutionByIDUsingDELETEInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteExecutionByIDUsingDELETEOK creates a DeleteExecutionByIDUsingDELETEOK with default headers values
func NewDeleteExecutionByIDUsingDELETEOK() *DeleteExecutionByIDUsingDELETEOK {
	return &DeleteExecutionByIDUsingDELETEOK{}
}

/* DeleteExecutionByIDUsingDELETEOK describes a response with status code 200, with default header values.

'Success' with execution delete
*/
type DeleteExecutionByIDUsingDELETEOK struct {
	Payload models.Execution
}

func (o *DeleteExecutionByIDUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/executions/{id}][%d] deleteExecutionByIdUsingDELETEOK  %+v", 200, o.Payload)
}
func (o *DeleteExecutionByIDUsingDELETEOK) GetPayload() models.Execution {
	return o.Payload
}

func (o *DeleteExecutionByIDUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalExecution(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewDeleteExecutionByIDUsingDELETEUnauthorized creates a DeleteExecutionByIDUsingDELETEUnauthorized with default headers values
func NewDeleteExecutionByIDUsingDELETEUnauthorized() *DeleteExecutionByIDUsingDELETEUnauthorized {
	return &DeleteExecutionByIDUsingDELETEUnauthorized{}
}

/* DeleteExecutionByIDUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type DeleteExecutionByIDUsingDELETEUnauthorized struct {
}

func (o *DeleteExecutionByIDUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/executions/{id}][%d] deleteExecutionByIdUsingDELETEUnauthorized ", 401)
}

func (o *DeleteExecutionByIDUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteExecutionByIDUsingDELETEForbidden creates a DeleteExecutionByIDUsingDELETEForbidden with default headers values
func NewDeleteExecutionByIDUsingDELETEForbidden() *DeleteExecutionByIDUsingDELETEForbidden {
	return &DeleteExecutionByIDUsingDELETEForbidden{}
}

/* DeleteExecutionByIDUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteExecutionByIDUsingDELETEForbidden struct {
}

func (o *DeleteExecutionByIDUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/executions/{id}][%d] deleteExecutionByIdUsingDELETEForbidden ", 403)
}

func (o *DeleteExecutionByIDUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteExecutionByIDUsingDELETENotFound creates a DeleteExecutionByIDUsingDELETENotFound with default headers values
func NewDeleteExecutionByIDUsingDELETENotFound() *DeleteExecutionByIDUsingDELETENotFound {
	return &DeleteExecutionByIDUsingDELETENotFound{}
}

/* DeleteExecutionByIDUsingDELETENotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteExecutionByIDUsingDELETENotFound struct {
	Payload *models.Error
}

func (o *DeleteExecutionByIDUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/executions/{id}][%d] deleteExecutionByIdUsingDELETENotFound  %+v", 404, o.Payload)
}
func (o *DeleteExecutionByIDUsingDELETENotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteExecutionByIDUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteExecutionByIDUsingDELETEInternalServerError creates a DeleteExecutionByIDUsingDELETEInternalServerError with default headers values
func NewDeleteExecutionByIDUsingDELETEInternalServerError() *DeleteExecutionByIDUsingDELETEInternalServerError {
	return &DeleteExecutionByIDUsingDELETEInternalServerError{}
}

/* DeleteExecutionByIDUsingDELETEInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteExecutionByIDUsingDELETEInternalServerError struct {
}

func (o *DeleteExecutionByIDUsingDELETEInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /codestream/api/executions/{id}][%d] deleteExecutionByIdUsingDELETEInternalServerError ", 500)
}

func (o *DeleteExecutionByIDUsingDELETEInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
