// Code generated by go-swagger; DO NOT EDIT.

package executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetAllExecutionsUsingGETReader is a Reader for the GetAllExecutionsUsingGET structure.
type GetAllExecutionsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllExecutionsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllExecutionsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllExecutionsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllExecutionsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllExecutionsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllExecutionsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllExecutionsUsingGETOK creates a GetAllExecutionsUsingGETOK with default headers values
func NewGetAllExecutionsUsingGETOK() *GetAllExecutionsUsingGETOK {
	return &GetAllExecutionsUsingGETOK{}
}

/* GetAllExecutionsUsingGETOK describes a response with status code 200, with default header values.

'Success' with the requested Executions
*/
type GetAllExecutionsUsingGETOK struct {
	Payload models.Executions
}

func (o *GetAllExecutionsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions][%d] getAllExecutionsUsingGETOK  %+v", 200, o.Payload)
}
func (o *GetAllExecutionsUsingGETOK) GetPayload() models.Executions {
	return o.Payload
}

func (o *GetAllExecutionsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalExecutions(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetAllExecutionsUsingGETUnauthorized creates a GetAllExecutionsUsingGETUnauthorized with default headers values
func NewGetAllExecutionsUsingGETUnauthorized() *GetAllExecutionsUsingGETUnauthorized {
	return &GetAllExecutionsUsingGETUnauthorized{}
}

/* GetAllExecutionsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetAllExecutionsUsingGETUnauthorized struct {
}

func (o *GetAllExecutionsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions][%d] getAllExecutionsUsingGETUnauthorized ", 401)
}

func (o *GetAllExecutionsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllExecutionsUsingGETForbidden creates a GetAllExecutionsUsingGETForbidden with default headers values
func NewGetAllExecutionsUsingGETForbidden() *GetAllExecutionsUsingGETForbidden {
	return &GetAllExecutionsUsingGETForbidden{}
}

/* GetAllExecutionsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllExecutionsUsingGETForbidden struct {
}

func (o *GetAllExecutionsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions][%d] getAllExecutionsUsingGETForbidden ", 403)
}

func (o *GetAllExecutionsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllExecutionsUsingGETNotFound creates a GetAllExecutionsUsingGETNotFound with default headers values
func NewGetAllExecutionsUsingGETNotFound() *GetAllExecutionsUsingGETNotFound {
	return &GetAllExecutionsUsingGETNotFound{}
}

/* GetAllExecutionsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllExecutionsUsingGETNotFound struct {
	Payload *models.Error
}

func (o *GetAllExecutionsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions][%d] getAllExecutionsUsingGETNotFound  %+v", 404, o.Payload)
}
func (o *GetAllExecutionsUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllExecutionsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllExecutionsUsingGETInternalServerError creates a GetAllExecutionsUsingGETInternalServerError with default headers values
func NewGetAllExecutionsUsingGETInternalServerError() *GetAllExecutionsUsingGETInternalServerError {
	return &GetAllExecutionsUsingGETInternalServerError{}
}

/* GetAllExecutionsUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetAllExecutionsUsingGETInternalServerError struct {
}

func (o *GetAllExecutionsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions][%d] getAllExecutionsUsingGETInternalServerError ", 500)
}

func (o *GetAllExecutionsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
