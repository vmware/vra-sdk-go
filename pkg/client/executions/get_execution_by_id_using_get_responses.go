// Code generated by go-swagger; DO NOT EDIT.

package executions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetExecutionByIDUsingGETReader is a Reader for the GetExecutionByIDUsingGET structure.
type GetExecutionByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExecutionByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExecutionByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetExecutionByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExecutionByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExecutionByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExecutionByIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetExecutionByIDUsingGETOK creates a GetExecutionByIDUsingGETOK with default headers values
func NewGetExecutionByIDUsingGETOK() *GetExecutionByIDUsingGETOK {
	return &GetExecutionByIDUsingGETOK{}
}

/*
GetExecutionByIDUsingGETOK describes a response with status code 200, with default header values.

'Success' with Execution
*/
type GetExecutionByIDUsingGETOK struct {
	Payload models.Execution
}

// IsSuccess returns true when this get execution by Id using g e t o k response has a 2xx status code
func (o *GetExecutionByIDUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get execution by Id using g e t o k response has a 3xx status code
func (o *GetExecutionByIDUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get execution by Id using g e t o k response has a 4xx status code
func (o *GetExecutionByIDUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get execution by Id using g e t o k response has a 5xx status code
func (o *GetExecutionByIDUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get execution by Id using g e t o k response a status code equal to that given
func (o *GetExecutionByIDUsingGETOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetExecutionByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetExecutionByIDUsingGETOK) String() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetExecutionByIDUsingGETOK) GetPayload() models.Execution {
	return o.Payload
}

func (o *GetExecutionByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalExecution(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetExecutionByIDUsingGETUnauthorized creates a GetExecutionByIDUsingGETUnauthorized with default headers values
func NewGetExecutionByIDUsingGETUnauthorized() *GetExecutionByIDUsingGETUnauthorized {
	return &GetExecutionByIDUsingGETUnauthorized{}
}

/*
GetExecutionByIDUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetExecutionByIDUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get execution by Id using g e t unauthorized response has a 2xx status code
func (o *GetExecutionByIDUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get execution by Id using g e t unauthorized response has a 3xx status code
func (o *GetExecutionByIDUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get execution by Id using g e t unauthorized response has a 4xx status code
func (o *GetExecutionByIDUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get execution by Id using g e t unauthorized response has a 5xx status code
func (o *GetExecutionByIDUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get execution by Id using g e t unauthorized response a status code equal to that given
func (o *GetExecutionByIDUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetExecutionByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETUnauthorized ", 401)
}

func (o *GetExecutionByIDUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETUnauthorized ", 401)
}

func (o *GetExecutionByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExecutionByIDUsingGETForbidden creates a GetExecutionByIDUsingGETForbidden with default headers values
func NewGetExecutionByIDUsingGETForbidden() *GetExecutionByIDUsingGETForbidden {
	return &GetExecutionByIDUsingGETForbidden{}
}

/*
GetExecutionByIDUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetExecutionByIDUsingGETForbidden struct {
}

// IsSuccess returns true when this get execution by Id using g e t forbidden response has a 2xx status code
func (o *GetExecutionByIDUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get execution by Id using g e t forbidden response has a 3xx status code
func (o *GetExecutionByIDUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get execution by Id using g e t forbidden response has a 4xx status code
func (o *GetExecutionByIDUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get execution by Id using g e t forbidden response has a 5xx status code
func (o *GetExecutionByIDUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get execution by Id using g e t forbidden response a status code equal to that given
func (o *GetExecutionByIDUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetExecutionByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETForbidden ", 403)
}

func (o *GetExecutionByIDUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETForbidden ", 403)
}

func (o *GetExecutionByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExecutionByIDUsingGETNotFound creates a GetExecutionByIDUsingGETNotFound with default headers values
func NewGetExecutionByIDUsingGETNotFound() *GetExecutionByIDUsingGETNotFound {
	return &GetExecutionByIDUsingGETNotFound{}
}

/*
GetExecutionByIDUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetExecutionByIDUsingGETNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get execution by Id using g e t not found response has a 2xx status code
func (o *GetExecutionByIDUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get execution by Id using g e t not found response has a 3xx status code
func (o *GetExecutionByIDUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get execution by Id using g e t not found response has a 4xx status code
func (o *GetExecutionByIDUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get execution by Id using g e t not found response has a 5xx status code
func (o *GetExecutionByIDUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get execution by Id using g e t not found response a status code equal to that given
func (o *GetExecutionByIDUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetExecutionByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetExecutionByIDUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetExecutionByIDUsingGETNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetExecutionByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutionByIDUsingGETInternalServerError creates a GetExecutionByIDUsingGETInternalServerError with default headers values
func NewGetExecutionByIDUsingGETInternalServerError() *GetExecutionByIDUsingGETInternalServerError {
	return &GetExecutionByIDUsingGETInternalServerError{}
}

/*
GetExecutionByIDUsingGETInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetExecutionByIDUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get execution by Id using g e t internal server error response has a 2xx status code
func (o *GetExecutionByIDUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get execution by Id using g e t internal server error response has a 3xx status code
func (o *GetExecutionByIDUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get execution by Id using g e t internal server error response has a 4xx status code
func (o *GetExecutionByIDUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get execution by Id using g e t internal server error response has a 5xx status code
func (o *GetExecutionByIDUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get execution by Id using g e t internal server error response a status code equal to that given
func (o *GetExecutionByIDUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetExecutionByIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETInternalServerError ", 500)
}

func (o *GetExecutionByIDUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /codestream/api/executions/{id}][%d] getExecutionByIdUsingGETInternalServerError ", 500)
}

func (o *GetExecutionByIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
