// Code generated by go-swagger; DO NOT EDIT.

package marketplace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// FiltersUsingGETReader is a Reader for the FiltersUsingGET structure.
type FiltersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FiltersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFiltersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewFiltersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewFiltersUsingGETOK creates a FiltersUsingGETOK with default headers values
func NewFiltersUsingGETOK() *FiltersUsingGETOK {
	return &FiltersUsingGETOK{}
}

/*FiltersUsingGETOK handles this case with default header values.

Marketplace filters
*/
type FiltersUsingGETOK struct {
	Payload *models.MarketplaceFilterSchema
}

func (o *FiltersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /content/api/marketplace/sources/{sourceId}/filters][%d] filtersUsingGETOK  %+v", 200, o.Payload)
}

func (o *FiltersUsingGETOK) GetPayload() *models.MarketplaceFilterSchema {
	return o.Payload
}

func (o *FiltersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MarketplaceFilterSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFiltersUsingGETNotFound creates a FiltersUsingGETNotFound with default headers values
func NewFiltersUsingGETNotFound() *FiltersUsingGETNotFound {
	return &FiltersUsingGETNotFound{}
}

/*FiltersUsingGETNotFound handles this case with default header values.

Source not found
*/
type FiltersUsingGETNotFound struct {
}

func (o *FiltersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /content/api/marketplace/sources/{sourceId}/filters][%d] filtersUsingGETNotFound ", 404)
}

func (o *FiltersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
