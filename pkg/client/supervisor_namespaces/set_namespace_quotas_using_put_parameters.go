// Code generated by go-swagger; DO NOT EDIT.

package supervisor_namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// NewSetNamespaceQuotasUsingPUTParams creates a new SetNamespaceQuotasUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetNamespaceQuotasUsingPUTParams() *SetNamespaceQuotasUsingPUTParams {
	return &SetNamespaceQuotasUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetNamespaceQuotasUsingPUTParamsWithTimeout creates a new SetNamespaceQuotasUsingPUTParams object
// with the ability to set a timeout on a request.
func NewSetNamespaceQuotasUsingPUTParamsWithTimeout(timeout time.Duration) *SetNamespaceQuotasUsingPUTParams {
	return &SetNamespaceQuotasUsingPUTParams{
		timeout: timeout,
	}
}

// NewSetNamespaceQuotasUsingPUTParamsWithContext creates a new SetNamespaceQuotasUsingPUTParams object
// with the ability to set a context for a request.
func NewSetNamespaceQuotasUsingPUTParamsWithContext(ctx context.Context) *SetNamespaceQuotasUsingPUTParams {
	return &SetNamespaceQuotasUsingPUTParams{
		Context: ctx,
	}
}

// NewSetNamespaceQuotasUsingPUTParamsWithHTTPClient creates a new SetNamespaceQuotasUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetNamespaceQuotasUsingPUTParamsWithHTTPClient(client *http.Client) *SetNamespaceQuotasUsingPUTParams {
	return &SetNamespaceQuotasUsingPUTParams{
		HTTPClient: client,
	}
}

/* SetNamespaceQuotasUsingPUTParams contains all the parameters to send to the API endpoint
   for the set namespace quotas using p u t operation.

   Typically these are written to a http.Request.
*/
type SetNamespaceQuotasUsingPUTParams struct {

	/* Quotas.

	   quotas
	*/
	Quotas []*models.SupervisorNamespaceQuota

	/* SelfLinkID.

	   selfLinkId
	*/
	SelfLinkID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set namespace quotas using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetNamespaceQuotasUsingPUTParams) WithDefaults() *SetNamespaceQuotasUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set namespace quotas using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetNamespaceQuotasUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) WithTimeout(timeout time.Duration) *SetNamespaceQuotasUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) WithContext(ctx context.Context) *SetNamespaceQuotasUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) WithHTTPClient(client *http.Client) *SetNamespaceQuotasUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQuotas adds the quotas to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) WithQuotas(quotas []*models.SupervisorNamespaceQuota) *SetNamespaceQuotasUsingPUTParams {
	o.SetQuotas(quotas)
	return o
}

// SetQuotas adds the quotas to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) SetQuotas(quotas []*models.SupervisorNamespaceQuota) {
	o.Quotas = quotas
}

// WithSelfLinkID adds the selfLinkID to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) WithSelfLinkID(selfLinkID string) *SetNamespaceQuotasUsingPUTParams {
	o.SetSelfLinkID(selfLinkID)
	return o
}

// SetSelfLinkID adds the selfLinkId to the set namespace quotas using p u t params
func (o *SetNamespaceQuotasUsingPUTParams) SetSelfLinkID(selfLinkID string) {
	o.SelfLinkID = selfLinkID
}

// WriteToRequest writes these params to a swagger request
func (o *SetNamespaceQuotasUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Quotas != nil {
		if err := r.SetBodyParam(o.Quotas); err != nil {
			return err
		}
	}

	// path param selfLinkId
	if err := r.SetPathParam("selfLinkId", o.SelfLinkID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
