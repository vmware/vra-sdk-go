// Code generated by go-swagger; DO NOT EDIT.

package supervisor_namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// NewRegisterUsingPUT2Params creates a new RegisterUsingPUT2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRegisterUsingPUT2Params() *RegisterUsingPUT2Params {
	return &RegisterUsingPUT2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewRegisterUsingPUT2ParamsWithTimeout creates a new RegisterUsingPUT2Params object
// with the ability to set a timeout on a request.
func NewRegisterUsingPUT2ParamsWithTimeout(timeout time.Duration) *RegisterUsingPUT2Params {
	return &RegisterUsingPUT2Params{
		timeout: timeout,
	}
}

// NewRegisterUsingPUT2ParamsWithContext creates a new RegisterUsingPUT2Params object
// with the ability to set a context for a request.
func NewRegisterUsingPUT2ParamsWithContext(ctx context.Context) *RegisterUsingPUT2Params {
	return &RegisterUsingPUT2Params{
		Context: ctx,
	}
}

// NewRegisterUsingPUT2ParamsWithHTTPClient creates a new RegisterUsingPUT2Params object
// with the ability to set a custom HTTPClient for a request.
func NewRegisterUsingPUT2ParamsWithHTTPClient(client *http.Client) *RegisterUsingPUT2Params {
	return &RegisterUsingPUT2Params{
		HTTPClient: client,
	}
}

/* RegisterUsingPUT2Params contains all the parameters to send to the API endpoint
   for the register using p u t 2 operation.

   Typically these are written to a http.Request.
*/
type RegisterUsingPUT2Params struct {

	/* NamespaceSelfLinkID.

	   namespaceSelfLinkId
	*/
	NamespaceSelfLinkID string

	/* SvNamespace.

	   svNamespace
	*/
	SvNamespace *models.SupervisorNamespace

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the register using p u t 2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RegisterUsingPUT2Params) WithDefaults() *RegisterUsingPUT2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the register using p u t 2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RegisterUsingPUT2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) WithTimeout(timeout time.Duration) *RegisterUsingPUT2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) WithContext(ctx context.Context) *RegisterUsingPUT2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) WithHTTPClient(client *http.Client) *RegisterUsingPUT2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNamespaceSelfLinkID adds the namespaceSelfLinkID to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) WithNamespaceSelfLinkID(namespaceSelfLinkID string) *RegisterUsingPUT2Params {
	o.SetNamespaceSelfLinkID(namespaceSelfLinkID)
	return o
}

// SetNamespaceSelfLinkID adds the namespaceSelfLinkId to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) SetNamespaceSelfLinkID(namespaceSelfLinkID string) {
	o.NamespaceSelfLinkID = namespaceSelfLinkID
}

// WithSvNamespace adds the svNamespace to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) WithSvNamespace(svNamespace *models.SupervisorNamespace) *RegisterUsingPUT2Params {
	o.SetSvNamespace(svNamespace)
	return o
}

// SetSvNamespace adds the svNamespace to the register using p u t 2 params
func (o *RegisterUsingPUT2Params) SetSvNamespace(svNamespace *models.SupervisorNamespace) {
	o.SvNamespace = svNamespace
}

// WriteToRequest writes these params to a swagger request
func (o *RegisterUsingPUT2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param namespaceSelfLinkId
	if err := r.SetPathParam("namespaceSelfLinkId", o.NamespaceSelfLinkID); err != nil {
		return err
	}
	if o.SvNamespace != nil {
		if err := r.SetBodyParam(o.SvNamespace); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
