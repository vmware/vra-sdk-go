// Code generated by go-swagger; DO NOT EDIT.

package supervisor_namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// SyncUsingPOSTReader is a Reader for the SyncUsingPOST structure.
type SyncUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSyncUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSyncUsingPOSTOK creates a SyncUsingPOSTOK with default headers values
func NewSyncUsingPOSTOK() *SyncUsingPOSTOK {
	return &SyncUsingPOSTOK{}
}

/*
SyncUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type SyncUsingPOSTOK struct {
	Payload *models.SupervisorNamespaceSyncResponseDTO
}

// IsSuccess returns true when this sync using p o s t o k response has a 2xx status code
func (o *SyncUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sync using p o s t o k response has a 3xx status code
func (o *SyncUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync using p o s t o k response has a 4xx status code
func (o *SyncUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync using p o s t o k response has a 5xx status code
func (o *SyncUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sync using p o s t o k response a status code equal to that given
func (o *SyncUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

func (o *SyncUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cmx/api/resources/supervisor-namespaces/{namespaceSelfLinkId}/principals][%d] syncUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *SyncUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cmx/api/resources/supervisor-namespaces/{namespaceSelfLinkId}/principals][%d] syncUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *SyncUsingPOSTOK) GetPayload() *models.SupervisorNamespaceSyncResponseDTO {
	return o.Payload
}

func (o *SyncUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SupervisorNamespaceSyncResponseDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncUsingPOSTForbidden creates a SyncUsingPOSTForbidden with default headers values
func NewSyncUsingPOSTForbidden() *SyncUsingPOSTForbidden {
	return &SyncUsingPOSTForbidden{}
}

/*
SyncUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden, the user lacks permissions
*/
type SyncUsingPOSTForbidden struct {
}

// IsSuccess returns true when this sync using p o s t forbidden response has a 2xx status code
func (o *SyncUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync using p o s t forbidden response has a 3xx status code
func (o *SyncUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync using p o s t forbidden response has a 4xx status code
func (o *SyncUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync using p o s t forbidden response has a 5xx status code
func (o *SyncUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this sync using p o s t forbidden response a status code equal to that given
func (o *SyncUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SyncUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cmx/api/resources/supervisor-namespaces/{namespaceSelfLinkId}/principals][%d] syncUsingPOSTForbidden ", 403)
}

func (o *SyncUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cmx/api/resources/supervisor-namespaces/{namespaceSelfLinkId}/principals][%d] syncUsingPOSTForbidden ", 403)
}

func (o *SyncUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
