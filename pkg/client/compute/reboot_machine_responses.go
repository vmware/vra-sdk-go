// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// RebootMachineReader is a Reader for the RebootMachine structure.
type RebootMachineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RebootMachineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewRebootMachineAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewRebootMachineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRebootMachineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRebootMachineAccepted creates a RebootMachineAccepted with default headers values
func NewRebootMachineAccepted() *RebootMachineAccepted {
	return &RebootMachineAccepted{}
}

/*
RebootMachineAccepted describes a response with status code 202, with default header values.

successful operation
*/
type RebootMachineAccepted struct {
	Payload *models.RequestTracker
}

// IsSuccess returns true when this reboot machine accepted response has a 2xx status code
func (o *RebootMachineAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reboot machine accepted response has a 3xx status code
func (o *RebootMachineAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reboot machine accepted response has a 4xx status code
func (o *RebootMachineAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this reboot machine accepted response has a 5xx status code
func (o *RebootMachineAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this reboot machine accepted response a status code equal to that given
func (o *RebootMachineAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *RebootMachineAccepted) Error() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reboot][%d] rebootMachineAccepted  %+v", 202, o.Payload)
}

func (o *RebootMachineAccepted) String() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reboot][%d] rebootMachineAccepted  %+v", 202, o.Payload)
}

func (o *RebootMachineAccepted) GetPayload() *models.RequestTracker {
	return o.Payload
}

func (o *RebootMachineAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRebootMachineForbidden creates a RebootMachineForbidden with default headers values
func NewRebootMachineForbidden() *RebootMachineForbidden {
	return &RebootMachineForbidden{}
}

/*
RebootMachineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RebootMachineForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this reboot machine forbidden response has a 2xx status code
func (o *RebootMachineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reboot machine forbidden response has a 3xx status code
func (o *RebootMachineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reboot machine forbidden response has a 4xx status code
func (o *RebootMachineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reboot machine forbidden response has a 5xx status code
func (o *RebootMachineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reboot machine forbidden response a status code equal to that given
func (o *RebootMachineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RebootMachineForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reboot][%d] rebootMachineForbidden  %+v", 403, o.Payload)
}

func (o *RebootMachineForbidden) String() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reboot][%d] rebootMachineForbidden  %+v", 403, o.Payload)
}

func (o *RebootMachineForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *RebootMachineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRebootMachineNotFound creates a RebootMachineNotFound with default headers values
func NewRebootMachineNotFound() *RebootMachineNotFound {
	return &RebootMachineNotFound{}
}

/*
RebootMachineNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RebootMachineNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this reboot machine not found response has a 2xx status code
func (o *RebootMachineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reboot machine not found response has a 3xx status code
func (o *RebootMachineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reboot machine not found response has a 4xx status code
func (o *RebootMachineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reboot machine not found response has a 5xx status code
func (o *RebootMachineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reboot machine not found response a status code equal to that given
func (o *RebootMachineNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RebootMachineNotFound) Error() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reboot][%d] rebootMachineNotFound  %+v", 404, o.Payload)
}

func (o *RebootMachineNotFound) String() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reboot][%d] rebootMachineNotFound  %+v", 404, o.Payload)
}

func (o *RebootMachineNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RebootMachineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
