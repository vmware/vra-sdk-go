// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ResetMachineReader is a Reader for the ResetMachine structure.
type ResetMachineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetMachineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewResetMachineAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewResetMachineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResetMachineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewResetMachineAccepted creates a ResetMachineAccepted with default headers values
func NewResetMachineAccepted() *ResetMachineAccepted {
	return &ResetMachineAccepted{}
}

/*
ResetMachineAccepted describes a response with status code 202, with default header values.

successful operation
*/
type ResetMachineAccepted struct {
	Payload *models.RequestTracker
}

// IsSuccess returns true when this reset machine accepted response has a 2xx status code
func (o *ResetMachineAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reset machine accepted response has a 3xx status code
func (o *ResetMachineAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset machine accepted response has a 4xx status code
func (o *ResetMachineAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset machine accepted response has a 5xx status code
func (o *ResetMachineAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this reset machine accepted response a status code equal to that given
func (o *ResetMachineAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *ResetMachineAccepted) Error() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reset][%d] resetMachineAccepted  %+v", 202, o.Payload)
}

func (o *ResetMachineAccepted) String() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reset][%d] resetMachineAccepted  %+v", 202, o.Payload)
}

func (o *ResetMachineAccepted) GetPayload() *models.RequestTracker {
	return o.Payload
}

func (o *ResetMachineAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetMachineForbidden creates a ResetMachineForbidden with default headers values
func NewResetMachineForbidden() *ResetMachineForbidden {
	return &ResetMachineForbidden{}
}

/*
ResetMachineForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ResetMachineForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this reset machine forbidden response has a 2xx status code
func (o *ResetMachineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset machine forbidden response has a 3xx status code
func (o *ResetMachineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset machine forbidden response has a 4xx status code
func (o *ResetMachineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset machine forbidden response has a 5xx status code
func (o *ResetMachineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reset machine forbidden response a status code equal to that given
func (o *ResetMachineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ResetMachineForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reset][%d] resetMachineForbidden  %+v", 403, o.Payload)
}

func (o *ResetMachineForbidden) String() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reset][%d] resetMachineForbidden  %+v", 403, o.Payload)
}

func (o *ResetMachineForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *ResetMachineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetMachineNotFound creates a ResetMachineNotFound with default headers values
func NewResetMachineNotFound() *ResetMachineNotFound {
	return &ResetMachineNotFound{}
}

/*
ResetMachineNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ResetMachineNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this reset machine not found response has a 2xx status code
func (o *ResetMachineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset machine not found response has a 3xx status code
func (o *ResetMachineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset machine not found response has a 4xx status code
func (o *ResetMachineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset machine not found response has a 5xx status code
func (o *ResetMachineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reset machine not found response a status code equal to that given
func (o *ResetMachineNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ResetMachineNotFound) Error() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reset][%d] resetMachineNotFound  %+v", 404, o.Payload)
}

func (o *ResetMachineNotFound) String() string {
	return fmt.Sprintf("[POST /iaas/api/machines/{id}/operations/reset][%d] resetMachineNotFound  %+v", 404, o.Payload)
}

func (o *ResetMachineNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ResetMachineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
