// Code generated by go-swagger; DO NOT EDIT.

package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// RetrieveAuthTokenReader is a Reader for the RetrieveAuthToken structure.
type RetrieveAuthTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RetrieveAuthTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRetrieveAuthTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRetrieveAuthTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRetrieveAuthTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRetrieveAuthTokenOK creates a RetrieveAuthTokenOK with default headers values
func NewRetrieveAuthTokenOK() *RetrieveAuthTokenOK {
	return &RetrieveAuthTokenOK{}
}

/*RetrieveAuthTokenOK handles this case with default header values.

successful operation
*/
type RetrieveAuthTokenOK struct {
	Payload *models.AuthResponse
}

func (o *RetrieveAuthTokenOK) Error() string {
	return fmt.Sprintf("[POST /iaas/api/login][%d] retrieveAuthTokenOK  %+v", 200, o.Payload)
}

func (o *RetrieveAuthTokenOK) GetPayload() *models.AuthResponse {
	return o.Payload
}

func (o *RetrieveAuthTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRetrieveAuthTokenBadRequest creates a RetrieveAuthTokenBadRequest with default headers values
func NewRetrieveAuthTokenBadRequest() *RetrieveAuthTokenBadRequest {
	return &RetrieveAuthTokenBadRequest{}
}

/*RetrieveAuthTokenBadRequest handles this case with default header values.

Invalid Request - bad data
*/
type RetrieveAuthTokenBadRequest struct {
	Payload *models.Error
}

func (o *RetrieveAuthTokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /iaas/api/login][%d] retrieveAuthTokenBadRequest  %+v", 400, o.Payload)
}

func (o *RetrieveAuthTokenBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RetrieveAuthTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRetrieveAuthTokenForbidden creates a RetrieveAuthTokenForbidden with default headers values
func NewRetrieveAuthTokenForbidden() *RetrieveAuthTokenForbidden {
	return &RetrieveAuthTokenForbidden{}
}

/*RetrieveAuthTokenForbidden handles this case with default header values.

Forbidden
*/
type RetrieveAuthTokenForbidden struct {
}

func (o *RetrieveAuthTokenForbidden) Error() string {
	return fmt.Sprintf("[POST /iaas/api/login][%d] retrieveAuthTokenForbidden ", 403)
}

func (o *RetrieveAuthTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
