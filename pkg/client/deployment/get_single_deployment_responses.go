// Code generated by go-swagger; DO NOT EDIT.

package deployment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetSingleDeploymentReader is a Reader for the GetSingleDeployment structure.
type GetSingleDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSingleDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSingleDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSingleDeploymentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSingleDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSingleDeploymentOK creates a GetSingleDeploymentOK with default headers values
func NewGetSingleDeploymentOK() *GetSingleDeploymentOK {
	return &GetSingleDeploymentOK{}
}

/*
GetSingleDeploymentOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSingleDeploymentOK struct {
	Payload *models.IaaSDeployment
}

// IsSuccess returns true when this get single deployment o k response has a 2xx status code
func (o *GetSingleDeploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get single deployment o k response has a 3xx status code
func (o *GetSingleDeploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get single deployment o k response has a 4xx status code
func (o *GetSingleDeploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get single deployment o k response has a 5xx status code
func (o *GetSingleDeploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get single deployment o k response a status code equal to that given
func (o *GetSingleDeploymentOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSingleDeploymentOK) Error() string {
	return fmt.Sprintf("[GET /iaas/api/deployments/{id}][%d] getSingleDeploymentOK  %+v", 200, o.Payload)
}

func (o *GetSingleDeploymentOK) String() string {
	return fmt.Sprintf("[GET /iaas/api/deployments/{id}][%d] getSingleDeploymentOK  %+v", 200, o.Payload)
}

func (o *GetSingleDeploymentOK) GetPayload() *models.IaaSDeployment {
	return o.Payload
}

func (o *GetSingleDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IaaSDeployment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSingleDeploymentForbidden creates a GetSingleDeploymentForbidden with default headers values
func NewGetSingleDeploymentForbidden() *GetSingleDeploymentForbidden {
	return &GetSingleDeploymentForbidden{}
}

/*
GetSingleDeploymentForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSingleDeploymentForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this get single deployment forbidden response has a 2xx status code
func (o *GetSingleDeploymentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get single deployment forbidden response has a 3xx status code
func (o *GetSingleDeploymentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get single deployment forbidden response has a 4xx status code
func (o *GetSingleDeploymentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get single deployment forbidden response has a 5xx status code
func (o *GetSingleDeploymentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get single deployment forbidden response a status code equal to that given
func (o *GetSingleDeploymentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSingleDeploymentForbidden) Error() string {
	return fmt.Sprintf("[GET /iaas/api/deployments/{id}][%d] getSingleDeploymentForbidden  %+v", 403, o.Payload)
}

func (o *GetSingleDeploymentForbidden) String() string {
	return fmt.Sprintf("[GET /iaas/api/deployments/{id}][%d] getSingleDeploymentForbidden  %+v", 403, o.Payload)
}

func (o *GetSingleDeploymentForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *GetSingleDeploymentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSingleDeploymentNotFound creates a GetSingleDeploymentNotFound with default headers values
func NewGetSingleDeploymentNotFound() *GetSingleDeploymentNotFound {
	return &GetSingleDeploymentNotFound{}
}

/*
GetSingleDeploymentNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSingleDeploymentNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get single deployment not found response has a 2xx status code
func (o *GetSingleDeploymentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get single deployment not found response has a 3xx status code
func (o *GetSingleDeploymentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get single deployment not found response has a 4xx status code
func (o *GetSingleDeploymentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get single deployment not found response has a 5xx status code
func (o *GetSingleDeploymentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get single deployment not found response a status code equal to that given
func (o *GetSingleDeploymentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSingleDeploymentNotFound) Error() string {
	return fmt.Sprintf("[GET /iaas/api/deployments/{id}][%d] getSingleDeploymentNotFound  %+v", 404, o.Payload)
}

func (o *GetSingleDeploymentNotFound) String() string {
	return fmt.Sprintf("[GET /iaas/api/deployments/{id}][%d] getSingleDeploymentNotFound  %+v", 404, o.Payload)
}

func (o *GetSingleDeploymentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSingleDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
