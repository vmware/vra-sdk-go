// Code generated by go-swagger; DO NOT EDIT.

package icons

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UploadReader is a Reader for the Upload structure.
type UploadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUploadCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUploadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUploadCreated creates a UploadCreated with default headers values
func NewUploadCreated() *UploadCreated {
	return &UploadCreated{}
}

/*UploadCreated handles this case with default header values.

Success - create an icon.
*/
type UploadCreated struct {
}

func (o *UploadCreated) Error() string {
	return fmt.Sprintf("[POST /icon/api/icons][%d] uploadCreated ", 201)
}

func (o *UploadCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadBadRequest creates a UploadBadRequest with default headers values
func NewUploadBadRequest() *UploadBadRequest {
	return &UploadBadRequest{}
}

/*UploadBadRequest handles this case with default header values.

Invalid request - bad data.
*/
type UploadBadRequest struct {
}

func (o *UploadBadRequest) Error() string {
	return fmt.Sprintf("[POST /icon/api/icons][%d] uploadBadRequest ", 400)
}

func (o *UploadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadForbidden creates a UploadForbidden with default headers values
func NewUploadForbidden() *UploadForbidden {
	return &UploadForbidden{}
}

/*UploadForbidden handles this case with default header values.

Forbidden.
*/
type UploadForbidden struct {
}

func (o *UploadForbidden) Error() string {
	return fmt.Sprintf("[POST /icon/api/icons][%d] uploadForbidden ", 403)
}

func (o *UploadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
