// Code generated by go-swagger; DO NOT EDIT.

package icons

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// Download2Reader is a Reader for the Download2 structure.
type Download2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Download2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownload2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDownload2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownload2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownload2OK creates a Download2OK with default headers values
func NewDownload2OK() *Download2OK {
	return &Download2OK{}
}

/* Download2OK describes a response with status code 200, with default header values.

Success - return the catalog icon.
*/
type Download2OK struct {
	Payload strfmt.Base64
}

func (o *Download2OK) Error() string {
	return fmt.Sprintf("[GET /icon/api/icons/{id}][%d] download2OK  %+v", 200, o.Payload)
}
func (o *Download2OK) GetPayload() strfmt.Base64 {
	return o.Payload
}

func (o *Download2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownload2BadRequest creates a Download2BadRequest with default headers values
func NewDownload2BadRequest() *Download2BadRequest {
	return &Download2BadRequest{}
}

/* Download2BadRequest describes a response with status code 400, with default header values.

Invalid request - bad data.
*/
type Download2BadRequest struct {
	Payload *models.Error
}

func (o *Download2BadRequest) Error() string {
	return fmt.Sprintf("[GET /icon/api/icons/{id}][%d] download2BadRequest  %+v", 400, o.Payload)
}
func (o *Download2BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *Download2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownload2NotFound creates a Download2NotFound with default headers values
func NewDownload2NotFound() *Download2NotFound {
	return &Download2NotFound{}
}

/* Download2NotFound describes a response with status code 404, with default header values.

Icon not found.
*/
type Download2NotFound struct {
	Payload *models.Error
}

func (o *Download2NotFound) Error() string {
	return fmt.Sprintf("[GET /icon/api/icons/{id}][%d] download2NotFound  %+v", 404, o.Payload)
}
func (o *Download2NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *Download2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
