// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateSecurityGroupReader is a Reader for the UpdateSecurityGroup structure.
type UpdateSecurityGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSecurityGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSecurityGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateSecurityGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSecurityGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSecurityGroupOK creates a UpdateSecurityGroupOK with default headers values
func NewUpdateSecurityGroupOK() *UpdateSecurityGroupOK {
	return &UpdateSecurityGroupOK{}
}

/*
UpdateSecurityGroupOK describes a response with status code 200, with default header values.

successful operation
*/
type UpdateSecurityGroupOK struct {
	Payload *models.SecurityGroup
}

// IsSuccess returns true when this update security group o k response has a 2xx status code
func (o *UpdateSecurityGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update security group o k response has a 3xx status code
func (o *UpdateSecurityGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update security group o k response has a 4xx status code
func (o *UpdateSecurityGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update security group o k response has a 5xx status code
func (o *UpdateSecurityGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update security group o k response a status code equal to that given
func (o *UpdateSecurityGroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateSecurityGroupOK) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/security-groups/{id}][%d] updateSecurityGroupOK  %+v", 200, o.Payload)
}

func (o *UpdateSecurityGroupOK) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/security-groups/{id}][%d] updateSecurityGroupOK  %+v", 200, o.Payload)
}

func (o *UpdateSecurityGroupOK) GetPayload() *models.SecurityGroup {
	return o.Payload
}

func (o *UpdateSecurityGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecurityGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSecurityGroupForbidden creates a UpdateSecurityGroupForbidden with default headers values
func NewUpdateSecurityGroupForbidden() *UpdateSecurityGroupForbidden {
	return &UpdateSecurityGroupForbidden{}
}

/*
UpdateSecurityGroupForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateSecurityGroupForbidden struct {
	Payload *models.ServiceErrorResponse
}

// IsSuccess returns true when this update security group forbidden response has a 2xx status code
func (o *UpdateSecurityGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update security group forbidden response has a 3xx status code
func (o *UpdateSecurityGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update security group forbidden response has a 4xx status code
func (o *UpdateSecurityGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update security group forbidden response has a 5xx status code
func (o *UpdateSecurityGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update security group forbidden response a status code equal to that given
func (o *UpdateSecurityGroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateSecurityGroupForbidden) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/security-groups/{id}][%d] updateSecurityGroupForbidden  %+v", 403, o.Payload)
}

func (o *UpdateSecurityGroupForbidden) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/security-groups/{id}][%d] updateSecurityGroupForbidden  %+v", 403, o.Payload)
}

func (o *UpdateSecurityGroupForbidden) GetPayload() *models.ServiceErrorResponse {
	return o.Payload
}

func (o *UpdateSecurityGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSecurityGroupNotFound creates a UpdateSecurityGroupNotFound with default headers values
func NewUpdateSecurityGroupNotFound() *UpdateSecurityGroupNotFound {
	return &UpdateSecurityGroupNotFound{}
}

/*
UpdateSecurityGroupNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateSecurityGroupNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update security group not found response has a 2xx status code
func (o *UpdateSecurityGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update security group not found response has a 3xx status code
func (o *UpdateSecurityGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update security group not found response has a 4xx status code
func (o *UpdateSecurityGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update security group not found response has a 5xx status code
func (o *UpdateSecurityGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update security group not found response a status code equal to that given
func (o *UpdateSecurityGroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateSecurityGroupNotFound) Error() string {
	return fmt.Sprintf("[PATCH /iaas/api/security-groups/{id}][%d] updateSecurityGroupNotFound  %+v", 404, o.Payload)
}

func (o *UpdateSecurityGroupNotFound) String() string {
	return fmt.Sprintf("[PATCH /iaas/api/security-groups/{id}][%d] updateSecurityGroupNotFound  %+v", 404, o.Payload)
}

func (o *UpdateSecurityGroupNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateSecurityGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
