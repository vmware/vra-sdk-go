{
    "basePath": "/",
    "paths": {
        "/iaas/api/load-balancers/{id}/operations/delete": {
            "post": {
                "summary": "Delete operation for load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day delete operation for load balancer",
                "operationId": "deleteLoadBalancerOperation",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "Controls whether this is a force delete operation. If true, best effort is made for deleting this load balancer. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/naming/{id}": {
            "get": {
                "summary": "Get Custom Name by Id",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Custom Name by Id",
                "operationId": "getCustomName",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CustomNaming"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the custom name.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Custom Naming"
                ]
            },
            "delete": {
                "summary": "Delete custom name",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete custom name with a given id",
                "operationId": "deleteCustomname",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the custom name.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Custom Naming"
                ]
            }
        },
        "/iaas/api/network-domains/{id}": {
            "get": {
                "summary": "Get network domain",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get network domain with a given id",
                "operationId": "getNetworkDomain",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network domain.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/iaas/api/storage-profiles-gcp": {
            "post": {
                "summary": "Create GCP storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create GCP storage profile",
                "operationId": "createGcpStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/GcpStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileGcpSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileGcpSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get GCP storage profiles",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all GCP storage profiles",
                "operationId": "getGcpStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileGcpResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vcf/{id}/private-image-enumeration": {
            "post": {
                "summary": "Enumerate all private images for enabled regions of the specified VCF account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "",
                "operationId": "enumeratePrivateImagesVCF",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of VCF cloud account to enumerate",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/block-devices/{id}/operations/promote": {
            "post": {
                "summary": "Promote operation on disk",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day promote operation on disk. Applicable for vSphere Block Devices only",
                "operationId": "PromoteDisk",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Disk.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vmc": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createVmcCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVmcSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud account VMC specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get VMC cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all VMC cloud accounts within the current organization",
                "operationId": "getVmcCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVmcResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/external-ip-blocks": {
            "get": {
                "summary": "Get all external IP blocks",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "An external IP block is network coming from external IPAM provider that can be used to create subnetworks inside it",
                "operationId": "getExternalIpBlocks",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            }
        },
        "/iaas/api/network-domains": {
            "get": {
                "summary": "Get network domains",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all network domains.",
                "operationId": "getNetworkDomains",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkDomainResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/iaas/api/block-devices/{id}/operations/snapshots": {
            "post": {
                "summary": "Create snapshot operation for Block Device",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day create snapshot operation for Block device",
                "operationId": "createBlockDeviceSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the block device.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/DiskSnapshotSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Disk Snapshot Specification details",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/naming": {
            "post": {
                "summary": "Create Custom Name",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create Custom Name",
                "operationId": "createCustomName",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/CustomNaming"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CustomNamingModel"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Custom naming instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Custom Naming"
                ]
            },
            "put": {
                "summary": "Update custom name",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update custom name",
                "operationId": "update custom name",
                "responses": {
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CustomNamingModel"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Custom Name specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Custom Naming"
                ]
            }
        },
        "/iaas/api/zones": {
            "post": {
                "summary": "Create zone",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create zone",
                "operationId": "createZone",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ZoneSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Zone specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            },
            "get": {
                "summary": "Get zones",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all zones",
                "operationId": "getZones",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ZoneResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vmc/{id}": {
            "patch": {
                "summary": "Update VMC cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update VMC cloud account",
                "operationId": "updateVMCCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountVmcSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "VMC cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an VMC cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an VMC cloud account with a given id",
                "operationId": "getVmcCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVmc"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete an VMC cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an VMC cloud account with a given id",
                "operationId": "deleteVmcCloudAccount",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-vsphere-datastores/{id}": {
            "patch": {
                "summary": "Update Fabric vSphere Datastore.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update Fabric vSphere Datastore. Only tag updates are supported.",
                "operationId": "updateFabricVsphereDatastore",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereDatastore"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric Datastore.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereDatastoreSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Fabric vSphere Datastore Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Datastore"
                ]
            },
            "get": {
                "summary": "Get fabric vSphere datastore",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric vSphere datastore with a given id",
                "operationId": "getFabricVSphereDatastore",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereDatastore"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric vSphere Datastore.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Datastore"
                ]
            }
        },
        "/iaas/api/storage-profiles-vsphere": {
            "post": {
                "summary": "Create vSphere storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create vSphere storage profile",
                "operationId": "createVSphereStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileVsphereSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get vSphere storage profiles",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all vSphere storage profiles",
                "operationId": "getVSphereStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/cloud-accounts-gcp/{id}/private-image-enumeration": {
            "post": {
                "summary": "Enumerate all private images for enabled regions of the specified GCP account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "",
                "operationId": "enumeratePrivateImagesGcp",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of GCP cloud account to enumerate",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/regions/{id}": {
            "get": {
                "summary": "Get Region",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Region with a given id",
                "operationId": "getRegion",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Region"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the region.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/images": {
            "get": {
                "summary": "Get images",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all images defined in ImageProfile.",
                "operationId": "getImages",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ImageResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Images"
                ]
            }
        },
        "/iaas/api/machines/{id}/disks/{diskId}": {
            "get": {
                "summary": "Get machine disk",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Get disk with a given id for specific machine",
                "operationId": "getMachineDisk",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "diskId",
                        "description": "The ID of the disk.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk",
                    "Compute"
                ]
            },
            "delete": {
                "summary": "Delete machine disk",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Remove a disk from a given machine.",
                "operationId": "deleteMachineDisk",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "diskId",
                        "description": "The ID of the disk.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk",
                    "Compute"
                ]
            }
        },
        "/iaas/api/fabric-azure-storage-accounts/{id}": {
            "get": {
                "summary": "Get fabric Azure storage account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric Azure storage account with a given id",
                "operationId": "getFabricAzureStorageAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricAzureStorageAccount"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric Azure Storage Account.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Azure Storage Account"
                ]
            }
        },
        "/iaas/api/security-groups/{id}": {
            "patch": {
                "summary": "Update security group.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update security group. Only tag updates are supported.",
                "operationId": "updateSecurityGroup",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroup"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the security group.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateSecurityGroupSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Update Security Group Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group"
                ]
            },
            "get": {
                "summary": "Get security group",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get security group with a given id",
                "operationId": "getSecurityGroup",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroup"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the security group.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group"
                ]
            },
            "delete": {
                "summary": "Delete an on-demand security group",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an on-demand security group with a given id",
                "operationId": "deleteSecurityGroup",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the security group.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "Controls whether this is a force delete operation. If true, best effort is made for deleting this security group. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group"
                ]
            }
        },
        "/iaas/api/zones/{id}/computes": {
            "get": {
                "summary": "Get computes",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get zone's computes by given zone ID",
                "operationId": "getComputes",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricComputeResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the zone.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/machines": {
            "post": {
                "summary": "Create machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create machine",
                "operationId": "createMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/MachineSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Machine Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            },
            "get": {
                "summary": "Get machines",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all machines",
                "operationId": "getMachines",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/MachineResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/load-balancers": {
            "post": {
                "summary": "Create load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create load balancer",
                "operationId": "createLoadBalancer",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Input(s) not Found"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "LoadBalancer Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            },
            "get": {
                "summary": "Get load balancers",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all load balancers",
                "operationId": "getLoadBalancers",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/compute-gateways/{id}": {
            "get": {
                "summary": "Get a compute gateway",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get compute gateway with a given id",
                "operationId": "getComputeGateway",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ComputeGateway"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the gateway.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Gateway"
                ]
            },
            "delete": {
                "summary": "Delete a compute gateway",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete compute gateway with a given id",
                "operationId": "deleteComputeGateway",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the compute gateway.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "Controls whether this is a force delete operation. If true, best effort is made for deleting this compute gateway. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Gateway"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/power-off": {
            "post": {
                "summary": "Power-off operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day power-off operation for machine",
                "operationId": "powerOffMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/projects": {
            "post": {
                "summary": "Create project",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create project",
                "operationId": "createProject",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Project Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "get": {
                "summary": "Get projects",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all projects",
                "operationId": "getProjects",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ProjectResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Sorting criteria in the format: property (asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. A set of operators and functions are defined for use:\nOperators: eq, ne, gt, ge, lt, le, and, or, not.\nFunctions:\nbool substringof(string p0, string p1)\nbool endswith(string p0, string p1)\nbool startswith(string p0, string p1)\nint length(string p0)\nint indexof(string p0, string p1)\nstring replace(string p0, string find, string replace)\nstring substring(string p0, int pos)\nstring substring(string p0, int pos, int length)\nstring tolower(string p0)\nstring toupper(string p0)\nstring trim(string p0)\nstring concat(string p0, string p1)",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/iaas/api/cloud-accounts": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all cloud accounts within the current organization",
                "operationId": "getCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/machines/{id}": {
            "patch": {
                "summary": "Update machine.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update machine. Only description, tag and custom property updates are supported. All other properties in the MachineSpecification body are ignored.",
                "operationId": "updateMachine",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateMachineSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Machine Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            },
            "get": {
                "summary": "Get machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get machine with a given id",
                "operationId": "getMachine",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            },
            "delete": {
                "summary": "Delete Machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete Machine with a given id",
                "operationId": "deleteMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "Controls whether this is a force delete operation. If true, best effort is made for deleting this machine. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/login": {
            "post": {
                "summary": "Retrieve AuthToken for local csp users",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Retrieve AuthToken for local csp users.\nWhen accessing other endpoints the `Bearer` authentication scheme and the received `token` must be provided in the `Authorization` request header field as follows:\n`Authorization: Bearer {token}`",
                "operationId": "retrieveAuthToken",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AuthResponse"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CspLoginSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CspLoginSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Login"
                ]
            }
        },
        "/iaas/api/storage-profiles-aws": {
            "post": {
                "summary": "Create AWS storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create AWS storage profile",
                "operationId": "createAwsStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAwsSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get AWS storage profiles",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all AWS storage profiles",
                "operationId": "getAwsStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/external-network-ip-ranges/{id}": {
            "patch": {
                "summary": "Update external IPAM network IP range.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Assign the external IPAM network IP range to a different network and/or change the tags of the external IPAM network IP range.",
                "operationId": "updateExternalNetworkIPRange",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExternalNetworkIPRange"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the external IPAM network IP range.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateExternalNetworkIPRangeSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "External IPAM network IP range specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            },
            "get": {
                "summary": "Get external IPAM network IP range",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get external IPAM network IP range with a given id",
                "operationId": "getExternalNetworkIPRange",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExternalNetworkIPRange"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the external IPAM network IP range.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            }
        },
        "/iaas/api/fabric-computes": {
            "get": {
                "summary": "Get fabric computes",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric computes.",
                "operationId": "getFabricComputes",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricComputeResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Compute"
                ]
            }
        },
        "/iaas/api/fabric-azure-disk-encryption-sets": {
            "get": {
                "summary": "Get Azure disk encryption sets",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all Azure disk encryption sets",
                "operationId": "getAzureDiskEncryptionSets",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/DiskEncryptionSetList"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "regionId",
                        "description": "Region id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Azure Disk Encryption Sets"
                ]
            }
        },
        "/iaas/api/machines/{id}/snapshots/{snapshotId}": {
            "get": {
                "summary": "Get machine snapshot",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Get snapshot with a given id for specific machine",
                "operationId": "getMachineSnapshot",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "snapshotId",
                        "description": "The ID of the snapshot.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            },
            "delete": {
                "summary": "Delete snapshot operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day delete snapshot operation for machine",
                "operationId": "deleteMachineSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "snapshotId",
                        "description": "Snapshot id to delete.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/storage-profiles-gcp/{id}": {
            "patch": {
                "summary": "Update GCP storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update GCP storage profile",
                "operationId": "updateGcpStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GcpStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileGcpSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileGcpSpecification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get GCP storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get GCP storage profile with a given id",
                "operationId": "getGcpStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/GcpStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete GCP storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Delete GCP storage profile with a given id",
                "operationId": "deleteGcpStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/block-devices/{id}/snapshots/{id1}": {
            "get": {
                "summary": "Get disk snapshot",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Get snapshot with a given id for specific disk",
                "operationId": "getDiskSnapshot",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/DiskSnapshot"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the disk.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id1",
                        "description": "The ID of the snapshot.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            },
            "delete": {
                "summary": "Delete snapshot operation for Block device",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day delete snapshot operation for Block device",
                "operationId": "deleteBlockDeviceSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the block device.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id1",
                        "description": "Snapshot id to delete.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/tags": {
            "get": {
                "summary": "Get tags",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all tags",
                "operationId": "getTags",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TagResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Tags"
                ]
            }
        },
        "/iaas/api/machines/{id}/network-interfaces/{networkId}": {
            "patch": {
                "summary": "Patch machine network interface",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Patch network interface with a given id for specific machine. Only name, description, IPv4 address and custom property updates are supported. The change to name and IPv4 address will not propagate to cloud endpoint for provisioned machines.",
                "operationId": "patchMachineNetworkInterface",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterface"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "networkId",
                        "description": "The ID of the network interface.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateNetworkInterfaceSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NetworkInterface Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network",
                    "Compute"
                ]
            },
            "get": {
                "summary": "Get machine network interface",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Get network interface with a given id for specific machine",
                "operationId": "getMachineNetworkInterface",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterface"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "networkId",
                        "description": "The ID of the network interface.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network",
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts-azure/{id}": {
            "patch": {
                "summary": "Update Azure cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update Azure cloud account",
                "operationId": "updateAzureCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Azure cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an Azure Cloud Account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an Azure Cloud Account with a given id",
                "operationId": "getAzureCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzure"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete an Azure Cloud Account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an Azure Cloud Account with a given id",
                "operationId": "deleteAzureCloudAccount",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/machines/{id}/disks": {
            "post": {
                "summary": "Attach machine disk",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Attach a disk to a machine.",
                "operationId": "attachMachineDisk",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/DiskAttachmentSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Disk Specification instance",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk",
                    "Compute"
                ]
            },
            "get": {
                "summary": "Get machine disks",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Get all machine disks",
                "operationId": "getMachineDisks",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk",
                    "Compute"
                ]
            }
        },
        "/iaas/api/request-tracker": {
            "get": {
                "summary": "Get request tracker",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all request trackers",
                "operationId": "getRequestTrackers",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RequestTrackerResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Request"
                ]
            }
        },
        "/iaas/api/storage-profiles/{id}": {
            "get": {
                "summary": "Get storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get storage profile with a given id",
                "operationId": "getStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Delete storage profile with a given id",
                "operationId": "deleteStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "put": {
                "summary": "Replace storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Replace storage profile with a given id",
                "operationId": "replaceStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileSpecification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/data-collectors/{id}": {
            "get": {
                "summary": "Get Data Collector",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Data Collector with a given id.\n\nNote: Data collector endpoints are not available in vRA on-prem release.",
                "operationId": "getDataCollector",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/DataCollector"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Data Collector.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Data Collector"
                ]
            },
            "delete": {
                "summary": "Delete Data Collector",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete Data Collector with a given id.\n\nNote: Data collector endpoints are not available in vRA on-prem release.",
                "operationId": "deleteDataCollector",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Data Collector.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Data Collector"
                ]
            }
        },
        "/iaas/api/fabric-aws-volume-types": {
            "get": {
                "summary": "Get fabric AWS volume types",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric AWS volume types.",
                "operationId": "getFabricAwsVolumeTypes",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VolumeTypeList"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric AWS Volume Types"
                ]
            }
        },
        "/iaas/api/configuration-properties": {
            "patch": {
                "summary": "Update or create configuration property.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update or create configuration property.",
                "operationId": "patchConfigurationProperty",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationProperty"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationProperty"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Property Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Property"
                ]
            },
            "get": {
                "summary": "Get configuration properties",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all configuration properties",
                "operationId": "getConfigurationProperties",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationProperty"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Property"
                ]
            }
        },
        "/iaas/api/external-ip-blocks/{id}": {
            "get": {
                "summary": "Get specific external IP block by id",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "An external IP block is network coming from external IPAM provider that can be used to create subnetworks inside it",
                "operationId": "getExternalIpBlock",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetwork"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the external IP block",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            }
        },
        "/iaas/api/networks": {
            "post": {
                "summary": "Create network",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Provision a new network based on the passed in constraints. The network should be destroyed after the machine is destroyed to free up resources.",
                "operationId": "createNetwork",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Network Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            },
            "get": {
                "summary": "Get networks",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all networks",
                "operationId": "getNetworks",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/power-on": {
            "post": {
                "summary": "Power-on operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day power-on operation for machine",
                "operationId": "powerOnMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/naming/projectId/{id}": {
            "get": {
                "summary": "Get Custom Names For Project Id",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Custom Names For Project Id",
                "operationId": "getCustomNameByProjectId",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CustomNaming"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Project id.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Custom Naming"
                ]
            }
        },
        "/iaas/api/fabric-flavors": {
            "get": {
                "summary": "Get fabric flavors",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric flavors",
                "operationId": "getFabricFlavors",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricFlavorResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Flavors"
                ]
            }
        },
        "/iaas/api/cloud-accounts-nsx-t/{id}": {
            "patch": {
                "summary": "Update NSX-T cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update NSX-T cloud account",
                "operationId": "updateNsxTCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountNsxTSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NSX-T cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an NSX-T cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an NSX-T cloud account with a given id",
                "operationId": "getNsxTCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxT"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete a NSX-T cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a NSX-T cloud account with a given id",
                "operationId": "deleteCloudAccountNsx-T",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-networks": {
            "get": {
                "summary": "Get fabric networks",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric networks.",
                "operationId": "getFabricNetworks",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/change-security-groups": {
            "post": {
                "summary": "Change security groups for a vSphere machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": " Change security groups for a vSphere machine network interfaces. Securing group that is part of the same deployment can be added or removed for a machine network interface.",
                "operationId": "changeSecurityGroups",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Change security groups action is not supported for a machine cluster"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the vSphere machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ChangeSecurityGroupSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Change security groups details",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group",
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vcf/{id}": {
            "patch": {
                "summary": "Update VCF cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update VCF cloud account",
                "operationId": "updateVcfCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountVcfSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "VCF cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an VCF cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an VCF cloud account with a given id",
                "operationId": "getVcfCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVcf"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete an VCF cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an VCF cloud account with a given id",
                "operationId": "deleteVcfCloudAccount",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/flavor-profiles/{id}": {
            "patch": {
                "summary": "Update flavor profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update flavor profile",
                "operationId": "updateFlavorProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the flavor.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateFlavorProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "FlavorProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            },
            "get": {
                "summary": "Get flavor profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get flavor profile with a given id",
                "operationId": "getFlavorProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the flavor.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            },
            "delete": {
                "summary": "Delete flavor profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete flavor profile with a given id",
                "operationId": "deleteFlavorProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the flavor.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            }
        },
        "/iaas/api/cloud-accounts/{id}/private-image-enumeration": {
            "post": {
                "summary": "Enumerate all private images for enabled regions of the specified cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "",
                "operationId": "enumeratePrivateImages",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of cloud account to enumerate",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts/{id}": {
            "patch": {
                "summary": "Update CloudAccount",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update a single CloudAccount",
                "operationId": "updateCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the cloudAccount",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get cloud account with a given id",
                "operationId": "getCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a cloud account with a given id",
                "operationId": "deleteCloudAccount",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/security-groups/{id}/operations/reconfigure": {
            "post": {
                "summary": "Reconfigure operation for security group",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Day-2 reconfigure operation for new security groups provisioned by vRA. This is not supported for 'existing' security groups",
                "operationId": "reconfigureSecurityGroup",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Reconfigure is not supported for 'existing' type of security group."
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Security group Specification instance",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the security group.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group"
                ]
            }
        },
        "/iaas/api/deployments": {
            "post": {
                "summary": "Create deployment",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a new Deployment.",
                "operationId": "createDeployment",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Deployment"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/DeploymentSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Deployment specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            },
            "get": {
                "summary": "Get Deployments",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all deployments.",
                "operationId": "getDeployments",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeploymentResult"
                            }
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            }
        },
        "/iaas/api/regions": {
            "get": {
                "summary": "Get regions",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all regions",
                "operationId": "getRegions",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RegionResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/data-collectors": {
            "post": {
                "summary": "Create Data collector",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a new Data Collector.\n\nNote: Data collector endpoints are not available in vRA on-prem release.",
                "operationId": "createDataCollector",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/DataCollectorRegistration"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Data Collector"
                ]
            },
            "get": {
                "summary": "Get Data Collectors",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all Data Collectors.\n\nNote: Data collector endpoints are not available in vRA on-prem release.",
                "operationId": "getDataCollectors",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/DataCollectorResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "disabled",
                        "description": "If query param is provided with value equals to true, only disabled data collectors will be retrieved. ",
                        "type": "boolean",
                        "required": false
                    }
                ],
                "tags": [
                    "Data Collector"
                ]
            }
        },
        "/iaas/api/image-profiles/{id}": {
            "patch": {
                "summary": "Update image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update image profile",
                "operationId": "updateImageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the image.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateImageProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "ImageProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            },
            "get": {
                "summary": "Get image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get image profile with a given id",
                "operationId": "getImageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the image.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            },
            "delete": {
                "summary": "Delete image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete image profile with a given id",
                "operationId": "deleteImageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the image.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vsphere": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createVSphereCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get vSphere cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all vSphere cloud accounts within the current organization",
                "operationId": "getVSphereCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/storage-profiles-vsphere/{id}": {
            "patch": {
                "summary": "Update vSphere storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update vSphere storage profile",
                "operationId": "updateVSphereStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileVsphereSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get vSphere storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get vSphere storage profile with a given id",
                "operationId": "getVSphereStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete vSphere storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Delete vSphere storage profile with a given id",
                "operationId": "deleteVSphereStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/request-tracker/{id}": {
            "get": {
                "summary": "Get request tracker",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get request tracker with a given id",
                "operationId": "getRequestTracker",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the request.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Request"
                ]
            },
            "delete": {
                "summary": "Delete Request",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Delete a single Request",
                "operationId": "deleteRequest",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the request.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Request"
                ]
            }
        },
        "/iaas/api/block-devices/{id}/operations/revert": {
            "post": {
                "summary": "Revert snapshot operation for Block device",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day revert snapshot operation for Block device",
                "operationId": "revertDiskSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Disk.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "Snapshot id to revert.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/load-balancers/{id}": {
            "get": {
                "summary": "Get load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get load balancer with a given id",
                "operationId": "getLoadBalancer",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancer"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            },
            "delete": {
                "summary": "Delete load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete load balancer with a given id",
                "operationId": "deleteLoadBalancer",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "Controls whether this is a force delete operation. If true, best effort is made for deleting this load balancer. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vmc/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified VMC cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified VMC cloud account",
                "operationId": "enumerateVmcRegionsAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVmcRegionEnumerationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "VMC region enumeration specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/integrations": {
            "post": {
                "summary": "Create an integration",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create an integration in the current organization asynchronously",
                "operationId": "createIntegrationAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/IntegrationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Integration instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "Only validate provided Integration Specification. Integration will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Integration"
                ]
            },
            "get": {
                "summary": "Get integrations",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all integrations within the current organization",
                "operationId": "getIntegrations",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/IntegrationResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Integration"
                ]
            }
        },
        "/iaas/api/projects/{id}/resource-metadata": {
            "patch": {
                "summary": "Update project resource metadata",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update project resource metadata by a given project id",
                "operationId": "updateProjectResourceMetadata",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ProjectResourceMetadataSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Project specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "get": {
                "summary": "Get project resource metadata",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get project resource metadata by a given project id",
                "operationId": "getProjectResourceMetadata",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ProjectResourceMetadata"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/iaas/api/storage-profiles": {
            "post": {
                "summary": "Create storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create storage profile",
                "operationId": "createStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get storage profiles",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all storage profiles",
                "operationId": "getStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/zones/{id}": {
            "patch": {
                "summary": "Update zone",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update zone",
                "operationId": "updateZone",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the zone.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ZoneSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Zone specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            },
            "get": {
                "summary": "Get zone",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get zone with given id",
                "operationId": "getZone",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the zone.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            },
            "delete": {
                "summary": "Delete a zone",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a zone",
                "operationId": "deleteZone",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the zone.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/cloud-accounts-gcp": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createGcpCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcpSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud account Gcp specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get GCP cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all GCP cloud accounts within the current organization",
                "operationId": "getGcpCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcpResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-azure/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified Azure cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified Azure cloud account",
                "operationId": "enumerateAzureRegionsAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureRegionEnumerationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Azure region enumeration specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts/region-enumeration/{id}": {
            "get": {
                "summary": "Get region enumeration response",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get region enumeration response for a given id",
                "operationId": "getRegionEnumerationResult",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of enumeration response",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-nsx-v": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createNsxVCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxVSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud Account NsxV Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get NSX-V cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all NSX-V cloud accounts within the current organization",
                "operationId": "getNsxVCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxVResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/block-devices": {
            "post": {
                "summary": "Create BlockDevice",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Following disk custom properties can be passed while creating a block device: \n\r\n\r    1. dataStore: Defines name of the datastore in which the disk has to be provisioned. \n\r    2. storagePolicy: Defines name of the storage policy in which the disk has to be provisioned. If name of the datastore is specified in the custom properties then, datastore takes precedence.\n\r    3. provisioningType: Defines the type of provisioning. For eg. thick/thin. \n\r    4. resourceGroupName: Defines the Azure resource group name where the disk needs to be provisioned.",
                "operationId": "createBlockDevice",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Disk Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            },
            "get": {
                "summary": "Get BlockDevices",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all BlockDevices",
                "operationId": "getBlockDevices",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/cloud-accounts-nsx-t": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createNsxTCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxTSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud account NsxT specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get NSX-T cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all NSX-T cloud accounts within the current organization",
                "operationId": "getNsxTCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxTResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/compute-nats/{id}/operations/reconfigure": {
            "post": {
                "summary": "Reconfigure operation for nat",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Day-2 reconfigure operation for nat",
                "operationId": "reconfigureNat",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "NAT rules cannot be null"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ReconfigureComputeNatSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Reconfigure compute nat specification instance",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Compute Nat",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Nat"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/restart": {
            "post": {
                "summary": "Restart operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day restart operation for machine",
                "operationId": "restartMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts-gcp/{id}": {
            "patch": {
                "summary": "Update GCP cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update GCP cloud account",
                "operationId": "updateGcpCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountGcpSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "GCP cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an GCP cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an GCP cloud account with a given id",
                "operationId": "getGcpCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcp"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete an GCP cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an GCP cloud account with a given id",
                "operationId": "deleteGcpCloudAccount",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-networks/{id}": {
            "patch": {
                "summary": "Update fabric network.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update fabric network. Only tag updates are supported.",
                "operationId": "updateFabricNetwork",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetwork"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric Network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Fabric Network Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            },
            "get": {
                "summary": "Get fabric network",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric network with a given id",
                "operationId": "getFabricNetwork",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetwork"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the fabric network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vsphere/{id}/private-image-enumeration": {
            "post": {
                "summary": "Enumerate all private images for enabled regions of the specified vSphere account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "",
                "operationId": "enumeratePrivateImagesVSphere",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of vSphere cloud account to enumerate",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/load-balancers/{id}/operations/scale": {
            "post": {
                "summary": "Scale operation for load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day scale operation for load balancer",
                "operationId": "scaleLoadBalancer",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "LoadBalancer Specification instance",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/resize": {
            "post": {
                "summary": "Resize operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day resize operation for machine",
                "operationId": "resizeMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The desired flavor to resize the Machine.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "cpuCount",
                        "description": "The desired number of CPUs to resize the Machine",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "memoryInMB",
                        "description": "The desired memory in MBs to resize the Machine",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "coreCount",
                        "description": "The desired number of cores per socket to resize the Machine",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "rebootMachine",
                        "description": "Only applicable for vSphere VMs with the Hot Add option enabled. If set to false, VM is resized without reboot.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/network-ip-ranges/{id}": {
            "patch": {
                "summary": "Update internal network IP range.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update internal network IP range.",
                "operationId": "updateInternalNetworkIPRange",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRange"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network IP range.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRangeSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Network IP range Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            },
            "get": {
                "summary": "Get internal IPAM network IP range",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get internal IPAM network IP range with a given id",
                "operationId": "getInternalNetworkIPRange",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRange"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network IP range.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            },
            "delete": {
                "summary": "Delete internal network IP range",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete internal network IP range with a given id",
                "operationId": "deleteInternalNetworkIPRange",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network IP range.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            }
        },
        "/iaas/api/machines/{id}/snapshots": {
            "get": {
                "summary": "Get machine snapshots information",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Get machine snapshots information",
                "operationId": "getMachineSnapshots",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Snapshot"
                            }
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/block-devices/{id}": {
            "post": {
                "summary": "Resize BlockDevice",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Resize operation on block device.",
                "operationId": "resizeBlockDevice",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the block device.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "capacityInGB",
                        "format": "int32",
                        "description": "Resize Capacity in GB",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            },
            "get": {
                "summary": "Get BlockDevice",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get a single BlockDevice",
                "operationId": "getBlockDevice",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the block device.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            },
            "delete": {
                "summary": "Delete a BlockDevice",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a BlockDevice\n\r1. A block device cannot be deleted when attached to a machine.\n\r2. A block device with persistent property set to 'false' is deleted.\n\r3. A block device with persistent property set to 'true' needs an additional parameter 'purge' to be set to true, for deletion.",
                "operationId": "deleteBlockDevice",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the block device.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "purge",
                        "description": "Indicates if the disk has to be completely destroyed or should be kept in the system. Valid only for block devices with 'persistent' set to true.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "Controls whether this is a force delete operation. If true, best effort is made for deleting this block device. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/reboot": {
            "post": {
                "summary": "Reboot operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day reboot operation for machine",
                "operationId": "rebootMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/revert/{snapshotId}": {
            "post": {
                "summary": "Revert snapshot operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day revert snapshot operation for machine",
                "operationId": "revertMachineSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "snapshotId",
                        "description": "Snapshot id to revert.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified cloud account",
                "operationId": "enumerateRegionsAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegionEnumerationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Region enumeration specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-vsphere-storage-policies/{id}": {
            "get": {
                "summary": "Get fabric vSphere storage policy",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric vSphere storage policy with a given id",
                "operationId": "getFabricVSphereStoragePolicy",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereStoragePolicy"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric vSphere Storage Policy.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Storage Policies"
                ]
            }
        },
        "/iaas/api/compute-nats/{id}": {
            "get": {
                "summary": "Get a Compute Nat",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Compute Nat with a given id",
                "operationId": "getComputeNat",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ComputeNat"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Compute Nat resource.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Nat"
                ]
            },
            "delete": {
                "summary": "Delete a compute nat",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete compute nat with a given id",
                "operationId": "deleteComputeNat",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the compute nat resource.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "Controls whether this is a force delete operation. If true, best effort is made for deleting this nat. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Nat"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/snapshots": {
            "post": {
                "summary": "Create snapshot operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day create snapshot operation for machine",
                "operationId": "createMachineSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/SnapshotSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Snapshot Specification details",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/network-profiles/{id}": {
            "patch": {
                "summary": "Update network profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update network profile",
                "operationId": "updateNetworkProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NetworkProfile specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            },
            "get": {
                "summary": "Get network profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get network profile with a given id",
                "operationId": "getNetworkProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            },
            "delete": {
                "summary": "Delete network profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete network profile with a given id",
                "operationId": "deleteNetworkProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            }
        },
        "/iaas/api/security-groups": {
            "post": {
                "summary": "Create on-demand security group",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Provision a new on-demand security group",
                "operationId": "createOnDemandSecurityGroup",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Security group Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group"
                ]
            },
            "get": {
                "summary": "Get security groups",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all security groups",
                "operationId": "getSecurityGroups",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group"
                ]
            }
        },
        "/iaas/api/deployments/{id}": {
            "get": {
                "summary": "Get a single deployment",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get a single deployment.",
                "operationId": "getSingleDeployment",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Deployment"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the deployment.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            },
            "delete": {
                "summary": "Delete a deployment",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a deployment.",
                "operationId": "deleteDeployment",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the deployment.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "If true, best effort is made for deleting this deployment and all related resources. In some situations, this may leave provisioned infrastructure resources behind. Please ensure you remove them manually. If false, a standard delete action will be executed.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Deployment"
                ]
            }
        },
        "/iaas/api/networks/{id}": {
            "get": {
                "summary": "Get network",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get network with a given id",
                "operationId": "getNetwork",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Network"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            },
            "delete": {
                "summary": "Delete a network",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a network with a given id",
                "operationId": "deleteNetwork",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "forceDelete",
                        "description": "Controls whether this is a force delete operation. If true, best effort is made for deleting this network. Use with caution as force deleting may cause inconsistencies between the cloud provider and vRA.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/iaas/api/cloud-accounts-gcp/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified GCP cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified GCP cloud account",
                "operationId": "enumerateGcpRegionsAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcpRegionEnumerationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "GCP region enumeration specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-aws": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createAwsCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud account Aws specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get AWS cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all AWS cloud accounts within the current organization",
                "operationId": "getAwsCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vsphere/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified vSphere cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified vSphere cloud account",
                "operationId": "enumerateVSphereRegionsAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereRegionEnumerationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "vSphere region enumeration specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vmc/{id}/private-image-enumeration": {
            "post": {
                "summary": "Enumerate all private images for enabled regions of the specified VMC account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "",
                "operationId": "enumeratePrivateImagesVMC",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of VMC cloud account to enumerate",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-networks-vsphere": {
            "get": {
                "summary": "Get vSphere fabric networks",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all vSphere fabric networks.",
                "operationId": "getVsphereFabricNetworks",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkVsphereResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/suspend": {
            "post": {
                "summary": "Suspend operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day suspend operation for machine",
                "operationId": "suspendMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/storage-profiles-azure": {
            "post": {
                "summary": "Create Azure storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create Azure storage profile",
                "operationId": "createAzureStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAzureSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get Azure storage profiles",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all Azure storage profiles",
                "operationId": "getAzureStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/certificates/{id}": {
            "get": {
                "summary": "Get certificate info",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get certificate info",
                "operationId": "getCertificateInfo",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CertificateInfo"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the EndpointCreationTaskState",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Certificates"
                ]
            }
        },
        "/iaas/api/fabric-networks-vsphere/{id}": {
            "patch": {
                "summary": "Update vSphere fabric network.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update vSphere fabric network.",
                "operationId": "updatevSphereFabricNetwork",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkVsphere"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the vSphere Fabric Network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Vsphere Fabric Network Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            },
            "get": {
                "summary": "Get vSphere fabric network",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get vSphere fabric network with a given id",
                "operationId": "getVsphereFabricNetwork",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkVsphere"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the fabric network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/shutdown": {
            "post": {
                "summary": "Shut down operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day shut down operation machine",
                "operationId": "shutdownMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/about": {
            "get": {
                "summary": "Get about page",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "The page contains information about the supported API versions and the latest API version. The version parameter is optional but highly recommended.\nIf you do not specify explicitly an exact version, you will be calling the latest supported API version.\nHere is an example of a call which specifies the exact version you are using: `GET /iaas/api/network-profiles?apiVersion=2021-07-15`\n\nNote that this version is deprecated: 2019-01-15.",
                "operationId": "getAboutPage",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/About"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "tags": [
                    "About"
                ]
            }
        },
        "/iaas/api/flavor-profiles": {
            "post": {
                "summary": "Create flavor profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create flavor profile",
                "operationId": "createFlavorProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "FlavorProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            },
            "get": {
                "summary": "Get flavor profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all flavor profile",
                "operationId": "getFlavorProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfileResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            }
        },
        "/iaas/api/cloud-accounts-azure/{id}/private-image-enumeration": {
            "post": {
                "summary": "Enumerate all private images for enabled regions of the specified Azure account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "",
                "operationId": "enumeratePrivateImagesAzure",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of Azure cloud account to enumerate",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-aws/{id}": {
            "patch": {
                "summary": "Update AWS cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update AWS cloud account",
                "operationId": "updateAWSCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "AWS cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an AWS cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an AWS cloud account with a given id",
                "operationId": "getAwsCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAws"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete an AWS cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an AWS cloud account with a given id",
                "operationId": "deleteAwsCloudAccount",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-vsphere-storage-policies": {
            "get": {
                "summary": "Get fabric vSphere storage polices",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric vSphere storage polices.",
                "operationId": "getFabricVSphereStoragePolicies",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereStoragePolicyResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Storage Policies"
                ]
            }
        },
        "/iaas/api/image-profiles": {
            "post": {
                "summary": "Create image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create image profile",
                "operationId": "createImageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ImageProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "ImageProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            },
            "get": {
                "summary": "Get image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all image profiles",
                "operationId": "getImageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ImageProfileResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            }
        },
        "/iaas/api/fabric-computes/{id}": {
            "patch": {
                "summary": "Update fabric compute.",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update fabric compute. Only tag updates are supported.",
                "operationId": "updateFabricCompute",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricCompute"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric Compute.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/FabricComputeSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Fabric Compute Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Compute"
                ]
            },
            "get": {
                "summary": "Get fabric compute",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric compute with a given id",
                "operationId": "getFabricCompute",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricCompute"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the fabric compute.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vcf": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createVcfCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVcfSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud account VCF specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get VCF cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all VCF cloud accounts within the current organization",
                "operationId": "getVcfCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVcfResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/network-ip-ranges": {
            "post": {
                "summary": "Create internal network IP range",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Creates an internal network IP range.",
                "operationId": "createInternalNetworkIPRange",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRange"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRangeSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Network IP Range Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            },
            "get": {
                "summary": "Get internal IPAM network IP ranges",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all internal IPAM network IP ranges",
                "operationId": "getInternalNetworkIPRanges",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRangeResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vcf/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified VCF cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified VCF cloud account",
                "operationId": "enumerateVcfRegionsAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVcfRegionEnumerationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "VCF region enumeration specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/external-network-ip-ranges": {
            "get": {
                "summary": "Get external IPAM network IP ranges",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all external IPAM network IP ranges",
                "operationId": "getExternalNetworkIPRanges",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExternalNetworkIPRangeResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            }
        },
        "/iaas/api/fabric-images/{id}": {
            "get": {
                "summary": "Get fabric image",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric image with a given id",
                "operationId": "getFabricImage",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricImage"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the image.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Images"
                ]
            }
        },
        "/iaas/api/fabric-azure-storage-accounts": {
            "get": {
                "summary": "Get fabric Azure storage accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric Azure storage accounts.",
                "operationId": "getFabricAzureStorageAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricAzureStorageAccountResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Azure Storage Account"
                ]
            }
        },
        "/iaas/api/configuration-properties/{id}": {
            "get": {
                "summary": "Get single configuration property",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get single configuration property",
                "operationId": "getConfigurationProperty",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationProperty"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Property"
                ]
            },
            "delete": {
                "summary": "Delete a configuration property",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a configuration property",
                "operationId": "deleteConfigurationProperty",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ConfigurationProperty"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Property"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vsphere/{id}": {
            "patch": {
                "summary": "Update vSphere cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update vSphere cloud account",
                "operationId": "updateVSphereCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "vSphere cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an vSphere cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an vSphere cloud account with a given id",
                "operationId": "getVSphereCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphere"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete a vSphere cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a vSphere Cloud Account with a given id",
                "operationId": "deleteVSphereCloudAccount",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/storage-profiles-azure/{id}": {
            "patch": {
                "summary": "Update Azure storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update Azure storage profile",
                "operationId": "updateAzureStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAzureSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get Azure storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Azure storage profile with a given id",
                "operationId": "getAzureStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete Azure storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Delete Azure storage profile with a given id",
                "operationId": "deleteAzureStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/compute-gateways": {
            "post": {
                "summary": "Create a compute gateway",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a new compute gateway. ",
                "operationId": "createComputeGateway",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeGatewaySpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Compute Gateway Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Gateway"
                ]
            },
            "get": {
                "summary": "Get compute gateways",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all compute gateways",
                "operationId": "getComputeGateways",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ComputeGatewayResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Gateway"
                ]
            }
        },
        "/iaas/api/storage-profiles-aws/{id}": {
            "patch": {
                "summary": "Update AWS storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update AWS storage profile",
                "operationId": "updateAwsStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAwsSpecification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get AWS storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get AWS storage profile with a given id",
                "operationId": "getAwsStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete AWS storage profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Delete AWS storage profile with a given id",
                "operationId": "deleteAwsStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/fabric-images": {
            "get": {
                "summary": "Get fabric images",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric images",
                "operationId": "getFabricImages",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricImageResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Images"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/reset": {
            "post": {
                "summary": "Reset operation for machine",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day reset operation for machine",
                "operationId": "resetMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts-aws/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified AWS cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified AWS cloud account",
                "operationId": "enumerateAwsRegionsAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsRegionEnumerationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "AWS region enumeration specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/integrations/{id}": {
            "patch": {
                "summary": "Update an integration",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update a single integration asynchronously",
                "operationId": "updateIntegrationAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the integration",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateIntegrationSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Integration details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Integration"
                ]
            },
            "get": {
                "summary": "Get an integration",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an integration with a given id",
                "operationId": "getIntegration",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Integration"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Integration",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Integration"
                ]
            },
            "delete": {
                "summary": "Delete an integration",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an integration with a given id asynchronously",
                "operationId": "deleteIntegration",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Integration",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Integration"
                ]
            }
        },
        "/iaas/api/cloud-accounts-azure": {
            "post": {
                "summary": "Create a cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createAzureCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud account Azure specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "validateOnly",
                        "description": "If provided, it only validates the credentials in the Cloud Account Specification, and cloud account will not be created.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get Azure cloud accounts",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all Azure cloud accounts within the current organization",
                "operationId": "getAzureCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/compute-nats": {
            "post": {
                "summary": "Create a Compute Nat",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a new Compute Nat. ",
                "operationId": "createComputeNat",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ComputeNatSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Compute Nat Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Nat"
                ]
            },
            "get": {
                "summary": "Get Compute Nats",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all Compute Nats",
                "operationId": "getComputeNats",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ComputeNatResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute Nat"
                ]
            }
        },
        "/iaas/api/cloud-accounts-aws/{id}/private-image-enumeration": {
            "post": {
                "summary": "Enumerate all private images for enabled regions of the specified AWS account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "",
                "operationId": "enumeratePrivateImagesAWS",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of AWS cloud account to enumerate",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/network-profiles": {
            "post": {
                "summary": "Create network profile",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create network profile",
                "operationId": "createNetworkProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NetworkProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            },
            "get": {
                "summary": "Get network profiles",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all network profiles",
                "operationId": "getNetworkProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            }
        },
        "/iaas/api/projects/{id}": {
            "patch": {
                "summary": "Update project",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update project",
                "operationId": "updateProject",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Project specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "get": {
                "summary": "Get project",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get project with a given id",
                "operationId": "getProject",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "delete": {
                "summary": "Delete project",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete project with a given id",
                "operationId": "deleteProject",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "409": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Conflict, when the project is in use"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/iaas/api/flavors": {
            "get": {
                "summary": "Get flavors",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all flavors defined in FlavorProfile",
                "operationId": "getFlavors",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FlavorResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavors"
                ]
            }
        },
        "/iaas/api/fabric-vsphere-datastores": {
            "get": {
                "summary": "Get fabric vSphere datastores",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric vSphere datastores.",
                "operationId": "getFabricVSphereDatastores",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereDatastoreResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of records you want to get.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$skip",
                        "description": "Number of records you want to skip.",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$count",
                        "description": "Flag which when specified shows the total number of records. If the collection has a filter it shows the number of records matching the filter.",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$select",
                        "description": "Select a subset of properties to include in the response.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "$filter",
                        "description": "Filter the results by a specified predicate expression. Operators: eq, ne, and, or.",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Datastore"
                ]
            }
        },
        "/iaas/api/load-balancers/{id}/network-interfaces/{id1}": {
            "get": {
                "summary": "Get load balancer network interface",
                "description": "Get network interface with a given id for specific load balancer",
                "operationId": "getLoadBalancerNetworkInterface",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterface"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id1",
                        "description": "The ID of the network interface.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/block-devices/{id}/snapshots": {
            "get": {
                "summary": "Get disk snapshots information",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "description": "Get disk snapshots information",
                "operationId": "getDiskSnapshots",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DiskSnapshot"
                            }
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the disk.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/cloud-accounts-nsx-v/{id}": {
            "patch": {
                "summary": "Update NSX-V cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update NSX-V cloud account",
                "operationId": "updateNsxVCloudAccountAsync",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountNsxVSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NSX-V cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an NSX-V cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an NSX-V cloud account with a given id",
                "operationId": "getNsxVCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxV"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete a NSV-V cloud account",
                "security": [
                    {
                        "Bearer": [
                            "global"
                        ]
                    }
                ],
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a NSV-V cloud account with a given id",
                "operationId": "deleteCloudAccountNsx-V",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#/definitions/ServiceErrorResponse"
                        },
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        }
    },
    "host": "api.mgmt.cloud.vmware.com",
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "Bearer": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "definitions": {
        "UpdateImageProfileSpecification": {
            "type": "object",
            "required": [
                "imageMapping"
            ],
            "properties": {
                "imageMapping": {
                    "description": "Image mapping defined for the corresponding region.",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricImageDescription"
                    },
                    "type": "object",
                    "example": "{ \"ubuntu\": { \"id\": \"9e49\", \"name\": \"ami-ubuntu-16.04-1.9.1-00-1516139717\"}, \"centos\": { \"id\": \"9e50\", \"name\": \"ami-centos-7-1.13.0-00-1543963388\"}}"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                }
            }
        },
        "DiskSnapshotSpecification": {
            "description": "Specification for Disk Snapshot creation request.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "snapshotProperties": {
                    "description": "Cloud specific snapshot properties supplied in as name value pairs",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"incremental\": \"true\","
                },
                "tags": {
                    "description": "A set of tag keys and optional values that have to be set on the snapshot in the cloud. Currently supported for Azure Snapshots",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "RegionSpecification": {
            "description": "Specification for a region in a cloud account.",
            "type": "object",
            "required": [
                "externalRegionId",
                "name"
            ],
            "properties": {
                "externalRegionId": {
                    "description": "Unique identifier of region on the provider side.",
                    "type": "string",
                    "example": "us-west"
                },
                "name": {
                    "description": "Name of region on the provider side. In vSphere, the name of the region is different from its id.",
                    "type": "string",
                    "example": "us-west"
                }
            }
        },
        "FabricFlavor": {
            "description": "Represents a fabric flavor from the corresponding cloud end-point",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "bootDiskSizeInMB": {
                    "format": "int32",
                    "description": "Size of the boot disk (in megabytes). Not populated when inapplicable.",
                    "type": "integer",
                    "example": 486400
                },
                "memoryInMB": {
                    "format": "int64",
                    "description": "Total amount of memory (in megabytes). Not populated when inapplicable.",
                    "type": "integer",
                    "example": 15616
                },
                "name": {
                    "description": "The value of the instance type in the corresponding cloud.",
                    "type": "string",
                    "example": "i3.large"
                },
                "storageType": {
                    "description": "The type of storage supported by this instance type. Not populated when inapplicable.",
                    "type": "string",
                    "example": "NVMe_SSD"
                },
                "id": {
                    "description": "The internal identification used by the corresponding cloud end-point",
                    "type": "string",
                    "example": "901004"
                },
                "dataDiskSizeInMB": {
                    "format": "int32",
                    "description": "Size of the data disks (in megabytes). Not populated when inapplicable.",
                    "type": "integer",
                    "example": 486400
                },
                "dataDiskMaxCount": {
                    "format": "int32",
                    "description": "Number of data disks. Not populated when inapplicable.",
                    "type": "integer",
                    "example": 1
                },
                "networkType": {
                    "description": "The type of network supported by this instance type. Not populated when inapplicable.",
                    "type": "string",
                    "example": "Up to 10 Gigabit"
                },
                "cpuCount": {
                    "format": "int32",
                    "description": "Number of CPU cores. Not populated when inapplicable.",
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "LoadBalancerResult": {
            "description": "State object representing a query result of load balancecrs.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoadBalancer"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "UpdateCloudAccountAwsSpecification": {
            "description": "Specification for a Amazon cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "accessKeyId",
                "secretAccessKey"
            ],
            "properties": {
                "accessKeyId": {
                    "description": "Aws Access key ID",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "secretAccessKey": {
                    "description": "Aws Secret Access Key",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"eu-west-1\",\"externalRegionId\": \"eu-west-1\"}]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "CloudAccountVsphereRegionEnumerationSpecification": {
            "description": "Specification for a region enumeration of vshpere cloud account.",
            "type": "object",
            "properties": {
                "hostName": {
                    "description": "Host name for the vSphere endpoint. Either provide hostName or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "vc.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere",
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account. Either provide password or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "cloudAccountId": {
                    "description": "Existing cloud account id. Either provide existing cloud account Id, or hostName, username, password.",
                    "type": "string",
                    "example": "b8b7a918-342e-4a53-a3b0-b935da0fe601"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account. Either provide username or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "DiskAttachmentSpecification": {
            "description": "Specification for attaching disk to a machine",
            "type": "object",
            "required": [
                "blockDeviceId"
            ],
            "properties": {
                "blockDeviceId": {
                    "description": "The id of the existing block device",
                    "type": "string",
                    "example": "1298765"
                },
                "scsiController": {
                    "description": "Deprecated: The SCSI controller to be assigned",
                    "type": "string",
                    "example": "SCSI_Controller_0, SCSI_Controller_1, SCSI_Controller_2, SCSI_Controller_3"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "unitNumber": {
                    "description": "Deprecated: The Unit Number to be assigned",
                    "type": "string",
                    "example": "0"
                },
                "diskAttachmentProperties": {
                    "description": "Disk Attachment specific properties",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"scsiController\": \"SCSI_Controller_0\",\"unitNumber\" : \"2\" }"
                }
            }
        },
        "FabricNetwork": {
            "description": "State object representing a network on a external cloud provider.<br>**HATEOAS** links:<br>**region** - Region - Region for the network.<br>**self** - FabricNetwork - Self link to this network",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this network is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "ipv6Cidr": {
                    "description": "Network IPv6 CIDR to be used.",
                    "type": "string",
                    "example": "2001:eeee:6bd:2a::1/64"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "isDefault": {
                    "description": "Indicates whether this is the default subnet for the zone.",
                    "type": "boolean"
                },
                "customProperties": {
                    "description": "Custom properties of the fabric network instance",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "isPublic": {
                    "description": "Indicates whether the sub-network supports public IP assignment.",
                    "type": "boolean"
                },
                "cidr": {
                    "description": "Network CIDR to be used.",
                    "type": "string",
                    "example": "10.1.2.0/24"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "DiskEncryptionSetList": {
            "type": "object",
            "properties": {
                "diskEncryptionSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiskEncryptionSet"
                    }
                }
            }
        },
        "ComputeNatSpecification": {
            "type": "object",
            "required": [
                "gateway",
                "name",
                "natRules",
                "projectId"
            ],
            "properties": {
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend this resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "deploymentId": {
                    "description": "The id of the deployment that is associated with this resource",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "natRules": {
                    "description": "List of NAT Rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NatRule"
                    }
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                },
                "gateway": {
                    "description": "Id of the Compute Gateway to which the Compute Nat resource will be attached",
                    "type": "string"
                }
            }
        },
        "UpdateCloudAccountNsxVSpecification": {
            "description": "Specification for an NSX-v cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "dcid",
                "hostName",
                "password",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the NSX-v endpoint",
                    "type": "string",
                    "example": "nsxv.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting.",
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "associatedCloudAccountIds": {
                    "description": "vSphere cloud account associated with this NSX-V cloud account. NSX-V cloud account can be associated with a single vSphere cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release and hence the data collector Id is optional for vRA on-prem.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "CloudAccountVcfSpecification": {
            "description": "Specification for a VCF cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "name",
                "nsxHostName",
                "nsxPassword",
                "nsxUsername",
                "regions",
                "vcenterHostName",
                "vcenterPassword",
                "vcenterUsername",
                "workloadDomainId",
                "workloadDomainName"
            ],
            "properties": {
                "vcenterPassword": {
                    "description": "Password for the user used to authenticate with the vCenter in VCF cloud account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere and NSX-T",
                    "type": "boolean",
                    "example": false
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"us-east-1\",\"externalRegionId\": \"us-east-1\"}]"
                },
                "nsxHostName": {
                    "description": "Host name for the NSX endpoint from the specified workload domain.",
                    "type": "string",
                    "example": "nsxt.mycompany.com"
                },
                "vcenterUsername": {
                    "description": "vCenter user name for the specified workload domain.The specified user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "sddcManagerId": {
                    "description": "SDDC manager integration id",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account.Cloud account capability tags may enable different features. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "vcenterHostName": {
                    "description": "Host name for the vSphere from the specified workload domain.",
                    "type": "string",
                    "example": "vc.mycompany.com"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "nsxCertificate": {
                    "description": "NSX Certificate",
                    "type": "string"
                },
                "nsxUsername": {
                    "description": "User name for the NSX manager in the specified workload domain.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "workloadDomainName": {
                    "description": "Name of the workload domain to add as VCF cloud account.",
                    "type": "string",
                    "example": "Management"
                },
                "nsxPassword": {
                    "description": "Password for the user used to authenticate with the NSX-T manager in VCF cloud account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "vcenterCertificate": {
                    "description": "vCenter Certificate",
                    "type": "string"
                },
                "dcId": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "workloadDomainId": {
                    "description": "Id of the workload domain to add as VCF cloud account.",
                    "type": "string"
                }
            }
        },
        "ImageMappingDescription": {
            "description": "Represents a fabric image from the corresponding cloud end-point with additional cloud configuration script that will be executed on provisioning",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "cloudConfig": {
                    "description": "Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification.",
                    "type": "string",
                    "example": "runcmd:\n  - [\"mkdir\", \"/imageFolder\"]"
                },
                "osFamily": {
                    "description": "Operating System family of the image.",
                    "type": "string",
                    "example": "linux, win"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The regionId of the image",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "isPrivate": {
                    "description": "Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library Items",
                    "type": "boolean",
                    "example": true
                },
                "constraints": {
                    "description": "Constraints that are used to drive placement policies for the image that is produced from this mapping.Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"prop1\" : \"value1\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricImageResult": {
            "description": "State object representing a query result of fabric images.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricImage"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CustomNaming": {
            "description": "Custom names**HATEOAS** links:<br>**self** - Custom naming - Self link to this CustomNamingEntity",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "projects": {
                    "uniqueItems": true,
                    "description": "Set of projects associated with custom name ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomNamingProject"
                    },
                    "example": "[{\"defaultOrg\":true,\"active\":true,\"id\":\"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\"projectName\":\"string\",\"projectId\":\"string\",\"orgId\":\"string\"}]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "templates": {
                    "uniqueItems": true,
                    "description": "Set of templates associated with custom name ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomNamingTemplate"
                    },
                    "example": "[{\"uniqueName\":true,\"staticPattern\":\"string\",\"counters\":[{\"currentCounter\":0,\"cnResourceType\":\"COMPUTE\",\"active\":true,\"id\":\"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\"projectId\":\"string\"}],\"incrementStep\":0,\"pattern\":\"string\",\"startCounter\":0,\"id\":\"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\"resourceTypeName\":\"string\",\"resourceType\":\"COMPUTE\",\"resourceDefault\":true}]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CustomNamingTemplate": {
            "description": "A representation of a Template.",
            "type": "object",
            "properties": {
                "uniqueName": {
                    "description": "Flag to check if name should be unique",
                    "type": "boolean",
                    "example": true
                },
                "staticPattern": {
                    "description": "Static pattern text",
                    "type": "string",
                    "example": "mcm-project1-"
                },
                "counters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomNamingCounter"
                    }
                },
                "incrementStep": {
                    "format": "int64",
                    "description": "Set the increment to the counter value to be taken for each name.",
                    "type": "integer",
                    "example": 1
                },
                "pattern": {
                    "description": "The specified template used to generate the resource names",
                    "type": "string",
                    "example": "mcm-${project.name}-${##}"
                },
                "startCounter": {
                    "format": "int64",
                    "description": "The value from which naming pattern counter will start.",
                    "type": "integer",
                    "example": 2
                },
                "id": {
                    "format": "uuid",
                    "description": "Unique id of custom naming template",
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f76afa6"
                },
                "resourceTypeName": {
                    "description": "Resource type",
                    "type": "string",
                    "example": "Network"
                },
                "resourceType": {
                    "description": "Resource type",
                    "type": "string",
                    "enum": [
                        "COMPUTE",
                        "NETWORK",
                        "COMPUTE_STORAGE",
                        "LOAD_BALANCER",
                        "RESOURCE_GROUP",
                        "GATEWAY",
                        "NAT",
                        "SECURITY_GROUP"
                    ]
                },
                "resourceDefault": {
                    "description": "Flag to represent default pattern or static pattern",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "FabricVsphereStoragePolicyResult": {
            "description": "State object representing a query result of vSphere storage policies.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricVsphereStoragePolicy"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Project": {
            "description": "Projects link users and cloud zones, thus controlling who can use what cloud resources.<br>**HATEOAS** links:<br>**self** - Project - Self link to this project",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "operationTimeout": {
                    "format": "int64",
                    "description": "The timeout that should be used for Blueprint operations and Provisioning tasks. The timeout is in seconds",
                    "type": "integer"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "zones": {
                    "description": "List of Cloud Zones assigned to this project. You can limit deployment to a single region or allow multi-region placement by adding more than one cloud zone to a project. A cloud zone lists available resources. Use tags on resources to control workload placement.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ZoneAssignment"
                    }
                },
                "constraints": {
                    "description": "List of storage, network and extensibility constraints to be applied when provisioning through this project.",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Constraint"
                        }
                    },
                    "type": "object",
                    "example": "{\"network\":[{\"mandatory\": \"true\", \"expression\": \"env:dev\"}],\"storage\":[{\"mandatory\": \"false\", \"expression\": \"gold\"}],\"extensibility\":[{\"mandatory\": \"false\", \"expression\": \"key:value\"}]}"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "viewers": {
                    "description": "List of viewer users associated with the project. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[ { \"email\":\"viewer@vmware.com\" } ]"
                },
                "machineNamingTemplate": {
                    "description": "The naming template to be used for machines provisioned in this project",
                    "type": "string",
                    "example": "${project.name}-test-${####}"
                },
                "customProperties": {
                    "description": "The project custom properties which are added to all requests in this project",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "sharedResources": {
                    "description": "Specifies whether the resources in this projects are shared or not.",
                    "type": "boolean"
                },
                "members": {
                    "description": "List of member users associated with the project. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[ { \"email\":\"member@vmware.com\" } ]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "placementPolicy": {
                    "description": "Placement policy for the project. Determines how a zone will be selected for provisioning. DEFAULT or SPREAD.",
                    "type": "string",
                    "example": "DEFAULT"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "administrators": {
                    "description": "List of administrator users associated with the project. Only administrators can manage project's configuration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[ { \"email\":\"administrator@vmware.com\" } ]"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "StorageProfileAwsResult": {
            "description": "State object representing a query result of Aws storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AwsStorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountAwsRegionEnumerationSpecification": {
            "description": "Specification for a region enumeration of aws cloud account.",
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "description": "Aws Access key ID. Either provide accessKeyId or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "secretAccessKey": {
                    "description": "Aws Secret Access Key. Either provide secretAccessKey or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "cloudAccountId": {
                    "description": "Existing cloud account id. Either provide existing cloud account id, or accessKeyId/secretAccessKey credentials pair.",
                    "type": "string",
                    "example": "b8b7a918-342e-4a53-a3b0-b935da0fe601"
                }
            }
        },
        "DeploymentSpecification": {
            "type": "object",
            "required": [
                "name",
                "projectId"
            ],
            "properties": {
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                }
            }
        },
        "CloudAccountGcpResult": {
            "description": "State object representing a query result of GCP cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountGcp"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "StorageProfileGcpSpecification": {
            "description": "Represents a specification of GCP storage profile.",
            "type": "object",
            "required": [
                "name",
                "persistentDiskType",
                "regionId"
            ],
            "properties": {
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "regionId": {
                    "description": "A link to the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile is default or not.",
                    "type": "boolean",
                    "example": true
                },
                "persistentDiskType": {
                    "description": "Indicates the type of disk.",
                    "type": "string",
                    "example": "pd-standard / pd-ssd"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                }
            }
        },
        "CloudAccount": {
            "description": "State object representing a cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**associated-cloud-accounts** - array[CloudAccount] - Cloud accounts associated to this cloud account. For example an NSX endpoint linked to a vSphere cloud account.<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccount - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "cloudAccountProperties",
                "cloudAccountType",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "cloudAccountProperties": {
                    "description": "Cloud account specific properties",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"hostName\": \"vcenter.mycompany.com\" }"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "cloudAccountType": {
                    "description": "Cloud account type",
                    "type": "string",
                    "example": "vsphere, aws, azure, nsxv, nsxt"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "enabledRegions": {
                    "description": "A list of regions that are enabled for provisioning on this cloud account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricComputeSpecification": {
            "description": "Specification for updating a FabricCompute",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"?\", \"value\": \"Environment\" } ]"
                }
            }
        },
        "RemoteAccessSpecification": {
            "description": "Represents a specification for machine's remote access settings.",
            "type": "object",
            "required": [
                "authentication"
            ],
            "properties": {
                "password": {
                    "description": "Remote access password for the Azure machine.",
                    "type": "string"
                },
                "sshKey": {
                    "description": "In key pair authentication, the public key on the provisioned machine. Users are expected to log in with their private key and a default username from the cloud provider. An AWS Ubuntu image comes with default user ubuntu, and Azure comes with default user azureuser. To log in by SSH:\n`ssh -i <private-key-path> ubuntu@52.90.80.153`\n`ssh -i <private-key-path> azureuser@40.76.14.255`",
                    "type": "string",
                    "example": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCu74dLkAGGYIgNuszEAM0HaS2Y6boTPw+HqsFmtPSOpxPQoosws/OWGZlW1uue6Y4lIvdRqZOaLK+2di5512etY67ZwFHc5h1kx4az433DsnoZhIzXEKKI+EXfH/w72CIyG/uVhIzmA4FvRVQKXinE1vaVen6v1CBQEZibx9RXrVRP1VRibsKFRXYxywNEl1VtPK7KaxCEYO9IXi4SKVulSAhOVequwjlo5E8bKNT61/g/YyMvwCbaTTPPeCpS/7i+JHYY3QZ8fQY/Syn+bOFpKCCHl+7VpsL8gjWe6fI4bUp6KUiW7ZkQpL/47rxawKnRMKKEU9P0ICp3RRB39lXT"
                },
                "keyPair": {
                    "description": "Key Pair Name.",
                    "type": "string"
                },
                "authentication": {
                    "description": "One of four authentication types.\n`generatedPublicPrivateKey`: The provisioned machine generates the public/private key pair and enables SSH to use them without user input.\n`publicPrivateKey`: The user enters the private key in the SSH command. See remoteAccess.sshKey.\n`usernamePassword`: The user enters a username and password for remote access.\n`keyPairName`: The user enters an already existing keyPair name. See remoteAccess.keyPair",
                    "type": "string",
                    "example": "publicPrivateKey"
                },
                "username": {
                    "description": "Remote access username for the Azure machine.",
                    "type": "string"
                }
            }
        },
        "ComputeNatResult": {
            "description": "State object representing a query result of compute-nats.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ComputeNat"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Machine": {
            "description": "Represents a cloud agnostic machine.<br>**HATEOAS** links:<br>**operations** - array[String] - Supported operations for the machine.<br>**network-interfaces** - array[NetworkInterface] - Network interfaces for the machine.<br>**disks** - array[MachineDisk] - disks for the machine.<br>**deployment** - Deployment - Deployment that this machine is part of.<br>**cloud-accounts** - array[CloudAccount] - Cloud accounts where this machine is provisioned.<br>**self** - Machine - Self link to this machine",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id",
                "powerState"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "address": {
                    "description": "Primary address allocated or in use by this machine. The actual type of the address depends on the adapter type. Typically it is either the public or the external IP address.",
                    "type": "string",
                    "example": "34.242.21.5"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this resource belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "hostname": {
                    "description": "Hostname associated with this machine instance.",
                    "type": "string"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "powerState": {
                    "description": "Power state of machine.",
                    "type": "string",
                    "enum": [
                        "ON",
                        "OFF",
                        "GUEST_OFF",
                        "UNKNOWN",
                        "SUSPEND"
                    ],
                    "example": "ON, OFF"
                },
                "provisioningStatus": {
                    "description": "The provisioning status of the resource. One of three provisioning statuses.\n`PROVISIONING`: The resource is being provisioned.\n`READY`: The resource is already provisioned.\n`SUSPEND`: The resource is being destroyed.\n",
                    "type": "string"
                },
                "saltConfiguration": {
                    "description": "Salt configuration on the machine",
                    "$ref": "#/definitions/SaltConfiguration"
                },
                "deploymentId": {
                    "description": "Deployment id that is associated with this resource.",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "bootConfig": {
                    "description": "The cloud config data in json-escaped yaml syntax",
                    "$ref": "#/definitions/MachineBootConfig"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this resource belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "BlockDeviceSpecification": {
            "type": "object",
            "required": [
                "capacityInGB",
                "name",
                "projectId"
            ],
            "properties": {
                "capacityInGB": {
                    "format": "int32",
                    "description": "Capacity of the block device in GB.",
                    "type": "integer",
                    "example": 78
                },
                "sourceReference": {
                    "description": "Reference to URI using which the block device has to be created.",
                    "type": "string",
                    "example": "ami-0d4cfd66"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend this resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "encrypted": {
                    "description": "Indicates whether the block device should be encrypted or not.",
                    "type": "boolean",
                    "example": true
                },
                "deploymentId": {
                    "description": "The id of the deployment that is associated with this resource",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "diskContentBase64": {
                    "description": "Content of a disk, base64 encoded.",
                    "type": "string",
                    "example": "dGVzdA"
                },
                "persistent": {
                    "description": "Indicates whether the block device survives a delete action.",
                    "type": "boolean",
                    "example": true
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                },
                "constraints": {
                    "description": "Constraints that are used to drive placement policies for the block device that is produced from this specification. Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[ { \"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"floor\": \"3rd\"} ]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"location\", \"value\": \"SOF\" } ]"
                }
            }
        },
        "CloudAccountAwsSpecification": {
            "description": "Specification for a Amazon cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "accessKeyId",
                "name",
                "regions",
                "secretAccessKey"
            ],
            "properties": {
                "accessKeyId": {
                    "description": "Aws Access key ID",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "secretAccessKey": {
                    "description": "Aws Secret Access Key",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"eu-west-1\",\"externalRegionId\": \"eu-west-1\"}]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "RegionResult": {
            "description": "State object representing a query result of regions.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountVmcResult": {
            "description": "State object representing a query result of Vmc cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountVmc"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountVmc": {
            "description": "State object representing a Vmc cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountVmc - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "id",
                "sddc",
                "username"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "sddc": {
                    "description": "SDDC environment.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account.Cloud account capability tags may enable different features. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "enabledRegions": {
                    "description": "A list of regions that are enabled for provisioning on this cloud account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "username": {
                    "description": "Username to authenticate to vCenter",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "ProjectResourceMetadata": {
            "description": "Represents the resource metadata associated with a project",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A list of keys and optional values to be applied to compute resources provisioned in a project",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "NetworkSpecification": {
            "description": "Specification for a cloud network",
            "type": "object",
            "required": [
                "name",
                "projectId"
            ],
            "properties": {
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend this resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "deploymentId": {
                    "description": "The id of the deployment that is associated with this resource",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "outboundAccess": {
                    "description": "Flag to indicate if the network needs to have outbound access or not. Default is true. This field will be ignored if there is proper input for networkType customProperty",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "createGateway": {
                    "description": "Flag to indicate if the network creation should create a gateway. Default is true.",
                    "type": "boolean",
                    "example": true
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                },
                "constraints": {
                    "description": "Constraints that are used to drive placement policies for the network that is produced from this specification, related with the network profile. Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_vpc\" } ]"
                }
            }
        },
        "GcpStorageProfile": {
            "description": "Defines a structure that holds list of storage policies defined for GCP for a specific region.**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - GcpStorageProfile - Self link to this gcp Storage Profile",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "cloudAccountId": {
                    "description": "Id of the cloud account this storage profile belongs to.",
                    "type": "string",
                    "example": "[9e49]"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "persistentDiskType": {
                    "description": "Indicates the type of storage device.",
                    "type": "string",
                    "example": "pd-standard / pd-ssd"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates whether this storage profile is default or not.",
                    "type": "boolean",
                    "example": false
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricAzureStorageAccount": {
            "description": "Represents a structure that holds details of Azure endpoint's storage account.<br>**HATEOAS** links:<br>**region** - Region - Region for the storage account.<br>**self** - FabricAzureStorageAccount - Self link to this storage account",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "Indicates the ID of region.",
                    "type": "string",
                    "example": "westus"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "type": {
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.",
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountNsxVSpecification": {
            "description": "Specification for an NSX-v cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "dcid",
                "hostName",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the NSX-v endpoint",
                    "type": "string",
                    "example": "nsxv.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting.",
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "associatedCloudAccountIds": {
                    "description": "vSphere cloud account associated with this NSX-V cloud account. NSX-V cloud account can be associated with a single vSphere cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release and hence the data collector Id is optional for vRA on-prem.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "FlavorMapping": {
            "description": "Describes a flavor mapping between a global fabric flavor key and fabric flavor.<br>**HATEOAS** links:<br>**region** - Region - Region for the mapping.",
            "type": "object",
            "required": [
                "_links",
                "mapping"
            ],
            "properties": {
                "mapping": {
                    "description": "Flavors defined for the particular region. Keyed by global flavor key.",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricFlavor"
                    },
                    "type": "object",
                    "example": "{ \"small\": { \"name\": \"t2.small\", \"cpuCount\": \"1\", \"MemoryInMB\": \"2048\", \"storageType\": \"EBS\", \"networkType\": \"Low to Moderate\"} }"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this mapping is defined.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                }
            }
        },
        "UpdateCloudAccountVcfSpecification": {
            "description": "Specification for a VCF cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "nsxHostName",
                "nsxPassword",
                "nsxUsername",
                "vcenterHostName",
                "vcenterPassword",
                "vcenterUsername",
                "workloadDomainId",
                "workloadDomainName"
            ],
            "properties": {
                "vcenterPassword": {
                    "description": "Password for the user used to authenticate with the vCenter in VCF cloud account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere and NSX-T",
                    "type": "boolean",
                    "example": false
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"us-east-1\",\"externalRegionId\": \"us-east-1\"}]"
                },
                "nsxHostName": {
                    "description": "Host name for the NSX endpoint from the specified workload domain.",
                    "type": "string",
                    "example": "nsxt.mycompany.com"
                },
                "vcenterUsername": {
                    "description": "vCenter user name for the specified workload domain.The specified user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "sddcManagerId": {
                    "description": "SDDC manager integration id",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account.Cloud account capability tags may enable different features. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "vcenterHostName": {
                    "description": "Host name for the vSphere from the specified workload domain.",
                    "type": "string",
                    "example": "vc.mycompany.com"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "nsxCertificate": {
                    "description": "NSX Certificate",
                    "type": "string"
                },
                "nsxUsername": {
                    "description": "User name for the NSX manager in the specified workload domain.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "workloadDomainName": {
                    "description": "Name of the workload domain to add as VCF cloud account.",
                    "type": "string",
                    "example": "Management"
                },
                "nsxPassword": {
                    "description": "Password for the user used to authenticate with the NSX-T manager in VCF cloud account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "vcenterCertificate": {
                    "description": "vCenter Certificate",
                    "type": "string"
                },
                "dcId": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "workloadDomainId": {
                    "description": "Id of the workload domain to add as VCF cloud account.",
                    "type": "string"
                }
            }
        },
        "CloudAccountNsxVResult": {
            "description": "State object representing a query result of Nsx-V cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountNsxV"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ImageMapping": {
            "description": "Describes an image mapping between image key and fabric image.<br>**HATEOAS** links:<br>**region** - Region - Region for the mapping.",
            "type": "object",
            "required": [
                "_links",
                "mapping"
            ],
            "properties": {
                "mapping": {
                    "description": "Image mapping defined for the particular region.",
                    "additionalProperties": {
                        "$ref": "#/definitions/ImageMappingDescription"
                    },
                    "type": "object",
                    "example": "{ \"ubuntu\" : {\"externalRegionId\": \"us-east-1\", \"externalId\": \"ami-2c7b5656\", \"name\": \"ami-ubuntu-16.04\", \"description\": \"instance-store - HVM - supports - UTF-8 - tools\"} }"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this mapping is defined.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                }
            }
        },
        "UpdateIntegrationSpecification": {
            "description": "Specification for creating a generic integration.<br><br>Integration represents external system added to vRealize Automation and is identified by a type and specific properties.",
            "type": "object",
            "properties": {
                "privateKey": {
                    "description": "Secret access key or password to be used to authenticate with the integration",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "associatedCloudAccountIds": {
                    "description": "Cloud accounts to associate with this integration",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the Integration.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"sampleadapterProjectId\" : \"projectId\" }"
                },
                "integrationProperties": {
                    "description": "Integration specific properties supplied in as name value pairs",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"providerId\" : \"providerID\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for an integration.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "privateKeyId": {
                    "description": "Access key id or username to be used to authenticate with the integration",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Integration",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "FabricFlavorResult": {
            "description": "State object representing a query result of fabric flavors.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricFlavor"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "StorageProfileAzureSpecification": {
            "description": "Represents a specification of Azure storage profile.",
            "type": "object",
            "required": [
                "name",
                "regionId"
            ],
            "properties": {
                "storageAccountId": {
                    "description": "Id of a storage account where in the disk is placed.",
                    "type": "string",
                    "example": "aaa82"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage policy should support encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "regionId": {
                    "description": "The If of the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage policy contains default storage properties.",
                    "type": "boolean",
                    "example": true
                },
                "diskType": {
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.",
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS"
                },
                "dataDiskCaching": {
                    "description": "Indicates the caching mechanism for additional disk. ",
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite"
                },
                "osDiskCaching": {
                    "description": "Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write.",
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite"
                },
                "diskEncryptionSetId": {
                    "description": "Indicates the id of disk encryption set. ",
                    "type": "string",
                    "example": "/subscriptions/b8ef63/resourceGroups/DiskEncryptionSets/providers/Microsoft.Compute/diskEncryptionSets/MyDES"
                },
                "tags": {
                    "description": "A set of tag keys and optional values for a storage policy which define set of specifications for creating a disk.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                }
            }
        },
        "MachineResult": {
            "description": "State object representing a query result of machines.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Machine"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "UpdateSecurityGroupSpecification": {
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                }
            }
        },
        "ComputeGatewayResult": {
            "description": "State object representing a query result of compute-gateways.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ComputeGateway"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ZoneAssignmentSpecification": {
            "description": "A zone assignment configuration",
            "type": "object",
            "properties": {
                "storageLimitGB": {
                    "format": "int64",
                    "description": "Defines an upper limit on storage that can be requested from a cloud zone which is part of this project. Default is 0 (unlimited storage). Please note that this feature is supported only for vSphere cloud zones. Not valid for other cloud zone types.",
                    "type": "integer",
                    "example": 20
                },
                "cpuLimit": {
                    "format": "int64",
                    "description": "The maximum amount of cpus that can be used by this cloud zone. Default is 0 (unlimited cpu).",
                    "type": "integer",
                    "example": 2048
                },
                "memoryLimitMB": {
                    "format": "int64",
                    "description": "The maximum amount of memory that can be used by this cloud zone. Default is 0 (unlimited memory).",
                    "type": "integer",
                    "example": 2048
                },
                "zoneId": {
                    "description": "The Cloud Zone Id",
                    "type": "string",
                    "example": "77ee1"
                },
                "maxNumberInstances": {
                    "format": "int64",
                    "description": "The maximum number of instances that can be provisioned in this cloud zone. Default is 0 (unlimited instances).",
                    "type": "integer",
                    "example": 50
                },
                "priority": {
                    "format": "int32",
                    "description": "The priority of this zone in the current project. Lower numbers mean higher priority. Default is 0 (highest)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Constraint": {
            "description": "A constraint that is conveyed to the policy engine.",
            "type": "object",
            "required": [
                "expression",
                "mandatory"
            ],
            "properties": {
                "expression": {
                    "description": "An expression of the form \"[!]tag-key[:[tag-value]]\", used to indicate a constraint match on keys and values of tags.\n",
                    "type": "string",
                    "example": "ha:strong"
                },
                "mandatory": {
                    "description": "Indicates whether this constraint should be strictly enforced or not.",
                    "type": "boolean"
                }
            }
        },
        "CloudAccountNsxTResult": {
            "description": "State object representing a query result of Nsx-T cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountNsxT"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Deployment": {
            "description": "State object representing a deployment.<br>**HATEOAS** links:<br>**self** - Deployment - Self link to this deployment",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "type": "string"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "BlockDevice": {
            "description": "State object representing a block device.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - Cloud accounts where this disk is provisioned.<br>**self** - BlockDevice - Self link to this block device",
            "type": "object",
            "required": [
                "_links",
                "capacityInGB",
                "externalRegionId",
                "externalZoneId",
                "id",
                "status"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "type": {
                    "description": "Type of the block device",
                    "type": "string",
                    "enum": [
                        "SSD",
                        "HDD",
                        "CDROM",
                        "FLOPPY"
                    ],
                    "example": "HDD"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "capacityInGB": {
                    "format": "int32",
                    "description": "Capacity of the block device in GB.",
                    "type": "integer",
                    "example": 10
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this resource belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "provisioningStatus": {
                    "description": "The provisioning status of the resource. One of three provisioning statuses.\n`PROVISIONING`: The resource is being provisioned.\n`READY`: The resource is already provisioned.\n`SUSPEND`: The resource is being destroyed.\n",
                    "type": "string"
                },
                "deploymentId": {
                    "description": "Deployment id that is associated with this resource.",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "persistent": {
                    "description": "Indicates whether the block device survives a delete action.",
                    "type": "boolean",
                    "example": true
                },
                "projectId": {
                    "description": "The id of the project this resource belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "status": {
                    "description": "Status of the block device",
                    "type": "string",
                    "enum": [
                        "DETACHED",
                        "ATTACHED",
                        "AVAILABLE"
                    ],
                    "example": "ATTACHED"
                }
            }
        },
        "CustomNamingProject": {
            "description": "A representation of a Project.",
            "type": "object",
            "properties": {
                "defaultOrg": {
                    "description": "Flag to represent if custom name is default for org",
                    "type": "boolean",
                    "example": true
                },
                "active": {
                    "description": "Flag to check if project is active",
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "format": "uuid",
                    "description": "Unique id of custom naming project",
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "projectName": {
                    "description": "Name of mapped project",
                    "type": "string",
                    "example": "Project name"
                },
                "projectId": {
                    "description": "Project id mapped to custom name",
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa7"
                },
                "orgId": {
                    "description": "Org id",
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f76afa6"
                }
            }
        },
        "CloudAccountVcf": {
            "description": "State object representing a VCF cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountVcf - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "id",
                "nsxHostName",
                "nsxUsername",
                "sddcManagerId",
                "vcenterHostName",
                "vcenterUsername",
                "vcfDomainId",
                "vcfDomainName"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "nsxHostName": {
                    "description": "NSX Hostname in a workload domain",
                    "type": "string",
                    "example": "nsx.mycompany.com"
                },
                "vcenterUsername": {
                    "description": "Username to authenticate to vCenter Server in workload domain",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "vcfDomainName": {
                    "description": "Name of the VCF worload domain.",
                    "type": "string",
                    "example": "Workload Domain - 1"
                },
                "sddcManagerId": {
                    "description": "SDDC Manager ID",
                    "type": "string",
                    "example": "2e5bb71d-0c14-4066-a999-2cb6c693654a"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account.Cloud account capability tags may enable different features. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "enabledRegions": {
                    "description": "A list of regions that are enabled for provisioning on this cloud account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "vcenterHostName": {
                    "description": "vCenter Hostname in a workload domain",
                    "type": "string",
                    "example": "vcenter.mycompany.com"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "nsxUsername": {
                    "description": "Username to authenticate to NSX manager in workload domain",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "vcfDomainId": {
                    "description": "Id of the VCF worload domain.",
                    "type": "string",
                    "example": "587db412-6037-43e4-8e1e-49ebbaf6cd35"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricVsphereDatastore": {
            "description": "Represents a structure that holds details of vSphere datastore.<br>**HATEOAS** links:<br>**self** - FabricVsphereDatastore - Self link to this data store",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "freeSizeGB": {
                    "description": "Indicates free size available in datastore.",
                    "type": "string",
                    "example": "20"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "Id of datacenter in which the datastore is present.",
                    "type": "string",
                    "example": "Datacenter:datacenter-2"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "type": {
                    "description": "Type of datastore.",
                    "type": "string",
                    "example": "VMFS / NFS / StoragePod"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this datastore / datastore cluster.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vsan\", \"value\": \" \" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "DeploymentResult": {
            "description": "State object representing a query result of deployments.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Deployment"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "SecurityGroup": {
            "description": "State object representing a security group.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this security group exists.<br>**self** - SecurityGroup - Self link to this security group",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id",
                "rules"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "rules": {
                    "description": "List of security rules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this resource belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "provisioningStatus": {
                    "description": "The provisioning status of the resource. One of three provisioning statuses.\n`PROVISIONING`: The resource is being provisioned.\n`READY`: The resource is already provisioned.\n`SUSPEND`: The resource is being destroyed.\n",
                    "type": "string"
                },
                "deploymentId": {
                    "description": "Deployment id that is associated with this resource.",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this resource belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "About": {
            "description": "State object representing an about page that includes api versioning information",
            "type": "object",
            "required": [
                "latestApiVersion",
                "supportedApis"
            ],
            "properties": {
                "supportedApis": {
                    "description": "A collection of all currently supported api versions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiDescription"
                    }
                },
                "latestApiVersion": {
                    "description": "The latest version of the API in yyyy-MM-dd format (UTC).",
                    "type": "string"
                }
            }
        },
        "SecurityGroupResult": {
            "description": "State object representing a query result of security groups.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecurityGroup"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountVcfResult": {
            "description": "State object representing a query result of VCF cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountVcf"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FabricNetworkVsphere": {
            "description": "State object representing a vSphere network on a external cloud provider.<br>**domain** - domain for the vSphere network.<br>**defaultGateway** - default IPv4 gateway for the vSphere network.<br>**defaultIPv6Gateway** - default IPv6 gateway for the vSphere network.<br>**dnsServerAddresses** - list of dns server address for the vSphere network.<br>**dnsSearchDomains** - ist of dns search domains for the vSphere network",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this network is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "defaultIpv6Gateway": {
                    "description": "IPv6 default gateway to be used.",
                    "type": "string",
                    "example": "2001:eeee:6bd:2a::1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "defaultGateway": {
                    "description": "IPv4 default gateway to be used.",
                    "type": "string",
                    "example": "10.1.2.1"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "ipv6Cidr": {
                    "description": "Network IPv6 CIDR to be used.",
                    "type": "string",
                    "example": "2001:eeee:6bd:2a::1/64"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "isDefault": {
                    "description": "Indicates whether this is the default subnet for the zone.",
                    "type": "boolean"
                },
                "customProperties": {
                    "description": "Custom properties of the fabric network instance",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "domain": {
                    "description": "Domain value.",
                    "type": "string",
                    "example": "sqa.local"
                },
                "dnsServerAddresses": {
                    "description": "A list of DNS server addresses that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[1.1.1.1]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "isPublic": {
                    "description": "Indicates whether the sub-network supports public IP assignment.",
                    "type": "boolean"
                },
                "cidr": {
                    "description": "Network CIDR to be used.",
                    "type": "string",
                    "example": "10.1.2.0/24"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "dnsSearchDomains": {
                    "description": "A list of DNS search domains that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[vmware.com]"
                }
            }
        },
        "Region": {
            "description": "State object representing a region in a cloud account.<br>**HATEOAS** links:<br>**cloud-account** - CloudAccount - Cloud account for the region.**self** - Region - Self link to this region",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "Unique identifier of region on the provider side.",
                    "type": "string",
                    "example": "us-west"
                },
                "cloudAccountId": {
                    "description": "The id of the cloud account this region belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "name": {
                    "description": "Name of region on the provider side. In vSphere, the name of the region is different from its id.",
                    "type": "string",
                    "example": "us-west"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "ApiDescription": {
            "type": "object",
            "required": [
                "apiVersion",
                "documentationLink"
            ],
            "properties": {
                "apiVersion": {
                    "description": "The version of the API in yyyy-MM-dd format (UTC).",
                    "type": "string"
                },
                "deprecationPolicy": {
                    "description": "The deprecation policy may contain information whether the api is in deprecated state and when it expires.",
                    "$ref": "#/definitions/DeprecationPolicy"
                },
                "documentationLink": {
                    "description": "The link to the documentation of this api version",
                    "type": "string"
                }
            }
        },
        "FabricNetworkVsphereSpecification": {
            "description": "Specification for updating a Vsphere FabricNetwork",
            "type": "object",
            "properties": {
                "ipv6Cidr": {
                    "description": "Network IPv6 CIDR to be used.",
                    "type": "string",
                    "example": "2001:eeee:6bd:2a::1/64"
                },
                "isDefault": {
                    "description": "Indicates whether this is the default subnet for the zone.",
                    "type": "boolean"
                },
                "domain": {
                    "description": "Domain value.",
                    "type": "string",
                    "example": "sqa.local"
                },
                "defaultIpv6Gateway": {
                    "description": "IPv6 default gateway to be used.",
                    "type": "string",
                    "example": "2001:eeee:6bd:2a::1"
                },
                "dnsServerAddresses": {
                    "description": "A list of DNS server addresses that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[1.1.1.1]"
                },
                "isPublic": {
                    "description": "Indicates whether the sub-network supports public IP assignment.",
                    "type": "boolean"
                },
                "cidr": {
                    "description": "Network CIDR to be used.",
                    "type": "string",
                    "example": "10.1.2.0/24"
                },
                "defaultGateway": {
                    "description": "IPv4 default gateway to be used.",
                    "type": "string",
                    "example": "10.1.2.1"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                },
                "dnsSearchDomains": {
                    "description": "A list of DNS search domains that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[vmware.com]"
                }
            }
        },
        "ComputeGateway": {
            "description": "The compute gateway object is a logical entity attached to a network. It is used to configure NAT rules on the Edge Gateway or Tier-1 logical router in NSX to enable port forwarding.<br>**HATEOAS** links:<br>**self** - Compute Gateway - Self link to this compute gateway",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id",
                "networks"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "networks": {
                    "description": "A list of id(s) of the network(s) to which the compute gateway is attached",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this resource belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "provisioningStatus": {
                    "description": "The provisioning status of the resource. One of three provisioning statuses.\n`PROVISIONING`: The resource is being provisioned.\n`READY`: The resource is already provisioned.\n`SUSPEND`: The resource is being destroyed.\n",
                    "type": "string"
                },
                "deploymentId": {
                    "description": "Deployment id that is associated with this resource.",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this resource belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountAws": {
            "description": "State object representing a AWS cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountAws - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "accessKeyId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "accessKeyId": {
                    "description": "Access key id for Aws.",
                    "type": "string",
                    "example": "KLIKJ7EA4PPDZR7T7Z6K"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "enabledRegions": {
                    "description": "A list of regions that are enabled for provisioning on this cloud account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "VolumeTypeList": {
            "type": "object",
            "properties": {
                "volumeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UpdateCloudAccountVmcSpecification": {
            "description": "Specification for a VMC cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "dcId",
                "hostName",
                "nsxHostName",
                "password",
                "sddcId",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Enter the IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.",
                    "type": "string",
                    "example": "vc1.vmware.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere",
                    "type": "boolean",
                    "example": false
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"Datacenter:datacenter-3\",\"externalRegionId\": \"Datacenter:datacenter-3\"}]"
                },
                "apiKey": {
                    "description": "VMC API access key. Optional when updating.",
                    "type": "string"
                },
                "nsxHostName": {
                    "description": "The IP address of the NSX Manager server in the specified SDDC / FQDN.",
                    "type": "string",
                    "example": "nsxManager.sddc-52-12-8-145.vmwaretest.com"
                },
                "sddcId": {
                    "description": "Identifier of the on-premise SDDC to be used by this cloud account. Note that NSX-V SDDCs are not supported.",
                    "type": "string",
                    "example": "CMBU-PRD-NSXT-M8GA-090319"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account.Cloud account capability tags may enable different features. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "dcId": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "username": {
                    "description": "vCenter user name for the specified SDDC.The specified user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "ProjectResult": {
            "description": "State object representing a query result of projects.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "IntegrationResult": {
            "description": "State object representing a query result of integrations.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Integration"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "StorageProfile": {
            "description": "Represents a structure that holds details of storage profile linked to a cloud zone / region.**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - StorageProfile - Self link to this storage profile.<br>**datastore** - FabricVsphereDatastore - Datastore of this storage profile.<br>**storage-policy** - FabricVsphereStoragePolicy - vSphere storage policy for this profile.<br> **storage-account** - FabricAzureStorageAccount - Azure storage account for this profile.<br>",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "cloudAccountId": {
                    "description": "Id of the cloud account this storage profile belongs to.",
                    "type": "string",
                    "example": "[9e49]"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "diskProperties": {
                    "description": "Map of storage properties that are to be applied on disk while provisioning.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"diskProperties\": {\n                    \"provisioningType\": \"thin\",\n                    \"sharesLevel\": \"low\",\n                    \"shares\": \"500\",\n                    \"limitIops\": \"500\",\n                    \"diskType\": \"firstClass\"\n                } }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile is default profile or not.",
                    "type": "boolean"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "NetworkProfileSpecification": {
            "type": "object",
            "required": [
                "name",
                "regionId"
            ],
            "properties": {
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "isolationNetworkDomainCIDR": {
                    "description": "CIDR of the isolation network domain.",
                    "type": "string",
                    "example": "10.10.10.0/24"
                },
                "isolationNetworkDomainId": {
                    "description": "The Id of the network domain used for creating isolated networks.",
                    "type": "string",
                    "example": "1234"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"dev\", \"value\": \"hard\" } ]"
                },
                "externalIpBlockIds": {
                    "description": "List of external IP blocks coming from an external IPAM provider that can be used to create subnetworks inside them",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[\"3e2bb9bc-6a6a-11ea-bc55-0242ac130003\"]"
                },
                "fabricNetworkIds": {
                    "description": "A list of fabric network Ids which are assigned to the network profile.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"6543\" ]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the Network Profile object that is produced from this specification.  For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router.  onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"resourcePoolId\" : \"resource-pool-1\", \"datastoreId\" : \"StoragePod:group-p87839\", \"computeCluster\" : \"/resources/compute/1234\", \"distributedLogicalRouterStateLink\" : \"/resources/routers/1234\", \"onDemandNetworkIPAssignmentType\" : \"dynamic\"}"
                },
                "regionId": {
                    "description": "The Id of the region for which this profile is created",
                    "type": "string",
                    "example": "9e49"
                },
                "securityGroupIds": {
                    "description": "A list of security group Ids which are assigned to the network profile.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"6545\" ]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "isolationExternalFabricNetworkId": {
                    "description": "The Id of the fabric network used for outbound access.",
                    "type": "string",
                    "example": "1234"
                },
                "isolationType": {
                    "description": "Specifies the isolation type e.g. none, subnet or security group",
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUBNET",
                        "SECURITY_GROUP"
                    ],
                    "example": "SUBNET"
                },
                "isolatedNetworkCIDRPrefix": {
                    "format": "int32",
                    "description": "The CIDR prefix length to be used for the isolated networks that are created with the network profile.",
                    "type": "integer",
                    "example": 24
                },
                "loadBalancerIds": {
                    "description": "A list of load balancers which are assigned to the network profile.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"6545\" ]"
                }
            }
        },
        "NetworkIPRange": {
            "description": "State object representing an IP address range for a Fabric Network.<br>**HATEOAS** links:<br>**region** - Region - Region for the network.<br>**self** - NetworkIPRange - Self link to this IP address range",
            "type": "object",
            "required": [
                "_links",
                "endIPAddress",
                "id",
                "startIPAddress"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "startIPAddress": {
                    "description": "Start IP address of the range.",
                    "type": "string"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "endIPAddress": {
                    "description": "End IP address of the range.",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ipv6-range\", \"value\": \"true\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "ipVersion": {
                    "description": "IP address version: IPv4 or IPv6. Default: IPv4.",
                    "type": "string",
                    "enum": [
                        "IPv4",
                        "IPv6"
                    ]
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CspLoginSpecification": {
            "description": "Specification for token retrieval request.",
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "description": "Refresh token obtained from the UI",
                    "type": "string",
                    "example": "5e7c2c-9a9e-4b0-9339-a7f94"
                }
            }
        },
        "FabricImageDescription": {
            "description": "Represents fabric image description. Used when creating image profiles.",
            "type": "object",
            "properties": {
                "cloudConfig": {
                    "description": "Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification.",
                    "type": "string",
                    "example": "runcmd:\n  - [\"mkdir\", \"/imageFolder\"]"
                },
                "name": {
                    "description": "Fabric image name. Valid if id not provided.",
                    "type": "string",
                    "example": "ami-ubuntu-16.04-1.9.1-00-1516139717"
                },
                "id": {
                    "description": "The id of the fabric image",
                    "type": "string",
                    "example": "9e49"
                },
                "constraints": {
                    "description": "Constraints that are used to drive placement policies for the image that is produced from this mapping.Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]"
                }
            }
        },
        "CloudAccountGcp": {
            "description": "State object representing a GCP cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountGcp - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "clientEmail",
                "id",
                "privateKeyId",
                "projectId"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "clientEmail": {
                    "description": "GCP Client email",
                    "type": "string",
                    "example": "321743978432-compute@developer.gserviceaccount.com"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "enabledRegions": {
                    "description": "A list of regions that are enabled for provisioning on this cloud account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "GCP Project ID",
                    "type": "string",
                    "example": "example-gcp-project"
                },
                "privateKeyId": {
                    "description": "GCP Private key ID",
                    "type": "string",
                    "example": "027f73d50a19452eedf5775a9b42c5083678abdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "ZoneSpecification": {
            "description": "Specification for a zone.",
            "type": "object",
            "required": [
                "name",
                "regionId"
            ],
            "properties": {
                "customProperties": {
                    "description": "A list of key value pair of properties that will  be used",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"__isDefaultPlacementZone\": \"true\"}"
                },
                "folder": {
                    "description": "The folder relative path to the datacenter where resources are deployed to. (only applicable for vSphere cloud zones)",
                    "type": "string",
                    "example": "test-folder"
                },
                "computeIds": {
                    "description": "The ids of the compute resources that will be explicitly assigned to this zone",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ab12c]"
                },
                "regionId": {
                    "description": "The id of the region for which this profile is created",
                    "type": "string",
                    "example": "9e49"
                },
                "tagsToMatch": {
                    "description": "A set of tag keys and optional values that will be used ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"compliance\", \"value\": \"pci\" } ]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "placementPolicy": {
                    "description": "Placement policy for the zone. One of DEFAULT, SPREAD or BINPACK.",
                    "type": "string",
                    "example": "DEFAULT"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that are effectively applied to all compute resources in this zone, but only in the context of this zone.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"production\", \"value\": \" \" } ]"
                }
            }
        },
        "CnProjectVo": {
            "type": "object",
            "properties": {
                "defaultOrg": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "orgId": {
                    "type": "string"
                }
            }
        },
        "FabricVsphereDatastoreSpecification": {
            "description": "Specification for updating a FabricVsphereDatastore",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                }
            }
        },
        "UpdateExternalNetworkIPRangeSpecification": {
            "description": "Specification for updating an ExternalNetworkIPRange",
            "type": "object",
            "properties": {
                "fabricNetworkIds": {
                    "uniqueItems": true,
                    "description": "A list of fabric network Ids that this IP range should be associated with.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CloudAccountAzureRegionEnumerationSpecification": {
            "description": "Specification for a region enumeration of azure cloud account.",
            "type": "object",
            "properties": {
                "clientApplicationId": {
                    "description": "Azure Client Application ID. Either provide clientApplicationId or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "3287dd6e-76d8-41b7-9856-2584969e7739"
                },
                "clientApplicationSecretKey": {
                    "description": "Azure Client Application Secret Key. Either provide clientApplicationSecretKey or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "GDfdasDasdASFas321das32cas2x3dsXCSA76xdcasg="
                },
                "cloudAccountId": {
                    "description": "Existing cloud account id. Either provide id of existing account, or cloud account credentials: clientApplicationId, clientApplicationSecretKey and tenantId.",
                    "type": "string",
                    "example": "b8b7a918-342e-4a53-a3b0-b935da0fe601"
                },
                "tenantId": {
                    "description": "Azure Tenant ID. Either provide tenantId or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "9a13d920-4691-4e2d-b5d5-9c4c1279bc9a"
                },
                "subscriptionId": {
                    "description": "Azure Subscribtion ID. Either provide subscriptionId or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "064865b2-e914-4717-b415-8806d17948f7"
                }
            }
        },
        "ImageProfile": {
            "description": "Represents a structure that holds a list of image mappings defined for the particular region.<br>**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - ImageProfile - Self link to this image profile",
            "type": "object",
            "required": [
                "_links",
                "id",
                "imageMappings"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "imageMappings": {
                    "description": "A list of the image mappings defined for the particular region",
                    "$ref": "#/definitions/ImageMapping"
                },
                "cloudAccountId": {
                    "description": "Id of the cloud account this image profile belongs to.",
                    "type": "string",
                    "example": "[9e49]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "ZoneAssignment": {
            "description": "A zone assignment",
            "type": "object",
            "properties": {
                "allocatedCpu": {
                    "format": "int64",
                    "description": "The amount of CPUs currently allocated.",
                    "type": "integer"
                },
                "storageLimitGB": {
                    "format": "int64",
                    "description": "Defines an upper limit on storage that can be requested from a cloud zone which is part of this project. Default is 0 (unlimited storage). Please note that this feature is supported only for vSphere cloud zones. Not valid for other cloud zone types.",
                    "type": "integer",
                    "example": 20
                },
                "allocatedStorageGB": {
                    "format": "double",
                    "description": "The amount of storage currently allocated.",
                    "type": "number"
                },
                "allocatedInstancesCount": {
                    "format": "int64",
                    "description": "The number of resource instances currently allocated",
                    "type": "integer"
                },
                "cpuLimit": {
                    "format": "int64",
                    "description": "The maximum amount of cpus that can be used by this cloud zone. Default is 0 (unlimited cpu).",
                    "type": "integer",
                    "example": 2048
                },
                "memoryLimitMB": {
                    "format": "int64",
                    "description": "The maximum amount of memory that can be used by this cloud zone. Default is 0 (unlimited memory).",
                    "type": "integer",
                    "example": 2048
                },
                "allocatedMemoryMB": {
                    "format": "int64",
                    "description": "The amount of memory currently allocated.",
                    "type": "integer"
                },
                "zoneId": {
                    "description": "The Cloud Zone Id",
                    "type": "string",
                    "example": "77ee1"
                },
                "maxNumberInstances": {
                    "format": "int64",
                    "description": "The maximum number of instances that can be provisioned in this cloud zone. Default is 0 (unlimited instances).",
                    "type": "integer",
                    "example": 50
                },
                "priority": {
                    "format": "int32",
                    "description": "The priority of this zone in the current project. Lower numbers mean higher priority. Default is 0 (highest)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "AzureStorageProfile": {
            "description": "Defines a structure that holds list of storage policies defined for Azure for a specific region.**HATEOAS** links:<br>**storage-account** - FabricAzureStorageAccount - Storage account for the profile.<br>**region** - Region - Region for the profile.<br>**self** - AzureStorageProfile - Self link to this Azure storage profile.",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile should support encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "uswest"
                },
                "cloudAccountId": {
                    "description": "Id of the cloud account this storage profile belongs to.",
                    "type": "string",
                    "example": "[9e49]"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "dataDiskCaching": {
                    "description": "Indicates the caching mechanism for additional disk. ",
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile contains default storage properties.",
                    "type": "boolean",
                    "example": false
                },
                "diskType": {
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.",
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS"
                },
                "osDiskCaching": {
                    "description": "Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write.",
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite"
                },
                "diskEncryptionSetId": {
                    "description": "Indicates the id of disk encryption set. ",
                    "type": "string",
                    "example": "/subscriptions/b8ef63/resourceGroups/DiskEncryptionSets/providers/Microsoft.Compute/diskEncryptionSets/MyDES"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountNsxV": {
            "description": "State object representing an Nsx-V cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**self** - CloudAccountNsxV - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "hostName": {
                    "description": "Host name for the Nsx-V cloud account",
                    "type": "string",
                    "example": "nsxv.vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "StorageProfileGcpResult": {
            "description": "State object representing a query result of Gcp storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GcpStorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountNsxT": {
            "description": "State object representing an NSX-T cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**self** - CloudAccountNsxT - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "hostName": {
                    "description": "Host name for the NSX-T cloud account",
                    "type": "string",
                    "example": "nsxt.vmware.com"
                },
                "managerMode": {
                    "description": "Indicates whether NSX-T cloud account was created in Manager (legacy) mode.",
                    "type": "boolean",
                    "example": true
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "isGlobalManager": {
                    "description": "Indicates whether this is an NSX-T Global Manager cloud account. NSX-T global manager cloud account can be associated with NSX-T local manager cloud accounts. It cannot be associated with vSphere cloud accounts. Default value: false.",
                    "type": "boolean",
                    "example": true
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "ProjectSpecification": {
            "description": "Represents a specification for a project.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "viewers": {
                    "description": "List of viewer users associated with the project. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[{ \"email\":\"viewer@vmware.com\" }]"
                },
                "machineNamingTemplate": {
                    "description": "The naming template to be used for machines provisioned in this project",
                    "type": "string",
                    "example": "${project.name}-test-${####}"
                },
                "customProperties": {
                    "description": "The project custom properties which are added to all requests in this project",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "sharedResources": {
                    "description": "Specifies whether the resources in this projects are shared or not. If not set default will be used.",
                    "type": "boolean",
                    "example": true
                },
                "operationTimeout": {
                    "format": "int64",
                    "description": "The timeout that should be used for Blueprint operations and Provisioning tasks. The timeout is in seconds",
                    "type": "integer",
                    "example": 30
                },
                "members": {
                    "description": "List of member users associated with the project. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[{ \"email\":\"member@vmware.com\" }]"
                },
                "zoneAssignmentConfigurations": {
                    "description": "List of configurations for zone assignment to a project.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ZoneAssignmentSpecification"
                    }
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "placementPolicy": {
                    "description": "Placement policy for the project. Determines how a zone will be selected for provisioning. DEFAULT or SPREAD.",
                    "type": "string",
                    "example": "DEFAULT"
                },
                "constraints": {
                    "description": "List of storage, network and extensibility constraints to be applied when provisioning through this project.",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Constraint"
                        }
                    },
                    "type": "object",
                    "example": "{\"network\":[{\"mandatory\": \"true\", \"expression\": \"env:dev\"}],\"storage\":[{\"mandatory\": \"false\", \"expression\": \"gold\"}],\"extensibility\":[{\"mandatory\": \"false\", \"expression\": \"key:value\"}]}"
                },
                "administrators": {
                    "description": "List of administrator users associated with the project. Only administrators can manage project's configuration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[{ \"email\":\"administrator@vmware.com\" }]"
                }
            }
        },
        "UpdateMachineSpecification": {
            "type": "object",
            "properties": {
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the machine. Internal custom properties (for example, prefixed with: \"__\") are discarded.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "Describes machine within the scope of your organization and is not propagated to the cloud",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                }
            }
        },
        "ComputeGatewaySpecification": {
            "description": "Compute Gateway Configuration. Applies to NSX cloud accounts only.",
            "type": "object",
            "required": [
                "name",
                "natRules",
                "networks",
                "projectId"
            ],
            "properties": {
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend this resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "deploymentId": {
                    "description": "The id of the deployment that is associated with this resource",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "networks": {
                    "description": "List of networks",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "natRules": {
                    "description": "List of NAT Rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NatRule"
                    }
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                }
            }
        },
        "ConfigurationProperty": {
            "description": "A representation of a configuration property.",
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "value": {
                    "description": "The value of the property.",
                    "type": "string"
                },
                "key": {
                    "description": "The key of the property.",
                    "type": "string",
                    "enum": [
                        "SESSION_TIMEOUT_DURATION_MINUTES",
                        "RELEASE_IPADDRESS_PERIOD_MINUTES",
                        "NSXT_RETRY_DURATION_MINUTES"
                    ]
                }
            }
        },
        "FabricVsphereStoragePolicy": {
            "description": "Represents a structure that holds details of vSphere storage policy.**HATEOAS** links:<br>**self** - FabricVsphereStoragePolicy - Self link to this storage policy",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "Id of datacenter in which the storage policy is present.",
                    "type": "string",
                    "example": "Datacenter:datacenter-2"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this storage policy.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmencryption\", \"value\": \" \" } ]"
                }
            }
        },
        "CustomNamingCounter": {
            "description": "A representation of a Counter.",
            "type": "object",
            "required": [
                "cnResourceType",
                "currentCounter",
                "projectId"
            ],
            "properties": {
                "currentCounter": {
                    "format": "int64",
                    "description": "The current counter of custom name",
                    "type": "integer"
                },
                "cnResourceType": {
                    "description": "The resource type of custom name",
                    "type": "string",
                    "enum": [
                        "COMPUTE",
                        "NETWORK",
                        "COMPUTE_STORAGE",
                        "LOAD_BALANCER",
                        "RESOURCE_GROUP",
                        "GATEWAY",
                        "NAT",
                        "SECURITY_GROUP"
                    ]
                },
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "projectId": {
                    "description": "The project id to which the counter is mapped",
                    "type": "string"
                }
            }
        },
        "FlavorProfile": {
            "description": "Represents a structure that holds flavor mappings defined for the corresponding cloud end-point region.<br>**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - FlavorProfile - Self link to this flavor profile",
            "type": "object",
            "required": [
                "_links",
                "flavorMappings",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "flavorMappings": {
                    "description": "A list of the flavor mappings defined for the corresponding cloud end-point region",
                    "$ref": "#/definitions/FlavorMapping"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "cloudAccountId": {
                    "description": "Id of the cloud account this flavor profile belongs to.",
                    "type": "string",
                    "example": "[9e49]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "UpdateFlavorProfileSpecification": {
            "type": "object",
            "required": [
                "flavorMapping"
            ],
            "properties": {
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "flavorMapping": {
                    "description": "Map between global fabric flavor keys <String> and fabric flavor descriptions <FabricFlavorDescription> ",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricFlavorDescription"
                    },
                    "type": "object",
                    "example": "{ \"small\": { \"name\": \"t2.small\" }, \"medium\": { \"name\": \"t2.medium\"}}, \"vSphere_small\": { \"cpuCount\": \"2\", \"memoryInMB\": \"2048\"}, \"vSphere_medium\": { \"cpuCount\": \"4\", \"memoryInMB\": \"4096\"}}"
                }
            }
        },
        "IntegrationSpecification": {
            "description": "Specification for creating a generic integration.<br><br>Integration represents external system added to vRealize Automation and is identified by a type and specific properties.",
            "type": "object",
            "required": [
                "integrationProperties",
                "integrationType",
                "name"
            ],
            "properties": {
                "privateKey": {
                    "description": "Secret access key or password to be used to authenticate with the integration",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "associatedCloudAccountIds": {
                    "description": "Cloud accounts to associate with this integration",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "integrationType": {
                    "description": "Integration type",
                    "type": "string",
                    "example": "Active directory, Ansible, IPAM, vRO, GitHub"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the Integration.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"sampleadapterProjectId\" : \"projectId\" }"
                },
                "integrationProperties": {
                    "description": "Integration specific properties supplied in as name value pairs",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"supportPublicImages\": \"true\", \"acceptSelfSignedCertificate\": \"true\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for an integration.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "privateKeyId": {
                    "description": "Access key id or username to be used to authenticate with the integration",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Integration",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "Network": {
            "description": "The network object is an opaque reference to a logical network that network interfaces are attached to.<br>\nBased on settings specified by your cloud administrator, it may be a reference to an existing network, or be backed by an on-demand network created for isolation, or a security group that will be attached to machines as part of provisioning.<br>\nNetworks are a limited resource, when it is not needed it should be deleted.<br>**HATEOAS** links:<br>**self** - Network - Self link to this network",
            "type": "object",
            "required": [
                "_links",
                "cidr",
                "externalRegionId",
                "externalZoneId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this resource belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "provisioningStatus": {
                    "description": "The provisioning status of the resource. One of three provisioning statuses.\n`PROVISIONING`: The resource is being provisioned.\n`READY`: The resource is already provisioned.\n`SUSPEND`: The resource is being destroyed.\n",
                    "type": "string"
                },
                "deploymentId": {
                    "description": "Deployment id that is associated with this resource.",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "cidr": {
                    "description": "IPv4 address range of the network in CIDR format",
                    "type": "string",
                    "example": "10.10.0.0/16"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this resource belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CertificateInfo": {
            "description": "Certificate for a cloud account.",
            "type": "object",
            "required": [
                "certificate",
                "properties"
            ],
            "properties": {
                "certificateErrorDetail": {
                    "description": "Details about the certificate.",
                    "type": "string",
                    "enum": [
                        "UNTRUSTED_CERTIFICATE",
                        "EXPIRED_CERTIFICATE",
                        "NOT_YET_VALID_CERTIFICATE",
                        "KEYSTORE_TAMPERED_OR_PASSWORD_INCORRECT"
                    ],
                    "example": "UNTRUSTED_CERTIFICATE"
                },
                "certificate": {
                    "description": "The certificate in string format.",
                    "type": "string",
                    "example": "PEM for X509Certificate"
                },
                "properties": {
                    "description": "Certificate related properties which may provide additional information about the given certificate.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            }
        },
        "SaltConfiguration": {
            "description": "Represents salt configuration settings that has to be applied on the machine.\nTo successfully apply the configurations, remoteAccess property is mandatory.The supported remoteAccess authentication types are usernamePassword and generatedPublicPrivateKey",
            "type": "object",
            "properties": {
                "installerFileName": {
                    "description": "Salt minion installer file name on the master.\nThis property is currently not being used by any SaltStack operation.",
                    "type": "string"
                },
                "masterId": {
                    "description": "Salt master id to which the Salt minion will be connected to.",
                    "type": "string"
                },
                "variables": {
                    "description": "Parameters required by the state file to run on the deployed minion.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "saltEnvironment": {
                    "description": "Salt environment to use when running state files.",
                    "type": "string"
                },
                "pillarEnvironment": {
                    "description": "Pillar environment to use when running state files.\nRefer: https://docs.saltproject.io/en/latest/ref/modules/all/salt.modules.state.html",
                    "type": "string"
                },
                "additionalAuthParams": {
                    "description": "Additional auth params that can be passed in for provisioning the salt minion.\nRefer: https://docs.saltproject.io/en/master/topics/cloud/profiles.html",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "stateFiles": {
                    "description": "List of state files to run on the deployed minion.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalMinionParams": {
                    "description": "Additional configuration parameters for the salt minion, to be passed in as dictionary.\nRefer: https://docs.saltproject.io/en/latest/ref/configuration/minion.html",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "minionId": {
                    "description": "Salt minion ID to be assigned to the deployed minion.",
                    "type": "string"
                }
            }
        },
        "CloudAccountGcpSpecification": {
            "description": "Specification for a GCP cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "clientEmail",
                "name",
                "privateKey",
                "privateKeyId",
                "projectId",
                "regions"
            ],
            "properties": {
                "privateKey": {
                    "description": "GCP Private key",
                    "type": "string",
                    "example": "-----BEGIN PRIVATE KEY-----\nMIICXgIHAASBgSDHikastc8+I81zCg/qWW8dMr8mqvXQ3qbPAmu0RjxoZVI47tvs\nkYlFAXOf0sPrhO2nUuooJngnHV0639iTTEYG1vckNaW2R6U5QTdQ5Rq5u+uV3pMk\n7w7Vs4n3urQ4jnqt7rTXbC1DNa/PFeAZatbf7ffBBy0IGO0zc128IshYcwIDAQAB\nAoGBALTNl2JxTvq4SDW/3VH0fZkQXWH1MM10oeMbB2qO5beWb11FGaOO77nGKfWc\nbYgfp5Ogrql2yhBvLAXnxH8bcqqwORtFhlyV68U1y4R+8WxDNh0aevxH8hRS/1X5\n963DJm1JlU0E+vStiktN0tC3ebH5hE+1OxbIHSZ+WOWLYX7JAkEA5uigRgKp8ScG\nauUijvdOLZIhHWq9y5Wz+nOHUuDw8P7wOTKU34QJAoWEe771p9Pf/GTA/kr0BQnP\nQvWUDxGzJwJBAN05C6krwPeryFKrKtjOGJIbiIoY72wRnoNcdEEs3HDRhf48YWFo\nriRbZylzzzNFy/gmzT6XJQTfktGqq+FZD9UCQGIJaGrxHJgfmpDuAhMzGsUsYtTr\niRox0D1Iqa7dhE693t5aBG010OF6MLqdZA1CXrn5SRtuVVaCSLZEL/2J5UcCQQDA\nd3MXucNnN4NPuS/L9HMYJWD7lPoosaORcgyK77bSSNgk+u9WSjbH1uYIAIPSffUZ\nbti+jc2dUg5wb+aeZlgJAkEAurrpmpqj5vg087ZngKfFGR5rozDiTsK5DceTV97K\na1Y+Nzl+XWTxDBWk4YPh2ZlKv402hZEfWBYxUDn5ZkH/bw==\n-----END PRIVATE KEY-----\n"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"europe-west2\",\"externalRegionId\": \"europe-west2\"}]"
                },
                "clientEmail": {
                    "description": "GCP Client email",
                    "type": "string",
                    "example": "321743978432-compute@developer.gserviceaccount.com"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "projectId": {
                    "description": "GCP Project ID",
                    "type": "string",
                    "example": "example-gcp-project"
                },
                "privateKeyId": {
                    "description": "GCP Private key ID",
                    "type": "string",
                    "example": "027f73d50a19452eedf5775a9b42c5083678abdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "FabricVsphereDatastoreResult": {
            "description": "State object representing a query result of vSphere datastores.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricVsphereDatastore"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "LoadBalancerSpecification": {
            "description": "Load balancer configuration.",
            "type": "object",
            "required": [
                "name",
                "nics",
                "projectId",
                "routes"
            ],
            "properties": {
                "routes": {
                    "description": "The load balancer route configuration regarding ports and protocols.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RouteConfiguration"
                    }
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend this resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "deploymentId": {
                    "description": "The id of the deployment that is associated with this resource",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "targetLinks": {
                    "description": "A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"/iaas/machines/eac3d\" ]"
                },
                "internetFacing": {
                    "description": "An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer.",
                    "type": "boolean"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "nics": {
                    "description": "A set of network interface specifications for this load balancer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceSpecification"
                    }
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "type": {
                    "description": "Define the type/variant of load balancer numbers e.g.for NSX the number virtual servers and pool members load balancer can host",
                    "type": "string",
                    "example": "SMALL, MEDIUM, LARGE"
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                },
                "loggingLevel": {
                    "description": "Defines logging level for collecting load balancer traffic logs.",
                    "type": "string",
                    "example": "ERROR, WARNING, INFO, DEBUG"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                }
            }
        },
        "ProjectResourceMetadataSpecification": {
            "description": "Specification for resource metadata associated with a project",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A list of keys and optional values to be applied to compute resources provisioned in a project",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "FabricComputeResult": {
            "description": "State object representing a query result of cloud zone's computes.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricCompute"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CertificateInfoSpecification": {
            "description": "Specification for certificate for a cloud account.",
            "type": "object",
            "required": [
                "certificate"
            ],
            "properties": {
                "certificate": {
                    "description": "The certificate in string format.",
                    "type": "string",
                    "example": "PEM for X509Certificate"
                }
            }
        },
        "CloudAccountVsphereSpecification": {
            "description": "Specification for a vSphere cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "hostName",
                "name",
                "password",
                "regions",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the vSphere endpoint",
                    "type": "string",
                    "example": "vc.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere",
                    "type": "boolean",
                    "example": false
                },
                "associatedCloudAccountIds": {
                    "description": "NSX-V or NSX-T account to associate with this vSphere cloud account. vSphere cloud account can be a single NSX-V cloud account or a single NSX-T cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"Datacenter:datacenter-3\",\"externalRegionId\": \"Datacenter:datacenter-3\"}]"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "TagResult": {
            "description": "State object representing a query result of tags.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Snapshot": {
            "description": "Represents a machine snapshot",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "isCurrent": {
                    "description": "Indicates if the snapshot is the current snapshot for machine ",
                    "type": "boolean",
                    "example": false
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FlavorResult": {
            "description": "State object representing a query result of falvor mappings.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FlavorMapping"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FabricFlavorDescription": {
            "description": "Represents fabric flavor instance type description. Used when creating flavor profiles.",
            "type": "object",
            "properties": {
                "memoryInMB": {
                    "format": "int64",
                    "description": "Total amount of memory (in megabytes). Mandatory for private clouds such as vSphere. Not populated when inapplicable.",
                    "type": "integer",
                    "example": 4096
                },
                "name": {
                    "description": "The value of the instance type in the corresponding cloud. Valid and mandatory for public clouds",
                    "type": "string",
                    "example": "t2.small, t2.medium"
                },
                "id": {
                    "description": "The id of the instance type in the corresponding cloud.",
                    "type": "string",
                    "example": "901004, 901008"
                },
                "cpuCount": {
                    "format": "int32",
                    "description": "Number of CPU cores. Mandatory for private clouds such as vSphere. Not populated when inapplicable.",
                    "type": "integer",
                    "example": 4
                }
            }
        },
        "ChangeSecurityGroupSpecification": {
            "description": "Specification for a second day change security groups operation for a vsphere machine",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "networkInterfaceSpecifications": {
                    "description": "A set of network interface controller specifications for this machine. If not specified, then no reconfiguration will be performed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceSpecification"
                    }
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountSpecification": {
            "description": "Specification for a generic cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "cloudAccountProperties",
                "cloudAccountType",
                "name",
                "privateKey",
                "privateKeyId",
                "regions"
            ],
            "properties": {
                "cloudAccountProperties": {
                    "description": "Cloud Account specific properties supplied in as name value pairs",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"supportPublicImages\": \"true\", \"acceptSelfSignedCertificate\": \"true\" }"
                },
                "privateKey": {
                    "description": "Secret access key or password to be used to authenticate with the cloud account",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "associatedCloudAccountIds": {
                    "description": "Cloud accounts to associate with this cloud account",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the Cloud Account.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"sampleadapterProjectId\" : \"projectId\" }"
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. \n'regionInfos' is a required parameter for AWS, AZURE, GCP, VSPHERE, VMC, VCF cloud account types.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"East Asia\",\"externalRegionId\": \"eastasia\"}]"
                },
                "cloudAccountType": {
                    "description": "Cloud account type",
                    "type": "string",
                    "example": "vsphere, aws, azure, nsxv, nsxt"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "privateKeyId": {
                    "description": "Access key id or username to be used to authenticate with the cloud account",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "StorageProfileResult": {
            "description": "State object representing a query result of storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Rule": {
            "description": "A rule used in a security group.",
            "type": "object",
            "required": [
                "access",
                "direction",
                "ipRangeCidr",
                "ports"
            ],
            "properties": {
                "protocol": {
                    "description": "Protocol the security rule applies to.",
                    "type": "string",
                    "example": "ANY, TCP, UDP"
                },
                "access": {
                    "description": "Type of access (Allow, Deny or Drop) for the security rule. Allow is default. Traffic that does not match any rules will be denied.",
                    "type": "string",
                    "enum": [
                        "Allow",
                        "Deny",
                        "Drop"
                    ],
                    "example": "Allow"
                },
                "service": {
                    "description": "Service defined by the provider (such as: SSH, HTTPS). Either service or protocol have to be specified.",
                    "type": "string",
                    "example": "HTTPS, SSH"
                },
                "ipRangeCidr": {
                    "description": "IP address(es) in CIDR format which the security rule applies to.",
                    "type": "string",
                    "example": "66.170.99.2/32"
                },
                "name": {
                    "description": "Name of security rule.",
                    "type": "string",
                    "example": "5756f7e2"
                },
                "ports": {
                    "description": "Ports the security rule applies to.",
                    "type": "string",
                    "example": "443, 1-655535"
                },
                "direction": {
                    "description": "Direction of the security rule (inbound or outboud). ",
                    "type": "string",
                    "enum": [
                        "Inbound",
                        "Outbound"
                    ],
                    "example": "Outbound"
                }
            }
        },
        "StorageProfileAwsSpecification": {
            "description": "Represents a specification of AWS storage profile.",
            "type": "object",
            "required": [
                "deviceType",
                "name",
                "regionId"
            ],
            "properties": {
                "deviceType": {
                    "description": "Indicates the type of storage.",
                    "type": "string",
                    "example": "ebs / instance-store"
                },
                "volumeType": {
                    "description": "Indicates the type of volume associated with type of storage.",
                    "type": "string",
                    "example": "gp2 / io1 / sc1 / st1 / standard"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "regionId": {
                    "description": "A link to the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "iops": {
                    "description": "Indicates maximum I/O operations per second in range(1-20,000).",
                    "type": "string",
                    "example": "2000"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile is default or not.",
                    "type": "boolean",
                    "example": true
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                }
            }
        },
        "ComputeNat": {
            "description": "The compute nat object is used to configure NAT rules on the Edge Gateway or Tier-1 logical router in NSX to enable port forwarding.<br>**HATEOAS** links:<br>**self** - Nat - Self link to this nat",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "gateway",
                "id",
                "natRules"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this resource belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "provisioningStatus": {
                    "description": "The provisioning status of the resource. One of three provisioning statuses.\n`PROVISIONING`: The resource is being provisioned.\n`READY`: The resource is already provisioned.\n`SUSPEND`: The resource is being destroyed.\n",
                    "type": "string"
                },
                "deploymentId": {
                    "description": "Deployment id that is associated with this resource.",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "natRules": {
                    "description": "A list of NAT rule(s) to be created on the NSX network",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NatRule"
                    }
                },
                "projectId": {
                    "description": "The id of the project this resource belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "gateway": {
                    "description": "The compute gateway to which the compute nat is attached",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "NetworkDomain": {
            "description": "The network domain object is the parent of related subnets that are configured together. Subnets within a domain must have non-overlapping address spaces.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this network domain exists.<br>**self** - NetworkDomain - Self link to this network domain",
            "type": "object",
            "required": [
                "_links",
                "cidr",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The external regionId of the network domain.",
                    "type": "string",
                    "example": "ap-northeast-2"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this network domain.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_vpc\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"awsGatewayID\" : \"igw-f9539691\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "cidr": {
                    "description": "IPv4 address range of the network domain in CIDR format",
                    "type": "string",
                    "example": "10.0.0.0/8"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "SnapshotSpecification": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "snapshotMemory": {
                    "description": "Captures the full state of a running virtual machine, including the memory.",
                    "type": "boolean"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the snapshot.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "ExternalNetworkIPRange": {
            "description": "State object representing an external IP address range for a Fabric Network.<br>**HATEOAS** links:<br>**region** - Region - Region for the network.<br>**self** - NetworkIPRange - Self link to this IP address range",
            "type": "object",
            "required": [
                "_links",
                "endIPAddress",
                "id",
                "startIPAddress",
                "subnetPrefixLength"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "subnetPrefixLength": {
                    "format": "int32",
                    "description": "Subnet prefix length (synonymous with \"netmask\")",
                    "type": "integer"
                },
                "startIPAddress": {
                    "description": "Start IP address of the range.",
                    "type": "string"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "endIPAddress": {
                    "description": "End IP address of the range.",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ipv6-range\", \"value\": \"true\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "addressSpaceId": {
                    "description": "Address space that the range belongs to",
                    "type": "string"
                },
                "ipVersion": {
                    "description": "IP address version: IPv4 or IPv6. Default: IPv4.",
                    "type": "string",
                    "enum": [
                        "IPv4",
                        "IPv6"
                    ]
                },
                "dnsServerAddresses": {
                    "description": "DNS IP addresses of the range.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain": {
                    "description": "DNS domain of the range.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "gatewayAddress": {
                    "description": "The gateway address of the range",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "dnsSearchDomains": {
                    "description": "DNS domain search (in order)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AwsStorageProfile": {
            "description": "Defines a structure that holds list of storage policies defined for AWS for a specific region.**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - AwsStorageProfile - Self link to this aws Storage Profile",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "deviceType": {
                    "description": "Indicates the type of storage device.",
                    "type": "string",
                    "example": "ebs / instance-store"
                },
                "volumeType": {
                    "description": "Indicates the type of volume associated with type of storage device.",
                    "type": "string",
                    "example": "gp2 / io1 / sc1 / st1 / standard"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "cloudAccountId": {
                    "description": "Id of the cloud account this storage profile belongs to.",
                    "type": "string",
                    "example": "[9e49]"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "iops": {
                    "description": "Indicates maximum I/O operations per second in range(1-20,000).",
                    "type": "string",
                    "example": "2000"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates whether this storage profile is default or not..",
                    "type": "boolean",
                    "example": false
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricAzureStorageAccountResult": {
            "description": "State object representing a query result of Azure storage accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricAzureStorageAccount"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountVmcRegionEnumerationSpecification": {
            "description": "Specification for a region enumeration of vmc cloud account.",
            "type": "object",
            "properties": {
                "hostName": {
                    "description": "Enter the IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.  Either provide hostName or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "vc1.vmware.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere",
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account. Either provide password or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "apiKey": {
                    "description": "VMC API access key. Either provide apiKey or provide a cloudAccountId of an existing account.",
                    "type": "string"
                },
                "dcId": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "nsxHostName": {
                    "description": "The IP address of the NSX Manager server in the specified SDDC / FQDN.Either provide nsxHostName or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "nsxManager.sddc-52-12-8-145.vmwaretest.com"
                },
                "sddcId": {
                    "description": "Identifier of the on-premise SDDC to be used by this cloud account. Note that NSX-V SDDCs are not supported. Either provide sddcId or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "CMBU-PRD-NSXT-M8GA-090319"
                },
                "cloudAccountId": {
                    "description": "Existing cloud account id. Either provide existing cloud account Id, or apiKey, sddcId, username, password, hostName, nsxHostName.",
                    "type": "string",
                    "example": "b8b7a918-342e-4a53-a3b0-b935da0fe601"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "username": {
                    "description": "vCenter user name for the specified SDDC.The specified user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.Either provide username or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "cspHostName": {
                    "description": "The host name of the CSP service.",
                    "type": "string",
                    "example": "console-stg.cloud.vmware.com"
                }
            }
        },
        "NetworkDomainResult": {
            "description": "State object representing a query result of network domains.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkDomain"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FabricNetworkResult": {
            "description": "State object representing a query result of fabric networks.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricNetwork"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "SecurityGroupSpecification": {
            "description": "Specification for a cloud security group",
            "type": "object",
            "required": [
                "name",
                "projectId"
            ],
            "properties": {
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend this resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "deploymentId": {
                    "description": "The id of the deployment that is associated with this resource",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "rules": {
                    "description": "List of security rules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"group\", \"value\": \"ssh\" } ]"
                }
            }
        },
        "Href": {
            "type": "object",
            "properties": {
                "hrefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "NetworkResult": {
            "description": "State object representing a query result of networks.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Network"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "UpdateCloudAccountAzureSpecification": {
            "description": "Specification for a Azure cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "clientApplicationId",
                "clientApplicationSecretKey",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"East Asia\",\"externalRegionId\": \"eastasia\"}]"
                },
                "clientApplicationId": {
                    "description": "Azure Client Application ID",
                    "type": "string",
                    "example": "3287dd6e-76d8-41b7-9856-2584969e7739"
                },
                "clientApplicationSecretKey": {
                    "description": "Azure Client Application Secret Key",
                    "type": "string",
                    "example": "GDfdasDasdASFas321das32cas2x3dsXCSA76xdcasg="
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "tenantId": {
                    "description": "Azure Tenant ID",
                    "type": "string",
                    "example": "9a13d920-4691-4e2d-b5d5-9c4c1279bc9a"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "subscriptionId": {
                    "description": "Azure Subscribtion ID",
                    "type": "string",
                    "example": "064865b2-e914-4717-b415-8806d17948f7"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "AuthResponse": {
            "description": "Entity that holds auth token details.",
            "type": "object",
            "required": [
                "token",
                "tokenType"
            ],
            "properties": {
                "tokenType": {
                    "description": "Type of the token.",
                    "type": "string",
                    "example": "Bearer"
                },
                "token": {
                    "description": "Base64 encoded auth token.",
                    "type": "string"
                }
            }
        },
        "CloudAccountNsxTSpecification": {
            "description": "Specification for an NSX-T cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "dcid",
                "hostName",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the NSX-T endpoint",
                    "type": "string",
                    "example": "nsxt.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting.",
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "associatedCloudAccountIds": {
                    "description": "vSphere cloud accounts associated with this NSX-T cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release and hence the data collector Id is optional for vRA on-prem.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "managerMode": {
                    "description": "Create NSX-T cloud account in Manager (legacy) mode. When set to true, NSX-T cloud account in created in Manager mode. Mode cannot be changed after cloud account is created. Default value is false.",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "isGlobalManager": {
                    "description": "Indicates whether this is an NSX-T Global Manager cloud account. NSX-T Global Manager can only be associated with NSX-T cloud accounts. Default value: false.",
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "CnTemplateCounterVo": {
            "type": "object",
            "properties": {
                "currentCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "cnResourceType": {
                    "type": "string",
                    "enum": [
                        "COMPUTE",
                        "NETWORK",
                        "COMPUTE_STORAGE",
                        "LOAD_BALANCER",
                        "RESOURCE_GROUP",
                        "GATEWAY",
                        "NAT",
                        "SECURITY_GROUP"
                    ]
                },
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                }
            }
        },
        "ReconfigureComputeNatSpecification": {
            "description": "Specification for a Compute Nat Reconfigure operation for NAT rules",
            "type": "object",
            "required": [
                "natRules"
            ],
            "properties": {
                "natRules": {
                    "description": "List of NAT rules to be applied on this Compute Nat.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NatRule"
                    }
                }
            }
        },
        "NetworkIPRangeResult": {
            "description": "State object representing a query result of network IP range.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkIPRange"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Tag": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "value": {
                    "description": "Tag's value.",
                    "type": "string"
                },
                "key": {
                    "description": "Tag's key.",
                    "type": "string"
                }
            }
        },
        "CloudAccountRegions": {
            "description": "State object representing cloud account region.<br><br>**externalRegions** - array[RegionSpecification] - Set of regions that can be enabled for this cloud account.<br>**externalRegionIds** - array[String] - Set of ids of regions that can be enabled for this cloud account.<br>",
            "type": "object",
            "properties": {
                "externalRegions": {
                    "description": "A set of regions that can be enabled for this cloud account.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    }
                }
            }
        },
        "UpdateNetworkInterfaceSpecification": {
            "type": "object",
            "properties": {
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the machine. Internal custom properties (for example, prefixed with: \"__\") can not be updated.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "address": {
                    "description": "Set IPv4 address for the machine network interface. The change will not propagate to cloud endpoint for provisioned machines.",
                    "type": "string"
                },
                "name": {
                    "description": "Network interface name used during machine network interface provisioning. This property only takes effect if it is set before machine provisioning starts. The change will not propagate to cloud endpoint for provisioned machines.",
                    "type": "string"
                },
                "description": {
                    "description": "Describes the network interface of the machine within the scope of your organization and is not propagated to the cloud",
                    "type": "string"
                }
            }
        },
        "RouteConfiguration": {
            "description": "Load balancer route configuration.",
            "type": "object",
            "required": [
                "memberPort",
                "memberProtocol",
                "port",
                "protocol"
            ],
            "properties": {
                "protocol": {
                    "description": "The protocol of the incoming load balancer requests.",
                    "type": "string",
                    "example": "TCP, UDP"
                },
                "port": {
                    "description": "Port which the load balancer is listening to.",
                    "type": "string",
                    "example": "80"
                },
                "memberPort": {
                    "description": "Member port where the traffic is routed to.",
                    "type": "string",
                    "example": "80"
                },
                "memberProtocol": {
                    "description": "The protocol of the member traffic.",
                    "type": "string",
                    "example": "TCP, UDP"
                },
                "healthCheckConfiguration": {
                    "description": "Health check configuration for this route configuration.",
                    "$ref": "#/definitions/HealthCheckConfiguration"
                },
                "algorithmParameters": {
                    "description": "Parameters need for load balancing algorithm.Use newline to separate multiple parameters.",
                    "type": "string",
                    "example": "uriLength=10\nurlParam=section"
                },
                "algorithm": {
                    "description": "Algorithm employed for load balancing.",
                    "type": "string",
                    "example": "ROUND_ROBIN"
                }
            }
        },
        "ImageProfileSpecification": {
            "description": "Specification for image profile. ",
            "type": "object",
            "required": [
                "imageMapping",
                "name",
                "regionId"
            ],
            "properties": {
                "regionId": {
                    "description": "The id of the region for which this profile is created",
                    "type": "string",
                    "example": "9e49"
                },
                "imageMapping": {
                    "description": "Image mapping defined for the corresponding region.",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricImageDescription"
                    },
                    "type": "object",
                    "example": "{ \"ubuntu\": { \"id\": \"9e49\", \"name\": \"ami-ubuntu-16.04-1.9.1-00-1516139717\"}, \"centos\": { \"id\": \"9e50\", \"name\": \"ami-centos-7-1.13.0-00-1543963388\"}}"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                }
            }
        },
        "MachineBootConfig": {
            "description": "Machine boot config that will be passed to the instance that can be used to perform common automated configuration tasks and even run scripts after the instance starts.",
            "type": "object",
            "properties": {
                "content": {
                    "description": "A valid cloud config data in json-escaped yaml syntax",
                    "type": "string",
                    "example": "#cloud-config\nrepo_update: true\nrepo_upgrade: all\n\npackages:\n - mysql-server\n\nruncmd:\n - sed -e '/bind-address/ s/^#*/#/' -i /etc/mysql/mysql.conf.d/mysqld.cnf\n - service mysql restart\n - mysql -e \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'mysqlpassword';\"\n - mysql -e \"FLUSH PRIVILEGES;\"\n"
                }
            }
        },
        "DiskEncryptionSet": {
            "type": "object",
            "properties": {
                "regionId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "vault": {
                    "type": "string"
                }
            }
        },
        "CloudAccountGcpRegionEnumerationSpecification": {
            "description": "Specification for a region enumeration of gcp cloud account.",
            "type": "object",
            "properties": {
                "privateKey": {
                    "description": "GCP Private key. Either provide privateKey or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "-----BEGIN PRIVATE KEY-----\nMIICXgIHAASBgSDHikastc8+I81zCg/qWW8dMr8mqvXQ3qbPAmu0RjxoZVI47tvs\nkYlFAXOf0sPrhO2nUuooJngnHV0639iTTEYG1vckNaW2R6U5QTdQ5Rq5u+uV3pMk\n7w7Vs4n3urQ4jnqt7rTXbC1DNa/PFeAZatbf7ffBBy0IGO0zc128IshYcwIDAQAB\nAoGBALTNl2JxTvq4SDW/3VH0fZkQXWH1MM10oeMbB2qO5beWb11FGaOO77nGKfWc\nbYgfp5Ogrql2yhBvLAXnxH8bcqqwORtFhlyV68U1y4R+8WxDNh0aevxH8hRS/1X5\n963DJm1JlU0E+vStiktN0tC3ebH5hE+1OxbIHSZ+WOWLYX7JAkEA5uigRgKp8ScG\nauUijvdOLZIhHWq9y5Wz+nOHUuDw8P7wOTKU34QJAoWEe771p9Pf/GTA/kr0BQnP\nQvWUDxGzJwJBAN05C6krwPeryFKrKtjOGJIbiIoY72wRnoNcdEEs3HDRhf48YWFo\nriRbZylzzzNFy/gmzT6XJQTfktGqq+FZD9UCQGIJaGrxHJgfmpDuAhMzGsUsYtTr\niRox0D1Iqa7dhE693t5aBG010OF6MLqdZA1CXrn5SRtuVVaCSLZEL/2J5UcCQQDA\nd3MXucNnN4NPuS/L9HMYJWD7lPoosaORcgyK77bSSNgk+u9WSjbH1uYIAIPSffUZ\nbti+jc2dUg5wb+aeZlgJAkEAurrpmpqj5vg087ZngKfFGR5rozDiTsK5DceTV97K\na1Y+Nzl+XWTxDBWk4YPh2ZlKv402hZEfWBYxUDn5ZkH/bw==\n-----END PRIVATE KEY-----\n"
                },
                "clientEmail": {
                    "description": "GCP Client email. Either provide clientEmail or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "321743978432-compute@developer.gserviceaccount.com"
                },
                "cloudAccountId": {
                    "description": "Existing cloud account id. Either provide id of existing account, or cloud account credentials: projectId, privateKeyId, privateKey and clientEmail.",
                    "type": "string",
                    "example": "b8b7a918-342e-4a53-a3b0-b935da0fe601"
                },
                "projectId": {
                    "description": "GCP Project ID. Either provide projectId or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "example-gcp-project"
                },
                "privateKeyId": {
                    "description": "GCP Private key ID. Either provide privateKeyId or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "027f73d50a19452eedf5775a9b42c5083678abdf"
                }
            }
        },
        "DeprecationPolicy": {
            "type": "object",
            "properties": {
                "deprecatedAt": {
                    "description": "The date the api was deprecated in yyyy-MM-dd format (UTC). Could be empty if the api is not deprecated.",
                    "type": "string"
                },
                "description": {
                    "description": "A free text description that contains information about why this api is deprecated and how to migrate to a newer version.",
                    "type": "string"
                },
                "expiresAt": {
                    "description": "The date the api support will be dropped in yyyy-MM-dd format (UTC). The api may still be available for use after that date but this is not guaranteed.",
                    "type": "string"
                }
            }
        },
        "FlavorProfileSpecification": {
            "description": "Specification for flavor profile",
            "type": "object",
            "required": [
                "flavorMapping",
                "name",
                "regionId"
            ],
            "properties": {
                "regionId": {
                    "description": "The id of the region for which this profile is created",
                    "type": "string",
                    "example": "9e49"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "flavorMapping": {
                    "description": "Map between global fabric flavor keys <String> and fabric flavor descriptions <FabricFlavorDescription> ",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricFlavorDescription"
                    },
                    "type": "object",
                    "example": "{ \"small\": { \"name\": \"t2.small\" }, \"medium\": { \"name\": \"t2.medium\"}}, \"vSphere_small\": { \"cpuCount\": \"2\", \"memoryInMB\": \"2048\"}, \"vSphere_medium\": { \"cpuCount\": \"4\", \"memoryInMB\": \"4096\"}}"
                }
            }
        },
        "StorageProfileVsphereSpecification": {
            "description": "Represents a specification of vSphere storage profile.",
            "type": "object",
            "required": [
                "defaultItem",
                "name",
                "regionId"
            ],
            "properties": {
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "sharesLevel": {
                    "description": "Shares are specified as High, Normal, Low or Custom and these values specify share values with a 4:2:1 ratio, respectively. ",
                    "type": "string",
                    "example": "low / normal / high / custom"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "diskMode": {
                    "description": "Type of mode for the disk",
                    "type": "string",
                    "example": "undefined / independent-persistent / independent-nonpersistent"
                },
                "storagePolicyId": {
                    "description": "Id of the vSphere Storage Policy to be applied.",
                    "type": "string",
                    "example": "6b59743af31d"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "shares": {
                    "description": "A specific number of shares assigned to each virtual machine.",
                    "type": "string",
                    "example": "2000"
                },
                "provisioningType": {
                    "description": "Type of provisioning policy for the disk.",
                    "type": "string",
                    "example": "thin / thick / eagerZeroedThick"
                },
                "regionId": {
                    "description": "The Id of the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "limitIops": {
                    "description": "The upper bound for the I/O operations per second allocated for each virtual disk.",
                    "type": "string",
                    "example": "1000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile acts as a default storage profile for a disk.",
                    "type": "boolean",
                    "example": true
                },
                "diskType": {
                    "description": "Disk types are specified as \n\n \tStandard - Simple vSphere virtual disks which cannot be managed independently without an attached VM.\n\tFirst Class - Improved version of standard virtual disks, designed to be fully mananged independent storage objects. \n\nEmpty value is considered as Standard",
                    "type": "string",
                    "example": "standard / firstClass"
                },
                "datastoreId": {
                    "description": "Id of the vSphere Datastore for placing disk and VM.",
                    "type": "string",
                    "example": "08d28"
                }
            }
        },
        "CloudAccountAwsResult": {
            "description": "State object representing a query result of Aws cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountAws"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ServiceErrorResponse": {
            "type": "object",
            "properties": {
                "documentKind": {
                    "type": "string"
                },
                "messageId": {
                    "type": "string"
                },
                "errorCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "SHOULD_RETRY"
                        ]
                    }
                },
                "serverErrorId": {
                    "type": "string"
                },
                "stackTrace": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CloudAccountAzureSpecification": {
            "description": "Specification for a Azure cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "clientApplicationId",
                "clientApplicationSecretKey",
                "name",
                "regions",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"East Asia\",\"externalRegionId\": \"eastasia\"}]"
                },
                "clientApplicationId": {
                    "description": "Azure Client Application ID",
                    "type": "string",
                    "example": "3287dd6e-76d8-41b7-9856-2584969e7739"
                },
                "clientApplicationSecretKey": {
                    "description": "Azure Client Application Secret Key",
                    "type": "string",
                    "example": "GDfdasDasdASFas321das32cas2x3dsXCSA76xdcasg="
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "tenantId": {
                    "description": "Azure Tenant ID",
                    "type": "string",
                    "example": "9a13d920-4691-4e2d-b5d5-9c4c1279bc9a"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "subscriptionId": {
                    "description": "Azure Subscribtion ID",
                    "type": "string",
                    "example": "064865b2-e914-4717-b415-8806d17948f7"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "ImageProfileResult": {
            "description": "State object representing a query result of image profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "NatRule": {
            "description": "NAT Rule",
            "type": "object",
            "required": [
                "index",
                "targetLink"
            ],
            "properties": {
                "protocol": {
                    "description": "The protocol of the incoming requests. Default is TCP.",
                    "type": "string",
                    "example": "TCP, UDP"
                },
                "sourceIPs": {
                    "description": "The IP of the external source. Default is `any`",
                    "type": "string",
                    "example": "any, 10.20.156.101"
                },
                "translatedPorts": {
                    "description": "The machine port where the request will be forwarded. Default is `any`",
                    "type": "string",
                    "example": "any, 80, 5000-5100"
                },
                "destinationAddress": {
                    "description": "The external IP address of the outbound or routed network",
                    "readOnly": true,
                    "type": "string",
                    "example": "any, 10.20.156.101"
                },
                "kind": {
                    "description": "Kind of NAT: NAT44/NAT64/NAT66. Only NAT44 is supported currently and it is the default value.",
                    "type": "string",
                    "example": "NAT44"
                },
                "targetLink": {
                    "description": "A links to target load balancer or a machine's network interface where the request will be forwarded.",
                    "type": "string",
                    "example": "/iaas/api/load-balancers/try6-45ef, /iaas/api/machines/ht54-a472/network-interfaces/dyd6-d67e"
                },
                "destinationPorts": {
                    "description": "The edge gateway port. Default is `any`",
                    "type": "string",
                    "example": "any, 80, 5000-5100"
                },
                "index": {
                    "format": "int32",
                    "description": "Index in which the rule must be applied",
                    "type": "integer"
                },
                "sourcePorts": {
                    "description": "Ports from where the request is originating. Default is `any`",
                    "type": "string",
                    "example": "any, 80, 5000-5100"
                },
                "description": {
                    "description": "Description of the NAT rule.",
                    "type": "string"
                },
                "ruleId": {
                    "description": "Unique ID of the NAT Rule",
                    "readOnly": true,
                    "type": "string"
                },
                "type": {
                    "description": "Type of the NAT rule. Only DNAT is supported currently.",
                    "type": "string",
                    "example": "DNAT"
                }
            }
        },
        "UpdateCloudAccountGcpSpecification": {
            "description": "Specification for a GCP cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "clientEmail",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "properties": {
                "privateKey": {
                    "description": "GCP Private key",
                    "type": "string",
                    "example": "-----BEGIN PRIVATE KEY-----\nMIICXgIHAASBgSDHikastc8+I81zCg/qWW8dMr8mqvXQ3qbPAmu0RjxoZVI47tvs\nkYlFAXOf0sPrhO2nUuooJngnHV0639iTTEYG1vckNaW2R6U5QTdQ5Rq5u+uV3pMk\n7w7Vs4n3urQ4jnqt7rTXbC1DNa/PFeAZatbf7ffBBy0IGO0zc128IshYcwIDAQAB\nAoGBALTNl2JxTvq4SDW/3VH0fZkQXWH1MM10oeMbB2qO5beWb11FGaOO77nGKfWc\nbYgfp5Ogrql2yhBvLAXnxH8bcqqwORtFhlyV68U1y4R+8WxDNh0aevxH8hRS/1X5\n963DJm1JlU0E+vStiktN0tC3ebH5hE+1OxbIHSZ+WOWLYX7JAkEA5uigRgKp8ScG\nauUijvdOLZIhHWq9y5Wz+nOHUuDw8P7wOTKU34QJAoWEe771p9Pf/GTA/kr0BQnP\nQvWUDxGzJwJBAN05C6krwPeryFKrKtjOGJIbiIoY72wRnoNcdEEs3HDRhf48YWFo\nriRbZylzzzNFy/gmzT6XJQTfktGqq+FZD9UCQGIJaGrxHJgfmpDuAhMzGsUsYtTr\niRox0D1Iqa7dhE693t5aBG010OF6MLqdZA1CXrn5SRtuVVaCSLZEL/2J5UcCQQDA\nd3MXucNnN4NPuS/L9HMYJWD7lPoosaORcgyK77bSSNgk+u9WSjbH1uYIAIPSffUZ\nbti+jc2dUg5wb+aeZlgJAkEAurrpmpqj5vg087ZngKfFGR5rozDiTsK5DceTV97K\na1Y+Nzl+XWTxDBWk4YPh2ZlKv402hZEfWBYxUDn5ZkH/bw==\n-----END PRIVATE KEY-----\n"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"europe-west2\",\"externalRegionId\": \"europe-west2\"}]"
                },
                "clientEmail": {
                    "description": "GCP Client email",
                    "type": "string",
                    "example": "321743978432-compute@developer.gserviceaccount.com"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "projectId": {
                    "description": "GCP Project ID",
                    "type": "string",
                    "example": "example-gcp-project"
                },
                "privateKeyId": {
                    "description": "GCP Private key ID",
                    "type": "string",
                    "example": "027f73d50a19452eedf5775a9b42c5083678abdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "CloudAccountRegionEnumerationSpecification": {
            "description": "Specification for a region enumeration of generic cloud account.",
            "type": "object",
            "required": [
                "cloudAccountProperties"
            ],
            "properties": {
                "cloudAccountProperties": {
                    "description": "Cloud Account specific properties supplied in as name value pairs",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"supportPublicImages\": \"true\", \"acceptSelfSignedCertificate\": \"true\" }"
                },
                "privateKey": {
                    "description": "Secret access key or password to be used to authenticate with the cloud account. Either provide privateKey or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "cloudAccountType": {
                    "description": "Cloud account type",
                    "type": "string",
                    "example": "vsphere, aws, azure, nsxv, nsxt"
                },
                "cloudAccountId": {
                    "description": "Existing cloud account id. Either provide existing cloud account Id, or privateKeyId/privateKey credentials pair.",
                    "type": "string",
                    "example": "b8b7a918-342e-4a53-a3b0-b935da0fe601"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "privateKeyId": {
                    "description": "Access key id or username to be used to authenticate with the cloud account. Either provide privateKeyId or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                }
            }
        },
        "LoadBalancer": {
            "description": "Represents a load balancer.<br>**HATEOAS** links:<br>**load-balancer-targets** - array[Machine] - List of load balancer target machines.<br>**cloud-account** - CloudAccount - Cloud account where this LB is deployed.<br>**self** - LoadBalancer - Self link to this load balancer",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id",
                "routes"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "address": {
                    "description": "Primary address allocated or in use by this load balancer. The address could be an in the form of a publicly resolvable DNS name or an IP address. ",
                    "type": "string",
                    "example": "lb-123456789.eu-west-1.elb.amazonaws.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "type": {
                    "description": "Define the type/variant of load balancer numbers e.g.for NSX the number virtual servers and pool members load balancer can host",
                    "type": "string",
                    "example": "Azure: BASIC, or STANDARD, AWS: Application, Network, or Classic, NSX: SMALL, MEDIUM, LARGE, EXTRA_LARGE"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this resource belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "routes": {
                    "description": "The load balancer route configuration regarding ports and protocols.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RouteConfiguration"
                    }
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "provisioningStatus": {
                    "description": "The provisioning status of the resource. One of three provisioning statuses.\n`PROVISIONING`: The resource is being provisioned.\n`READY`: The resource is already provisioned.\n`SUSPEND`: The resource is being destroyed.\n",
                    "type": "string"
                },
                "deploymentId": {
                    "description": "Deployment id that is associated with this resource.",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this resource belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "loggingLevel": {
                    "description": "Defines logging level for collecting load balancer traffic logs.",
                    "type": "string",
                    "example": "ERROR, WARNING, INFO, DEBUG"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "NetworkInterface": {
            "description": "Represents a network interface.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this network domain exists.<br>**security-groups** - array[SecurityGroup] - List of security groups for this network interface.<br>**self** - NetworkInterface - Self link to this network interface",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "addresses": {
                    "description": "A list of IP addresses allocated or in use by this network interface.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"10.1.2.190\" ]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The external regionId of the network interface.",
                    "type": "string",
                    "example": "ap-northeast-2"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "deviceIndex": {
                    "format": "int32",
                    "description": "The device index of this network interface.",
                    "type": "integer",
                    "example": 1
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this network interface.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_net_interface\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"awaitIp\" : \"true\" }"
                },
                "securityGroupIds": {
                    "description": "A list of security group ids this network interface is associated with",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "UpdateCloudAccountSpecification": {
            "description": "Specification for a generic cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "privateKey",
                "privateKeyId"
            ],
            "properties": {
                "cloudAccountProperties": {
                    "description": "Cloud Account specific properties supplied in as name value pairs",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"supportPublicImages\": \"true\", \"acceptSelfSignedCertificate\": \"true\" }"
                },
                "privateKey": {
                    "description": "Secret access key or password to be used to authenticate with the cloud account",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "associatedCloudAccountIds": {
                    "description": "Cloud accounts to associate with this cloud account",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the Cloud Account.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"sampleadapterProjectId\" : \"projectId\" }"
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. \n'regionInfos' is a required parameter for AWS, AZURE, GCP, VSPHERE, VMC, VCF cloud account types.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"East Asia\",\"externalRegionId\": \"eastasia\"}]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "privateKeyId": {
                    "description": "Access key id or username to be used to authenticate with the cloud account",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "UpdateCloudAccountNsxTSpecification": {
            "description": "Specification for an NSX-T cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "dcid",
                "hostName",
                "password",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the NSX-T endpoint",
                    "type": "string",
                    "example": "nsxt.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting.",
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "associatedCloudAccountIds": {
                    "description": "vSphere cloud accounts associated with this NSX-T cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release and hence the data collector Id is optional for vRA on-prem.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "DataCollector": {
            "description": "State object representing a data collector.<br>The data collector is an OVA tool that contains the credentials and protocols needed to create a connection between a data collector appliance on a host vCenter and a vCenter-based cloud account.<br><br>Filtering is currently possible for some of the data collector fields via $filter.<br>Supported fields:<br>services<br>proxyId<br>creationTimeMicros<br>customProperties<br><br>Supported operators: eq, ne, lt, gt, and, or.<br><br>By default, the obtained list contains the enabled data collectors. A query parameter \"disabled=true\" can be added to obtain disabled data collectors.<br><br>Special case: If the user specifies $filter=((services.item ne 'cloud_assembly_extensibility') and (services.item ne 'cloud_assembly')), which is equivalent to disabled=true, and does not specify the \"disabled\" parameter, the resulting query will be equivalent to ((disabled=true) and (disabled=false)). This call will return an empty list.",
            "type": "object",
            "required": [
                "dcId",
                "hostName",
                "ipAddress",
                "name",
                "status"
            ],
            "properties": {
                "hostName": {
                    "description": "Data collector host name",
                    "type": "string",
                    "example": "dc1-lnd.mycompany.com"
                },
                "dcId": {
                    "description": "Data collector identifier",
                    "type": "string",
                    "example": "d5316b00-f3b8-4895-9e9a-c4b98649c2ca"
                },
                "ipAddress": {
                    "description": "Ip Address of the data collector VM",
                    "type": "string",
                    "example": "10.0.0.1"
                },
                "name": {
                    "description": "Data collector name",
                    "type": "string",
                    "example": "Datacollector1"
                },
                "status": {
                    "description": "Current status of the data collector",
                    "type": "string",
                    "example": "ACTIVE, INACTIVE"
                }
            }
        },
        "StorageProfileVsphereResult": {
            "description": "State object representing a query result of vShpere storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VsphereStorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ImageResult": {
            "description": "State object representing a query result of image mappings.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageMapping"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "HealthCheckConfiguration": {
            "description": "Load balancer health check configuration.",
            "type": "object",
            "properties": {
                "protocol": {
                    "description": "The protocol used for the health check.",
                    "type": "string",
                    "example": "HTTP, HTTPS"
                },
                "passiveMonitor": {
                    "description": "Enable passive monitor mode. This setting only applies to NSX-T.",
                    "type": "boolean",
                    "example": false
                },
                "responseBody": {
                    "description": "Expected response body. Used by HTTP, HTTPS, TCP, UDP.",
                    "type": "string",
                    "example": "http_response.body"
                },
                "port": {
                    "description": "Port on the back-end instance machine to use for the health check.",
                    "type": "string",
                    "example": "80"
                },
                "requestBody": {
                    "description": "Request body. Used by HTTP, HTTPS, TCP, UDP.",
                    "type": "string",
                    "example": "http_request.body"
                },
                "timeoutSeconds": {
                    "format": "int32",
                    "description": "Timeout (in seconds) to wait for a response from the back-end instance.",
                    "type": "integer",
                    "example": 5
                },
                "unhealthyThreshold": {
                    "format": "int32",
                    "description": "Number of consecutive check failures before considering a particular back-end instance as unhealthy.",
                    "type": "integer",
                    "example": 5
                },
                "healthyThreshold": {
                    "format": "int32",
                    "description": "Number of consecutive successful checks before considering a particular back-end instance as healthy.",
                    "type": "integer",
                    "example": 2
                },
                "httpMethod": {
                    "description": "HTTP or HTTPS method to use when sending a health check request.",
                    "type": "string",
                    "example": "GET, OPTIONS, POST, HEAD, PUT"
                },
                "urlPath": {
                    "description": "URL path on the back-end instance against which a request will be performed for the health check. Useful when the health check protocol is HTTP/HTTPS.",
                    "type": "string",
                    "example": "/index.html"
                },
                "intervalSeconds": {
                    "format": "int32",
                    "description": "Interval (in seconds) at which the health checks will be performed.",
                    "type": "integer",
                    "example": 60
                }
            }
        },
        "CloudAccountVsphere": {
            "description": "State object representing a vSphere cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountVsphere - Self link to this cloud account.",
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "hostName": {
                    "description": "Host name for the vSphere cloud account",
                    "type": "string",
                    "example": "vc1.vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "enabledRegions": {
                    "description": "A list of regions that are enabled for provisioning on this cloud account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "CloudAccountVcfRegionEnumerationSpecification": {
            "description": "Specification for a region enumeration of vcf cloud account.",
            "type": "object",
            "properties": {
                "vcenterPassword": {
                    "description": "Password for the user used to authenticate with the vCenter in VCF cloud account.  Either provide vcenterPassword or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere and NSX-T",
                    "type": "boolean",
                    "example": false
                },
                "nsxHostName": {
                    "description": "Host name for the NSX endpoint from the specified workload domain. Either provide nsxHostName or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "nsxt.mycompany.com"
                },
                "vcenterUsername": {
                    "description": "vCenter user name for the specified workload domain.The specified user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "cloudAccountId": {
                    "description": "Existing cloud account id. Either provide existing cloud account Id, or workloadDomainId, workloadDomainName, vcenterHostName, vcenterUsername, vcenterPassword, nsxHostName, nsxUsername and nsxPassword.",
                    "type": "string",
                    "example": "b8b7a918-342e-4a53-a3b0-b935da0fe601"
                },
                "sddcManagerId": {
                    "description": "SDDC manager integration id. Either provide sddcManagerId or provide a cloudAccountId of an existing account.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "vcenterHostName": {
                    "description": "Host name for the vSphere from the specified workload domain. Either provide vcenterHostName or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "vc.mycompany.com"
                },
                "nsxCertificate": {
                    "description": "NSX Certificate",
                    "type": "string"
                },
                "nsxUsername": {
                    "description": "User name for the NSX manager in the specified workload domain. Either provide nsxUsername or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "workloadDomainName": {
                    "description": "Name of the workload domain to add as VCF cloud account. Either provide workloadDomainName or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "Management"
                },
                "nsxPassword": {
                    "description": "Password for the user used to authenticate with the NSX-T manager in VCF cloud account. Either provide nsxPassword or provide a cloudAccountId of an existing account.",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "vcenterCertificate": {
                    "description": "vCenter Certificate",
                    "type": "string"
                },
                "dcId": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "workloadDomainId": {
                    "description": "Id of the workload domain to add as VCF cloud account. Either provide workloadDomainId or provide a cloudAccountId of an existing account.",
                    "type": "string"
                }
            }
        },
        "FabricNetworkVsphereResult": {
            "description": "State object representing a query result of fabric networks.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricNetworkVsphere"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FlavorProfileResult": {
            "description": "State object representing a query result of flavor profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FlavorProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "VsphereStorageProfile": {
            "description": "Defines a structure that holds storage profile details defined for vSphere for a specific region.**HATEOAS** links:<br>**datastore** - FabricVsphereDatastore - Datastore for this storage profile.<br>**storage-policy** - FabricVsphereStoragePolicy - vSphere storage policy for this storage profile.<br> **region** - Region - Region for the profile.<br>**self** - VsphereStorageProfile - Self link to this vSphere storage profile.",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile should support encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "Datacenter:datacenter-2"
                },
                "sharesLevel": {
                    "description": "Shares level are specified as High, Normal, Low or Custom.",
                    "type": "string",
                    "example": "low / normal / high / custom"
                },
                "cloudAccountId": {
                    "description": "Id of the cloud account this storage profile belongs to.",
                    "type": "string",
                    "example": "[9e49]"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "diskMode": {
                    "description": "Type of mode for the disk",
                    "type": "string",
                    "example": "undefined / independent-persistent / independent-nonpersistent"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "shares": {
                    "description": "A specific number of shares assigned to each virtual machine.",
                    "type": "string",
                    "example": "2000"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "provisioningType": {
                    "description": "Type of format for the disk.",
                    "type": "string",
                    "example": "thin / thick / eagerZeroedThick"
                },
                "limitIops": {
                    "description": "The upper bound for the I/O operations per second allocated for each disk.",
                    "type": "string",
                    "example": "1000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile contains default storage properties.",
                    "type": "boolean",
                    "example": false
                },
                "diskType": {
                    "description": "Disk types are specified as \n\tStandard - Simple vSphere virtual disks which cannot be managed independently without an attached VM.\n\tFirst Class - Improved version of standard virtual disks, designed to be fully mananged \n independent storage objects. \nEmpty value is considered as Standard",
                    "type": "string",
                    "example": "firstClass / standard"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "RequestTrackerResult": {
            "description": "State object representing a query result of request tracker objects.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestTracker"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "User": {
            "description": "A representation of a user.",
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "type": {
                    "description": "Type of the principal. Currently supported 'user' (default) and 'group'.",
                    "type": "string",
                    "example": "user"
                },
                "email": {
                    "description": "The email of the user or name of the group.",
                    "type": "string",
                    "example": "administrator@vmware.com"
                }
            }
        },
        "StorageProfileAzureResult": {
            "description": "State object representing a query result of Azure storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AzureStorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountAzureResult": {
            "description": "State object representing a query result of Azure cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountAzure"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "DiskSnapshot": {
            "description": "Represents a disk snapshot",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "snapshotProperties": {
                    "description": "Snapshot specific properties",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"incremental\": \"false\" }"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "desc": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that have to be set on the snapshot in the cloud. Currently supported for Azure Snapshots",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "RequestTracker": {
            "description": "An object used to track long-running operations.",
            "type": "object",
            "required": [
                "id",
                "progress",
                "selfLink",
                "status"
            ],
            "properties": {
                "deploymentId": {
                    "description": "ID of the deployment, this request is connected to.",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "description": "Name of the operation.",
                    "type": "string",
                    "example": "Power-off"
                },
                "progress": {
                    "format": "int32",
                    "description": "Progress of the request as percentage.",
                    "type": "integer",
                    "example": 90
                },
                "resources": {
                    "description": "Collection of resources.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[\"/resources/i-0be3655a12fd28e8e\", \"/resources/i-0be234a15ft8det3\"]"
                },
                "id": {
                    "description": "ID of this request.",
                    "type": "string",
                    "example": "we655aew4e8e"
                },
                "message": {
                    "description": "Status message of the request.",
                    "type": "string",
                    "example": "In Progress"
                },
                "status": {
                    "description": "Status of the request.",
                    "type": "string",
                    "enum": [
                        "FINISHED",
                        "INPROGRESS",
                        "FAILED"
                    ],
                    "example": "FINISHED"
                },
                "selfLink": {
                    "description": "Self link of this request.",
                    "type": "string",
                    "example": "/.../request-tracker/we655aew4e8e"
                }
            }
        },
        "ZoneResult": {
            "description": "State object representing a query result of Zones.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Zone"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "MachineSpecification": {
            "description": "Specification for a cloud agnostic machine.",
            "type": "object",
            "required": [
                "flavor",
                "flavorRef",
                "image",
                "imageRef",
                "name",
                "projectId"
            ],
            "properties": {
                "image": {
                    "description": "Type of image used for this machine.",
                    "type": "string",
                    "example": "vmware-gold-master, ubuntu-latest, rhel-compliant, windows"
                },
                "disks": {
                    "description": "A set of disk specifications for this machine.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiskAttachmentSpecification"
                    }
                },
                "imageDiskConstraints": {
                    "description": "Constraints that are used to drive placement policies for the image disk. Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment:prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]"
                },
                "description": {
                    "description": "Describes machine within the scope of your organization and is not propagated to the cloud",
                    "type": "string"
                },
                "machineCount": {
                    "format": "int32",
                    "description": "Number of machines to provision - default 1.",
                    "type": "integer",
                    "example": 3
                },
                "constraints": {
                    "description": "Constraints that are used to drive placement policies for the virtual machine that is produced from this specification. Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "flavor": {
                    "description": "Flavor of machine instance.",
                    "type": "string",
                    "example": "small, medium, large"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend this resource.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "saltConfiguration": {
                    "description": "Settings to apply salt configuration on the provisioned machine.",
                    "$ref": "#/definitions/SaltConfiguration"
                },
                "deploymentId": {
                    "description": "The id of the deployment that is associated with this resource",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426655440000"
                },
                "bootConfig": {
                    "description": "A valid cloud config data in json-escaped yaml syntax",
                    "$ref": "#/definitions/MachineBootConfig"
                },
                "bootConfigSettings": {
                    "description": "A set of settings that specify how the provided Boot Config should be handled",
                    "$ref": "#/definitions/MachineBootConfigSettings"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "nics": {
                    "description": "A set of network interface controller specifications for this machine. If not specified, then a default network connection will be created.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceSpecification"
                    }
                },
                "flavorRef": {
                    "description": "Provider specific flavor reference. Valid if no flavor property is provided",
                    "type": "string",
                    "example": "t2.micro"
                },
                "imageRef": {
                    "description": "Direct image reference used for this machine (name, path, location, uri, etc.). Valid if no image property is provided",
                    "type": "string",
                    "example": "ami-f6795a8c"
                },
                "remoteAccess": {
                    "description": "Settings to remotely connect to the provisioned machine, by public/private key pair or username/password authentication. AWS and vSphere support key pair. Azure supports key pair or username/password.",
                    "$ref": "#/definitions/RemoteAccessSpecification"
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                }
            }
        },
        "BlockDeviceResult": {
            "description": "State object representing a query result of block device.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BlockDevice"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FabricCompute": {
            "description": "Represents a compute which is an entity on the cloud provider side that can be used to provision resources in. It could be an availability zone in a public cloud, cluster, host or resource pool in vSphere",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "lifecycleState": {
                    "description": "Lifecycle status of the compute instance",
                    "type": "string",
                    "example": "PROVISIONING, READY, SUSPEND, STOPPED, RETIRED"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the compute.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the compute",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "type": {
                    "description": "Type of the compute instance",
                    "type": "string",
                    "example": "Availability Zone"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "powerState": {
                    "description": "Power state of compute instance",
                    "type": "string",
                    "example": "ON, OFF, GUEST_OFF, UNKNOWN, SUSPEND"
                },
                "customProperties": {
                    "description": "Custom properties of the compute instance",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountResult": {
            "description": "State object representing a query result of cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccount"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "NetworkIPRangeSpecification": {
            "description": "Specification for creating or updating a NetworkIPRange",
            "type": "object",
            "required": [
                "endIPAddress",
                "name",
                "startIPAddress"
            ],
            "properties": {
                "fabricNetworkIds": {
                    "uniqueItems": true,
                    "description": "The Ids of the fabric networks.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipVersion": {
                    "description": "IP address version: IPv4 or IPv6. Default: IPv4.",
                    "type": "string",
                    "enum": [
                        "IPv4",
                        "IPv6"
                    ]
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "startIPAddress": {
                    "description": "Start IP address of the range.",
                    "type": "string"
                },
                "endIPAddress": {
                    "description": "End IP address of the range.",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                }
            }
        },
        "NetworkInterfaceSpecification": {
            "description": "Specification for attaching nic to machine",
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "A list of IP addresses allocated or in use by this network interface.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"10.1.2.190\" ]"
                },
                "macAddress": {
                    "description": "MAC address of the network interface.",
                    "type": "string",
                    "example": "[ \"00:50:56:99:d8:34\" ]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"awaitIp\" : \"true\" }"
                },
                "securityGroupIds": {
                    "description": "A list of security group ids which this network interface will be assigned to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fabricNetworkId": {
                    "description": "Id of the fabric network for the network interface. Either networkId or fabricNetworkId can be specified, not both.",
                    "type": "string",
                    "example": "54097407-4532-460c-94a8-8f9e18f4c925"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "networkId": {
                    "description": "Id of the network for the network interface. Either networkId or fabricNetworkId can be specified, not both.",
                    "type": "string",
                    "example": "54097407-4532-460c-94a8-8f9e18f4c925"
                },
                "deviceIndex": {
                    "format": "int32",
                    "description": "The device index of this network interface.",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "UpdateCloudAccountVsphereSpecification": {
            "description": "Specification for a vSphere cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "hostName",
                "password",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the vSphere endpoint",
                    "type": "string",
                    "example": "vc.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere",
                    "type": "boolean",
                    "example": false
                },
                "associatedCloudAccountIds": {
                    "description": "NSX-V or NSX-T account to associate with this vSphere cloud account. vSphere cloud account can be a single NSX-V cloud account or a single NSX-T cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"Datacenter:datacenter-3\",\"externalRegionId\": \"Datacenter:datacenter-3\"}]"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors.\nNote: Data collector endpoints are not available in vRA on-prem release.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "DataCollectorRegistration": {
            "description": "Data collector registration object.<br>The supplied data collector is an OVA tool that contains the credentials and protocols needed to create a connection between a data collector appliance on a host vCenter and a vCenter-based cloud account. . The process of deploying data collector is: <br> 1. Download the data collector ova from the \"ovaLink\".<br>2. Import the .ova file to the vCenter Server and start the installation.<br> 3. When asked for the key, copy and use the \"key\" provided.<br> 4. It takes a few minutes to detect your Data Collector after it is deployed and powered on in vCenter.",
            "type": "object",
            "required": [
                "key",
                "ovaLink"
            ],
            "properties": {
                "ovaLink": {
                    "description": "Data collector OVA Link",
                    "type": "string",
                    "example": "https://ci-data-collector.s3.amazonaws.com/VMware-Cloud-Services-Data-Collector.ova"
                },
                "key": {
                    "description": "A registration key for the data collector",
                    "type": "string",
                    "example": "eyJyZWdpc3RyYXRpb25VcmwiOiJodHRwczovL2Fw"
                }
            }
        },
        "ExternalNetworkIPRangeResult": {
            "description": "State object representing a query result of external IPAM network IP range.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalNetworkIPRange"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Integration": {
            "description": "State object representing an integration.<br><br>An integration identifies an integration type and an integration-specific properties.<br>**HATEOAS** links:<br>**self** - Integration - Self link to this integration",
            "type": "object",
            "required": [
                "_links",
                "id",
                "integrationProperties",
                "integrationType"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "integrationType": {
                    "description": "Integration type",
                    "type": "string",
                    "example": "Active directory, Ansible, IPAM, vRO, GitHub"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"true\" }"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "integrationProperties": {
                    "description": "Integration specific propertiesNote: Integration Properties can be blank for integrations requiring only username and password.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"userName\": \"admin\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Integration",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "CloudAccountVsphereResult": {
            "description": "State object representing a query result of vSphere cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountVsphere"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Zone": {
            "description": "Description of a compute placement zone.  This can be used to specify a subset of compute resources within a region where machines can be placed. <br>**HATEOAS** links:<br>**region** - Region - Region for the zone.<br>**computes** - Computes - Computes for the zone. <br>**cloud-account** - CloudAccount - The cloud account that the zone belongs to.<br>**self** - Zone - Self link to this zone",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this zone is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "cloudAccountId": {
                    "description": "Cloud account this zone belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this placement.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"dev\", \"value\": \" \" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "A list of key value pair of properties that will  be used",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"__isDefaultPlacementZone\": \"true\"}"
                },
                "folder": {
                    "description": "The folder relative path to the datacenter where resources are deployed to. (only applicable for vSphere cloud zones)",
                    "type": "string",
                    "example": "test-folder"
                },
                "tagsToMatch": {
                    "description": "A set of tag keys and optional values for compute resource filtering.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"compliance\", \"value\": \"pci\" } ]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "placementPolicy": {
                    "description": "The placement policy for the zone.",
                    "type": "string",
                    "example": "DEFAULT, SPREAD, BINPACK"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricNetworkSpecification": {
            "description": "Specification for updating a FabricNetwork",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                }
            }
        },
        "NetworkProfileResult": {
            "description": "State object representing a query result of network profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CnTemplateVo": {
            "type": "object",
            "properties": {
                "uniqueName": {
                    "type": "boolean"
                },
                "staticPattern": {
                    "type": "string"
                },
                "counters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CnTemplateCounterVo"
                    }
                },
                "incrementStep": {
                    "format": "int64",
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                },
                "startCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "resourceTypeName": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string",
                    "enum": [
                        "COMPUTE",
                        "NETWORK",
                        "COMPUTE_STORAGE",
                        "LOAD_BALANCER",
                        "RESOURCE_GROUP",
                        "GATEWAY",
                        "NAT",
                        "SECURITY_GROUP"
                    ]
                },
                "resourceDefault": {
                    "type": "boolean"
                }
            }
        },
        "NetworkProfile": {
            "description": "Represents a network Profile.<br>**HATEOAS** links:<br>**fabric-networks** - array[FabricNetwork] - Fabric networks defined in this profile.<br>**security-groups** - array[SecurityGroup] - List of security groups for this profile.<br>**network-domains** - array[NetworkDomain] - List of network domains for this profile.<br>**isolated-external-fabric-networks** - array[FabricNetwork] - Isolated external fabric networks in this profile.<br>**self** - NetowrkProfile - Self link to this network profile",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "cloudAccountId": {
                    "description": "Id of the cloud account this profile belongs to.",
                    "type": "string",
                    "example": "[9e49]"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "isolationNetworkDomainCIDR": {
                    "description": "CIDR of the isolation network domain.",
                    "type": "string"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this Network Profile.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the Network Profile object that is produced from this specification.  For isolationType security group, datastoreId identifies the Compute Resource Edge datastore. computeCluster and resourcePoolId identify the Compute Resource Edge cluster. For isolationType subnet, distributedLogicalRouterStateLink identifies the on-demand network distributed local router.  onDemandNetworkIPAssignmentType identifies the on-demand network IP range assignment type static, dynamic, or mixed.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"resourcePoolId\" : \"resource-pool-1\", \"datastoreId\" : \"StoragePod:group-p87839\", \"computeCluster\" : \"/resources/compute/1234\", \"distributedLogicalRouterStateLink\" : \"/resources/routers/1234\", \"onDemandNetworkIPAssignmentType\" : \"dynamic\"}"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "isolationType": {
                    "description": "Specifies the isolation type e.g. none, subnet or security group",
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUBNET",
                        "SECURITY_GROUP"
                    ]
                },
                "isolatedNetworkCIDRPrefix": {
                    "format": "int32",
                    "description": "The CIDR prefix length to be used for the isolated networks that are created with the network profile.",
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "StorageProfileSpecification": {
            "description": "Represents a specification of generic storage profile.",
            "type": "object",
            "required": [
                "defaultItem",
                "name",
                "regionId"
            ],
            "properties": {
                "diskProperties": {
                    "description": "Map of storage properties that are to be applied on disk while provisioning.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"diskProperties\": {\n                    \"provisioningType\": \"thin\",\n                    \"sharesLevel\": \"low\",\n                    \"shares\": \"500\",\n                    \"limitIops\": \"500\"\n                    \"diskType\": \"firstClass\"\n                    \"deviceType\": \"ebs\"\n                    \"volumeType\": \"gp2\"\n                    \"azureDataDiskCaching\": \"ReadWrite\"\n                    \"azureOsDiskCaching\": \"ReadWrite\"\n                    \"azureManagedDiskType\": \"Standard_LRS\"\n                } }"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean"
                },
                "diskTargetProperties": {
                    "description": "Map of storage placements to know where the disk is provisioned.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"diskTargetProperties\": {\n                    \"storageAccountId\": \"27dhbf7\",\n                    \"storagePolicyId\": \"7fhfj9f\",\n                    \"datastoreId\": \"638nfjd8\",\n                } }"
                },
                "regionId": {
                    "description": "The Id of the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile is a default profile.",
                    "type": "boolean"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                }
            }
        },
        "CloudAccountAzure": {
            "description": "State object representing an Azure cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountAzure - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "clientApplicationId",
                "id",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "clientApplicationId": {
                    "description": "Azure Client Application IDaccount. ",
                    "type": "string",
                    "example": "66f277f2-ff12-4c3a-a4c9-b13d131a9a4d"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "enabledRegions": {
                    "description": "A list of regions that are enabled for provisioning on this cloud account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "tenantId": {
                    "description": "Azure Tenant Idaccount. ",
                    "type": "string",
                    "example": "027f73d5-0a19-452e-9d45-775693421508"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "subscriptionId": {
                    "description": "Azure Subscription IDaccount. ",
                    "type": "string",
                    "example": "f3c86a85-e379-42ae-a8ba-7a51382d6dd7"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CustomNamingModel": {
            "type": "object",
            "properties": {
                "projects": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CnProjectVo"
                    }
                },
                "templates": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CnTemplateVo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "DataCollectorResult": {
            "description": "State object representing a query result of data collectors.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataCollector"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountVmcSpecification": {
            "description": "Specification for a VMC cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "apiKey",
                "dcId",
                "hostName",
                "name",
                "nsxHostName",
                "password",
                "regions",
                "sddcId",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Enter the IP address or FQDN of the vCenter Server in the specified SDDC. The cloud proxy belongs on this vCenter.",
                    "type": "string",
                    "example": "vc1.vmware.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere",
                    "type": "boolean",
                    "example": false
                },
                "regions": {
                    "description": "A set of regions to enable provisioning on.Refer to /iaas/api/cloud-accounts/region-enumeration. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSpecification"
                    },
                    "example": "[{ \"name\": \"Datacenter:datacenter-3\",\"externalRegionId\": \"Datacenter:datacenter-3\"}]"
                },
                "apiKey": {
                    "description": "VMC API access key",
                    "type": "string"
                },
                "nsxHostName": {
                    "description": "The IP address of the NSX Manager server in the specified SDDC / FQDN.",
                    "type": "string",
                    "example": "nsxManager.sddc-52-12-8-145.vmwaretest.com"
                },
                "sddcId": {
                    "description": "Identifier of the on-premise SDDC to be used by this cloud account. Note that NSX-V SDDCs are not supported.",
                    "type": "string",
                    "example": "CMBU-PRD-NSXT-M8GA-090319"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "certificateInfo": {
                    "description": "Certificate for a cloud account.",
                    "$ref": "#/definitions/CertificateInfoSpecification",
                    "example": "{\"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDHjCCAoegAwIBAgIBATANBgkqhkiG9w0BAQsFADCBpjEUMBIGA1UEChMLVk13\\nYXJlIEluYAAc1pw18GT3iAqQRPx0PrjzJhgjIJMla\\n/1Kg4byY4FPSacNiRgY/FG2bPCqZk1yRfzmkFYCW/vU+Dg==\\n-----END CERTIFICATE-----\\n-\"}"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account.Cloud account capability tags may enable different features. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "dcId": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "username": {
                    "description": "vCenter user name for the specified SDDC.The specified user requires CloudAdmin credentials. The user does not require CloudGlobalAdmin credentials.",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "FabricImage": {
            "description": "Represents a fabric image from the corresponding cloud end-point.<br>**HATEOAS** links:<br>**region** - Region - Region for the image.<br>**self** - FabricImage - Self link to this image",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "osFamily": {
                    "description": "Operating System family of the image.",
                    "type": "string",
                    "example": "linux, win"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The regionId of the image",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "isPrivate": {
                    "description": "Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library Items",
                    "type": "boolean",
                    "example": true
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "42413b31-1716-477e-9a88-9dc1c3cb1cdf"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"prop1\" : \"value1\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "MachineBootConfigSettings": {
            "description": "Machine boot config settings that will define how the provisioning will handle the boot config script execution.",
            "type": "object",
            "properties": {
                "phoneHomeShouldWait": {
                    "description": "A phone_home module will be added to the Cloud Config and the provisioning will wait on a callback prior proceeding",
                    "type": "boolean",
                    "example": true
                },
                "phoneHomeFailOnTimeout": {
                    "description": "In case a timeout occurs whether the provisioning process should fail or continue.",
                    "type": "boolean",
                    "example": false
                },
                "phoneHomeTimeoutSeconds": {
                    "format": "int32",
                    "description": "The period of time to wait for the phone_home module callback to occur",
                    "type": "integer",
                    "example": 100
                }
            }
        }
    },
    "swagger": "2.0",
    "info": {
        "description": "A multi-cloud IaaS API for Cloud Automation Services",
        "title": "VMware Cloud Assembly IaaS API",
        "version": "2021-07-15"
    },
    "tags": [
        {
            "name": "About"
        },
        {
            "name": "Certificates"
        },
        {
            "name": "Cloud Account"
        },
        {
            "name": "Compute"
        },
        {
            "name": "Compute Gateway"
        },
        {
            "name": "Compute Nat"
        },
        {
            "name": "Custom Naming"
        },
        {
            "name": "Data Collector"
        },
        {
            "name": "Deployment"
        },
        {
            "name": "Disk"
        },
        {
            "name": "Fabric AWS Volume Types"
        },
        {
            "name": "Fabric Azure Disk Encryption Sets"
        },
        {
            "name": "Fabric Azure Storage Account"
        },
        {
            "name": "Fabric Compute"
        },
        {
            "name": "Fabric Flavors"
        },
        {
            "name": "Fabric Images"
        },
        {
            "name": "Fabric Network"
        },
        {
            "name": "Fabric vSphere Datastore"
        },
        {
            "name": "Fabric vSphere Storage Policies"
        },
        {
            "name": "Flavor Profile"
        },
        {
            "name": "Flavors"
        },
        {
            "name": "Image Profile"
        },
        {
            "name": "Images"
        },
        {
            "name": "Integration"
        },
        {
            "name": "Load Balancer"
        },
        {
            "name": "Location"
        },
        {
            "name": "Login"
        },
        {
            "name": "Network"
        },
        {
            "name": "Network IP Range"
        },
        {
            "name": "Network Profile"
        },
        {
            "name": "Project"
        },
        {
            "name": "Property"
        },
        {
            "name": "Request"
        },
        {
            "name": "Security Group"
        },
        {
            "name": "Storage Profile"
        },
        {
            "name": "Tags"
        }
    ]
}
