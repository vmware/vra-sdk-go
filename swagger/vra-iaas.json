{
    "basePath": "/",
    "paths": {
        "/iaas/api/load-balancers/{id}": {
            "get": {
                "summary": "Get load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get load balancer with a given id",
                "operationId": "getLoadBalancer",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancer"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            },
            "delete": {
                "summary": "Delete load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete load balancer with a given id",
                "operationId": "deleteLoadBalancer",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/load-balancers/{id}/operations/delete": {
            "post": {
                "summary": "Delete operation for load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day delete operation for load balancer",
                "operationId": "deleteLoadBalancerOperation",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/network-domains/{id}": {
            "get": {
                "summary": "Get network domain",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get network domain with a given id",
                "operationId": "getNetworkDomain",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkDomain"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network domain.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/iaas/api/projects/{id}/resource-metadata": {
            "patch": {
                "summary": "Update project resource metadata",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update project resource metadata by a given project id",
                "operationId": "updateProjectResourceMetadata",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ProjectResourceMetadataSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Project specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "get": {
                "summary": "Get project resource metadata",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get project resource metadata by a given project id",
                "operationId": "getProjectResourceMetadata",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ProjectResourceMetadata"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/iaas/api/storage-profiles": {
            "post": {
                "summary": "Create storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create storage profile",
                "operationId": "createStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get storage profiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all storage profiles",
                "operationId": "getStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/zones/{id}": {
            "patch": {
                "summary": "Update zone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update zone",
                "operationId": "updateZone",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the zone.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ZoneSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Zone specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            },
            "get": {
                "summary": "Get zone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get zone with given id",
                "operationId": "getZone",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the zone.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            },
            "delete": {
                "summary": "Delete a zone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a zone",
                "operationId": "deleteZone",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the zone.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/machines/{id}/disks/{id1}": {
            "get": {
                "summary": "Get a machine disk",
                "description": "Get disk with a given id for specific machine",
                "operationId": "getMachineDisk",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id1",
                        "description": "The ID of the disk.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk",
                    "Compute"
                ]
            },
            "delete": {
                "summary": "Delete machine disk",
                "description": "Remove a disk from a given machine.",
                "operationId": "deleteMachineDisk",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id1",
                        "description": "The ID of the disk.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk",
                    "Compute"
                ]
            }
        },
        "/iaas/api/network-domains": {
            "get": {
                "summary": "Get network domains",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all network domains.",
                "operationId": "getNetworkDomains",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkDomainResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/iaas/api/zones": {
            "post": {
                "summary": "Create zone",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create zone",
                "operationId": "createZone",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ZoneSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Zone specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            },
            "get": {
                "summary": "Get zones",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all zones",
                "operationId": "getZones",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ZoneResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/cloud-accounts-gcp": {
            "post": {
                "summary": "Create an GCP cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create an GCP cloud account in the current organization",
                "operationId": "createGcpCloudAccount",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcp"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcpSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountGcp specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get GCP cloud accounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all GCP cloud accounts within the current organization",
                "operationId": "getGcpCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcpResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-azure/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified Azure cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified Azure cloud account",
                "operationId": "enumerateAzureRegions",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountAzure specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-nsx-v": {
            "post": {
                "summary": "Create a NSX-V cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a NSX-V cloud account within the current organization",
                "operationId": "createNsxVCloudAccount",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxV"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxVSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountNsxV specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get NSX-V cloud accounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all NSX-V cloud accounts within the current organization",
                "operationId": "getNsxVCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxVResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/block-devices": {
            "post": {
                "summary": "Create BlockDevice",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Following disk custom properties can be passed while creating a block device: \n\r\n\r    1. dataStore: Defines name of the datastore in which the disk has to be provisioned. \n\r    2. storagePolicy: Defines name of the storage policy in which the disk has to be provisioned. If name of the datastore is specified in the custom properties then, datastore takes precedence.\n\r    3. provisioningType: Defines the type of provisioning. For eg. thick/thin. ",
                "operationId": "createBlockDevice",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Disk Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            },
            "get": {
                "summary": "Get BlockDevices",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all BlockDevices",
                "operationId": "getBlockDevices",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/cloud-accounts-nsx-t": {
            "post": {
                "summary": "Create a NSX-T cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a NSX-T cloud account in the current organization",
                "operationId": "createNsxTCloudAccount",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxT"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxTSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountNsxT specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get NSX-T cloud accounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all NSX-T cloud accounts within the current organization",
                "operationId": "getNsxTCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxTResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-vsphere-datastores/{id}": {
            "get": {
                "summary": "Get fabric vSphere datastore",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric vSphere datastore with a given id",
                "operationId": "getFabricVSphereDatastore",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereDatastore"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric vSphere Datastore.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Datastore"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/restart": {
            "post": {
                "summary": "Restart operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day restart operation for machine",
                "operationId": "restartMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts-gcp/{id}": {
            "patch": {
                "summary": "Update GCP cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update GCP cloud account",
                "operationId": "updateGcpCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcp"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountGcpSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "GCP cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an GCP cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an GCP cloud account with a given id",
                "operationId": "getGcpCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcp"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete an GCP cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an GCP cloud account with a given id",
                "operationId": "deleteGcpCloudAccount",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-networks/{id}": {
            "patch": {
                "summary": "Update fabric network.",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update fabric network. Only tag updates are supported.",
                "operationId": "updateFabricNetwork",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetwork"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric Network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Fabric Network Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            },
            "get": {
                "summary": "Get fabric network",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric network with a given id",
                "operationId": "getFabricNetwork",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetwork"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the fabric network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            }
        },
        "/iaas/api/storage-profiles-vsphere": {
            "post": {
                "summary": "Create vSphere storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create vSphere storage profile",
                "operationId": "createVSphereStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileVsphereSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get vSphere storage profiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all vSphere storage profiles",
                "operationId": "getVSphereStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/regions/{id}": {
            "get": {
                "summary": "Get Region",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Region with a given id",
                "operationId": "getRegion",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Region"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the region.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/images": {
            "get": {
                "summary": "Get images",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all images defined in ImageProfile.",
                "operationId": "getImages",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ImageResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Images"
                ]
            }
        },
        "/iaas/api/load-balancers/{id}/operations/scale": {
            "post": {
                "summary": "Scale operation for load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day scale operation for load balancer",
                "operationId": "scaleLoadBalancer",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "LoadBalancer Specification instance",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the load balancer.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/resize": {
            "post": {
                "summary": "Resize operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day resize operation for machine",
                "operationId": "resizeMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The desired flavor to resize the Machine.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "cpuCount",
                        "description": "The desired number of CPUs to resize the Machine",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "memoryInMB",
                        "description": "The desired memory in MBs to resize the Machine",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/network-ip-ranges/{id}": {
            "patch": {
                "summary": "Update network IP range.",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update network IP range.",
                "operationId": "updateNetworkIPRange",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetwork"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network IP range.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRangeSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Network IP range Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            },
            "get": {
                "summary": "Get network IP range",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get network IP range with a given id",
                "operationId": "getNetworkIPRange",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRange"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network IP range.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            },
            "delete": {
                "summary": "Delete network IP range",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete network IP range with a given id",
                "operationId": "deleteNetworkIPRange",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network IP range.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            }
        },
        "/iaas/api/machines/{id}/snapshots": {
            "get": {
                "summary": "Get machine snapshots information",
                "description": "Get machine snapshots information",
                "operationId": "getMachineSnapshots",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Snapshot"
                            }
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/fabric-azure-storage-accounts/{id}": {
            "get": {
                "summary": "Get fabric Azure storage account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric Azure storage account with a given id",
                "operationId": "getFabricAzureStorageAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricAzureStorageAccount"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric Azure Storage Account.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Azure Storage Account"
                ]
            }
        },
        "/iaas/api/security-groups/{id}": {
            "get": {
                "summary": "Get security group",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get security group with a given id",
                "operationId": "getSecurityGroup",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroup"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the security group.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group"
                ]
            }
        },
        "/iaas/api/machines": {
            "post": {
                "summary": "Create machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create machine",
                "operationId": "createMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/MachineSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Machine Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            },
            "get": {
                "summary": "Get machines",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all machines",
                "operationId": "getMachines",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/MachineResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/block-devices/{id}": {
            "get": {
                "summary": "Get BlockDevice",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get a single BlockDevice",
                "operationId": "getBlockDevice",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the block device.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            },
            "delete": {
                "summary": "Delete a BlockDevice",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a BlockDevice",
                "operationId": "deleteBlockDevice",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the block device.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk"
                ]
            }
        },
        "/iaas/api/load-balancers": {
            "post": {
                "summary": "Create load balancer",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create load balancer",
                "operationId": "createLoadBalancer",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "LoadBalancer Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            },
            "get": {
                "summary": "Get load balancers",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all load balancers",
                "operationId": "getLoadBalancers",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/LoadBalancerResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Load Balancer"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/reboot": {
            "post": {
                "summary": "Reboot operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day reboot operation for machine",
                "operationId": "rebootMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified cloud account",
                "operationId": "enumerateRegions",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-vsphere-storage-policies/{id}": {
            "get": {
                "summary": "Get fabric vSphere storage policy",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric vSphere storage policy with a given id",
                "operationId": "getFabricVSphereStoragePolicy",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereStoragePolicy"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Fabric vSphere Storage Policy.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Storage Policies"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/snapshots": {
            "post": {
                "summary": "Create snapshot operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day create snapshot operation for machine",
                "operationId": "createMachineSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/SnapshotSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Snapshot Specification details",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/network-profiles/{id}": {
            "patch": {
                "summary": "Update network profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update network profile",
                "operationId": "updateNetworkProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NetworkProfile specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            },
            "get": {
                "summary": "Get network profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get network profile with a given id",
                "operationId": "getNetworkProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            },
            "delete": {
                "summary": "Delete network profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete network profile with a given id",
                "operationId": "deleteNetworkProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            }
        },
        "/iaas/api/security-groups": {
            "get": {
                "summary": "Get security groups",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all security groups",
                "operationId": "getSecurityGroups",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/SecurityGroupResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Security Group"
                ]
            }
        },
        "/iaas/api/networks/{id}": {
            "get": {
                "summary": "Get network",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get network with a given id",
                "operationId": "getNetwork",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Network"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            },
            "delete": {
                "summary": "Delete a network",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a network with a given id",
                "operationId": "deleteNetwork",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the network.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/iaas/api/cloud-accounts-gcp/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified GCP cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified GCP cloud account",
                "operationId": "enumerateGcpRegions",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountGcpSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/power-off": {
            "post": {
                "summary": "Power-off operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day power-off operation for machine",
                "operationId": "powerOffMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/projects": {
            "post": {
                "summary": "Create project",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create project",
                "operationId": "createProject",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Project Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "get": {
                "summary": "Get projects",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all projects",
                "operationId": "getProjects",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ProjectResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/iaas/api/cloud-accounts": {
            "post": {
                "summary": "Create a cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a cloud account in the current organization",
                "operationId": "createCloudAccount",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get cloud accounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all cloud accounts within the current organization",
                "operationId": "getCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/machines/{id}": {
            "patch": {
                "summary": "Update machine.",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update machine. Only tag updates are supported. All other properties in the MachineSpecification body are ignored.",
                "operationId": "updateMachine",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateMachineSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Machine Specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            },
            "get": {
                "summary": "Get machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get machine with a given id",
                "operationId": "getMachine",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            },
            "delete": {
                "summary": "Delete Machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete Machine with a given id",
                "operationId": "deleteMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts-aws": {
            "post": {
                "summary": "Create an AWS cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create an AWS cloud account in the current organization",
                "operationId": "createAwsCloudAccount",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAws"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountAws specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get AWS cloud accounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all AWS cloud accounts within the current organization",
                "operationId": "getAwsCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vsphere/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified vSphere cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified vSphere cloud account",
                "operationId": "enumerateVSphereRegions",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountVsphere specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/login": {
            "post": {
                "summary": "Retrieve AuthToken for local csp users",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Retrieve AuthToken for local csp users.\nWhen accessing other endpoints the `Bearer` authentication scheme and the received `token` must be provided in the `Authorization` request header field as follows:\n`Authorization: Bearer {token}`",
                "operationId": "retrieveAuthToken",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AuthResponse"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CspLoginSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CspLoginSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Login"
                ]
            }
        },
        "/iaas/api/storage-profiles-aws": {
            "post": {
                "summary": "Create AWS storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create AWS storage profile",
                "operationId": "createAwsStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAwsSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get AWS storage profiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all AWS storage profiles",
                "operationId": "getAwsStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/suspend": {
            "post": {
                "summary": "Suspend operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day suspend operation for machine",
                "operationId": "suspendMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/storage-profiles-azure": {
            "post": {
                "summary": "Create Azure storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create Azure storage profile",
                "operationId": "createAzureStorageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAzureSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get Azure storage profiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all Azure storage profiles",
                "operationId": "getAzureStorageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/shutdown": {
            "post": {
                "summary": "Shut down operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day shut down operation machine",
                "operationId": "shutdownMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/about": {
            "get": {
                "summary": "Get about page",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "The page contains information about the supported API versions and the latest API version. The version parameter is optional but highly recommended.\nIf you do not specify explicitly an exact version, you will be calling the latest supported API version.\nHere is an example of a call which specifies the exact version you are using: `GET /iaas/api/network-profiles?apiVersion=2019-01-15`",
                "operationId": "getAboutPage",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/About"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "tags": [
                    "About"
                ]
            }
        },
        "/iaas/api/tags": {
            "get": {
                "summary": "Get tags",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all tags",
                "operationId": "getTags",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TagResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "Tags"
                ]
            }
        },
        "/iaas/api/cloud-accounts-azure/{id}": {
            "patch": {
                "summary": "Update Azure cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update Azure cloud account",
                "operationId": "updateAzureCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzure"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Azure cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an Azure Cloud Account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an Azure Cloud Account with a given id",
                "operationId": "getAzureCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzure"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete an Azure Cloud Account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an Azure Cloud Account with a given id",
                "operationId": "deleteAzureCloudAccount",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/flavor-profiles": {
            "post": {
                "summary": "Create flavor profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create flavor profile",
                "operationId": "createFlavorProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "FlavorProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            },
            "get": {
                "summary": "Get flavor profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all flavor profile",
                "operationId": "getFlavorProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfileResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            }
        },
        "/iaas/api/machines/{id}/disks": {
            "post": {
                "summary": "Attach machine disk",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Attach a disk to a machine.",
                "operationId": "attachMachineDisk",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDevice"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/DiskAttachmentSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Disk Specification instance",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk",
                    "Compute"
                ]
            },
            "get": {
                "summary": "Get machine disks",
                "description": "Get all machine disks",
                "operationId": "getMachineDisks",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/BlockDeviceResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Disk",
                    "Compute"
                ]
            }
        },
        "/iaas/api/request-tracker": {
            "get": {
                "summary": "Get request tracker",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all request trackers",
                "operationId": "getRequestTrackers",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RequestTrackerResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Request"
                ]
            }
        },
        "/iaas/api/machines/{id}/snapshots/{id1}": {
            "delete": {
                "summary": "Delete snapshot operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day delete snapshot operation for machine",
                "operationId": "deleteMachineSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id1",
                        "description": "Snapshot id to delete.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/storage-profiles/{id}": {
            "get": {
                "summary": "Get storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get storage profile with a given id",
                "operationId": "getStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete storage profile",
                "description": "Delete storage profile with a given id",
                "operationId": "deleteStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "put": {
                "summary": "Replace storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Replace storage profile with a given id",
                "operationId": "replaceStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/StorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileSpecification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/data-collectors/{id}": {
            "get": {
                "summary": "Get Data Collector",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Data Collector with a given id.\n\nNote: Data collector endpoints are not available in vRA on-prem release.",
                "operationId": "getDataCollector",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/DataCollector"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Data Collector.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Data Collector"
                ]
            },
            "delete": {
                "summary": "Delete Data Collector",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete Data Collector with a given id.\n\nNote: Data collector endpoints are not available in vRA on-prem release.",
                "operationId": "deleteDataCollector",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Data Collector.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Data Collector"
                ]
            }
        },
        "/iaas/api/cloud-accounts-aws/{id}": {
            "patch": {
                "summary": "Update AWS cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update AWS cloud account",
                "operationId": "updateAwsCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAws"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "AWS cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an AWS cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an AWS cloud account with a given id",
                "operationId": "getAwsCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAws"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete an AWS cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete an AWS cloud account with a given id",
                "operationId": "deleteAwsCloudAccount",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-vsphere-storage-policies": {
            "get": {
                "summary": "Get fabric vSphere storage polices",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric vSphere storage polices.",
                "operationId": "getFabricVSphereStoragePolicies",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereStoragePolicyResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Storage Policies"
                ]
            }
        },
        "/iaas/api/image-profiles": {
            "post": {
                "summary": "Create image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create image profile",
                "operationId": "createImageProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ImageProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "ImageProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            },
            "get": {
                "summary": "Get image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all image profiles",
                "operationId": "getImageProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ImageProfileResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            }
        },
        "/iaas/api/fabric-aws-volume-types": {
            "get": {
                "summary": "Get fabric AWS volume types",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric AWS volume types.",
                "operationId": "getFabricAwsVolumeTypes",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VolumeTypeList"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric AWS Volume Types"
                ]
            }
        },
        "/iaas/api/network-ip-ranges": {
            "post": {
                "summary": "Create network IP range",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Creates a network IP range.",
                "operationId": "createNetworkIPRange",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRangeSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Network IP Range Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            },
            "get": {
                "summary": "Get network IP ranges",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all network IP ranges",
                "operationId": "getNetworkIPRanges",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkIPRangeResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network IP Range"
                ]
            }
        },
        "/iaas/api/networks": {
            "post": {
                "summary": "Create network",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Provision a new network based on the passed in constraints. The network should be destroyed after the machine is destroyed to free up resources.",
                "operationId": "createNetwork",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Network Specification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            },
            "get": {
                "summary": "Get networks",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all networks",
                "operationId": "getNetworks",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/power-on": {
            "post": {
                "summary": "Power-on operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day power-on operation for machine",
                "operationId": "powerOnMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/fabric-flavors": {
            "get": {
                "summary": "Get fabric flavors",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric flavors",
                "operationId": "getFabricFlavors",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricFlavorResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Flavors"
                ]
            }
        },
        "/iaas/api/fabric-images/{id}": {
            "get": {
                "summary": "Get fabric image",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get fabric image with a given id",
                "operationId": "getFabricImage",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricImage"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the image.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Images"
                ]
            }
        },
        "/iaas/api/cloud-accounts-nsx-t/{id}": {
            "patch": {
                "summary": "Update NSX-T cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update NSX-T cloud account",
                "operationId": "updateNsxTCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxT"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountSpecificationBase"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NSX-T cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an NSX-T cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an NSX-T cloud account with a given id",
                "operationId": "getNsxTCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxT"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete a NSX-T cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a NSX-T cloud account with a given id",
                "operationId": "deleteCloudAccountNsx-T",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-networks": {
            "get": {
                "summary": "Get fabric networks",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric networks.",
                "operationId": "getFabricNetworks",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricNetworkResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Network"
                ]
            }
        },
        "/iaas/api/fabric-azure-storage-accounts": {
            "get": {
                "summary": "Get fabric Azure storage accounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric Azure storage accounts.",
                "operationId": "getFabricAzureStorageAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricAzureStorageAccountResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Azure Storage Account"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vsphere/{id}": {
            "patch": {
                "summary": "Update vSphere cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update vSphere cloud account",
                "operationId": "updateVSphereCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphere"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "VSphere cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an vSphere cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an vSphere cloud account with a given id",
                "operationId": "getVSphereCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphere"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete a vSphere cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a vSphere Cloud Account with a given id",
                "operationId": "deleteVSphereCloudAccount",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/storage-profiles-azure/{id}": {
            "patch": {
                "summary": "Update Azure storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update Azure storage profile",
                "operationId": "updateAzureStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAzureSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get Azure storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get Azure storage profile with a given id",
                "operationId": "getAzureStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AzureStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete Azure storage profile",
                "description": "Delete Azure storage profile with a given id",
                "operationId": "deleteAzureStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/flavor-profiles/{id}": {
            "patch": {
                "summary": "Update flavor profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update flavor profile",
                "operationId": "updateFlavorProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the flavor.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateFlavorProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "FlavorProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            },
            "get": {
                "summary": "Get flavor profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get flavor profile with a given id",
                "operationId": "getFlavorProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FlavorProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the flavor.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            },
            "delete": {
                "summary": "Delete flavor profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete flavor profile with a given id",
                "operationId": "deleteFlavorProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the flavor.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavor Profile"
                ]
            }
        },
        "/iaas/api/storage-profiles-aws/{id}": {
            "patch": {
                "summary": "Update AWS storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update AWS storage profile",
                "operationId": "updateAwsStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileAwsSpecification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get AWS storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get AWS storage profile with a given id",
                "operationId": "getAwsStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/AwsStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete AWS storage profile",
                "description": "Delete AWS storage profile with a given id",
                "operationId": "deleteAwsStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/machines/{id}/network-interfaces/{id1}": {
            "get": {
                "summary": "Get machine network interface",
                "description": "Get network interface with a given id for specific machine",
                "operationId": "getMachineNetworkInterface",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkInterface"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id1",
                        "description": "The ID of the network interface.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network",
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts/{id}": {
            "patch": {
                "summary": "Update CloudAccount",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update a single CloudAccount",
                "operationId": "updateCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the cloudAccount",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get cloud account with a given id",
                "operationId": "getCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete a cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a cloud account with a given id",
                "operationId": "deleteCloudAccount",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/fabric-images": {
            "get": {
                "summary": "Get fabric images",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric images",
                "operationId": "getFabricImages",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricImageResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric Images"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/reset": {
            "post": {
                "summary": "Reset operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day reset operation for machine",
                "operationId": "resetMachine",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/cloud-accounts-aws/region-enumeration": {
            "post": {
                "summary": "Get the available regions for specified AWS cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get the available regions for specified AWS cloud account",
                "operationId": "enumerateAwsRegions",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountRegions"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAwsSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccount specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/regions": {
            "get": {
                "summary": "Get regions",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all regions",
                "operationId": "getRegions",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RegionResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Location"
                ]
            }
        },
        "/iaas/api/machines/{id}/operations/revert": {
            "post": {
                "summary": "Revert snapshot operation for machine",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Second day revert snapshot operation for machine",
                "operationId": "revertMachineSnapshot",
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of the Machine.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "Snapshot id to revert.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Compute"
                ]
            }
        },
        "/iaas/api/data-collectors": {
            "post": {
                "summary": "Create Data collector",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a new Data Collector.\n\nNote: Data collector endpoints are not available in vRA on-prem release.",
                "operationId": "createDataCollector",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/DataCollectorRegistration"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Data Collector"
                ]
            },
            "get": {
                "summary": "Get Data Collectors",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all Data Collectors.\n\nNote: Data collector endpoints are not available in vRA on-prem release.",
                "operationId": "getDataCollectors",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/DataCollectorResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "disabled",
                        "description": "If query param is provided with value equals to true, only disabled data collectors will be retrieved. ",
                        "type": "boolean",
                        "required": false
                    }
                ],
                "tags": [
                    "Data Collector"
                ]
            }
        },
        "/iaas/api/cloud-accounts-azure": {
            "post": {
                "summary": "Create an Azure cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create an Azure cloud account in the current organization",
                "operationId": "createAzureCloudAccount",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzure"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountAzure specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get Azure cloud accounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all Azure cloud accounts within the current organization",
                "operationId": "getAzureCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountAzureResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/image-profiles/{id}": {
            "patch": {
                "summary": "Update image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update image profile",
                "operationId": "updateImageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the image.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateImageProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "ImageProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            },
            "get": {
                "summary": "Get image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get image profile with a given id",
                "operationId": "getImageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ImageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the image.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            },
            "delete": {
                "summary": "Delete image profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete image profile with a given id",
                "operationId": "deleteImageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the image.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Image Profile"
                ]
            }
        },
        "/iaas/api/network-profiles": {
            "post": {
                "summary": "Create network profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create network profile",
                "operationId": "createNetworkProfile",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NetworkProfile instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            },
            "get": {
                "summary": "Get network profiles",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all network profiles",
                "operationId": "getNetworkProfiles",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NetworkProfileResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Network Profile"
                ]
            }
        },
        "/iaas/api/cloud-accounts-vsphere": {
            "post": {
                "summary": "Create a vSphere cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Create a vSphere cloud account within the current organization",
                "operationId": "createVSphereCloudAccount",
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphere"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "CloudAccountVsphere specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get vSphere cloud accounts",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all vSphere cloud accounts within the current organization",
                "operationId": "getVSphereCloudAccounts",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountVsphereResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        },
        "/iaas/api/projects/{id}": {
            "patch": {
                "summary": "Update project",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update project",
                "operationId": "updateProject",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "Project specification",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "get": {
                "summary": "Get project",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get project with a given id",
                "operationId": "getProject",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            },
            "delete": {
                "summary": "Delete project",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete project with a given id",
                "operationId": "deleteProject",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict, when the project is in use"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the project.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Project"
                ]
            }
        },
        "/iaas/api/storage-profiles-vsphere/{id}": {
            "patch": {
                "summary": "Update vSphere storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update vSphere storage profile",
                "operationId": "updateVSphereStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Request - bad data"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/StorageProfileVsphereSpecification"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "StorageProfileVsphereSpecification instance",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "get": {
                "summary": "Get vSphere storage profile",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get vSphere storage profile with a given id",
                "operationId": "getVSphereStorageProfile",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/VsphereStorageProfile"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            },
            "delete": {
                "summary": "Delete vSphere storage profile",
                "description": "Delete vSphere storage profile with a given id",
                "operationId": "deleteVSphereStorageProfile",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the storage profile.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Storage Profile"
                ]
            }
        },
        "/iaas/api/flavors": {
            "get": {
                "summary": "Get flavors",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all flavors defined in FlavorProfile",
                "operationId": "getFlavors",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FlavorResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Flavors"
                ]
            }
        },
        "/iaas/api/request-tracker/{id}": {
            "get": {
                "summary": "Get request tracker",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get request tracker with a given id",
                "operationId": "getRequestTracker",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/RequestTracker"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the request.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Request"
                ]
            },
            "delete": {
                "summary": "Delete Request",
                "description": "Delete a single Request",
                "operationId": "deleteRequest",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the request.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Request"
                ]
            }
        },
        "/iaas/api/fabric-vsphere-datastores": {
            "get": {
                "summary": "Get fabric vSphere datastores",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get all fabric vSphere datastores.",
                "operationId": "getFabricVSphereDatastores",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FabricVsphereDatastoreResult"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Fabric vSphere Datastore"
                ]
            }
        },
        "/iaas/api/cloud-accounts-nsx-v/{id}": {
            "patch": {
                "summary": "Update NSX-V cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Update NSX-V cloud account",
                "operationId": "updateNsxVCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxV"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Cloud account id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateCloudAccountSpecificationBase"
                        },
                        "in": "body",
                        "name": "body",
                        "description": "NSX-V cloud account details to be updated",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "get": {
                "summary": "Get an NSX-V cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Get an NSX-V cloud account with a given id",
                "operationId": "getNsxVCloudAccount",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/CloudAccountNsxV"
                        },
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            },
            "delete": {
                "summary": "Delete a NSV-V cloud account",
                "produces": [
                    "application/json",
                    "app/json"
                ],
                "description": "Delete a NSV-V cloud account with a given id",
                "operationId": "deleteCloudAccountNsx-V",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The ID of the Cloud Account",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "apiVersion",
                        "description": "The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /iaas/api/about",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "Cloud Account"
                ]
            }
        }
    },
    "host": "api.mgmt.cloud.vmware.com",
    "schemes": [
        "https"
    ],
    "definitions": {
        "FabricVsphereStoragePolicy": {
            "description": "Represents a structure that holds details of vSphere storage policy.**HATEOAS** links:<br>**self** - FabricVsphereStoragePolicy - Self link to this storage policy",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "Id of datacenter in which the storage policy is present.",
                    "type": "string",
                    "example": "Datacenter:datacenter-2"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "UpdateImageProfileSpecification": {
            "type": "object",
            "required": [
                "imageMapping",
                "name"
            ],
            "properties": {
                "imageMapping": {
                    "description": "Image mapping defined for the corresponding region.",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricImageDescription"
                    },
                    "type": "object",
                    "example": "{ \"ubuntu\": { \"id\": \"9e49\", \"name\": \"ami-ubuntu-16.04-1.9.1-00-1516139717\"}, \"coreos\": { \"id\": \"9e50\", \"name\": \"ami-coreos-26.04-1.9.1-00-543254235\"}}"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                }
            }
        },
        "FabricFlavor": {
            "description": "Represents a fabric flavor from the corresponding cloud end-point",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "bootDiskSizeInMB": {
                    "format": "int32",
                    "description": "Size of the boot disk (in megabytes). Not populated when inapplicable.",
                    "type": "integer",
                    "example": 486400
                },
                "memoryInMB": {
                    "format": "int64",
                    "description": "Total amount of memory (in megabytes). Not populated when inapplicable.",
                    "type": "integer",
                    "example": 15616
                },
                "name": {
                    "description": "The value of the instance type in the corresponding cloud.",
                    "type": "string",
                    "example": "i3.large"
                },
                "storageType": {
                    "description": "The type of storage supported by this instance type. Not populated when inapplicable.",
                    "type": "string",
                    "example": "NVMe_SSD"
                },
                "id": {
                    "description": "The internal identification used by the corresponding cloud end-point",
                    "type": "string",
                    "example": "i3.large"
                },
                "dataDiskSizeInMB": {
                    "format": "int32",
                    "description": "Size of the data disks (in megabytes). Not populated when inapplicable.",
                    "type": "integer",
                    "example": 486400
                },
                "dataDiskMaxCount": {
                    "format": "int32",
                    "description": "Number of data disks. Not populated when inapplicable.",
                    "type": "integer",
                    "example": 1
                },
                "networkType": {
                    "description": "The type of network supported by this instance type. Not populated when inapplicable.",
                    "type": "string",
                    "example": "Up to 10 Gigabit"
                },
                "cpuCount": {
                    "format": "int32",
                    "description": "Number of CPU cores. Not populated when inapplicable.",
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "LoadBalancerResult": {
            "description": "State object representing a query result of load balancecrs.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LoadBalancer"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FlavorProfile": {
            "description": "Represents a structure that holds flavor mappings defined for the corresponding cloud end-point region.<br>**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - FlavorProfile - Self link to this flavor profile",
            "type": "object",
            "required": [
                "_links",
                "flavorMappings",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "flavorMappings": {
                    "description": "A list of the flavor mappings defined for the corresponding cloud end-point region",
                    "$ref": "#/definitions/FlavorMapping"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "UpdateCloudAccountAwsSpecification": {
            "type": "object",
            "properties": {
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[\"us-east-1\", \"us-west-1\"]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[{\"key\": \"env\", \"value\": \"dev\"}]"
                }
            }
        },
        "DiskAttachmentSpecification": {
            "description": "Specification for attaching disk to a machine",
            "type": "object",
            "required": [
                "blockDeviceId"
            ],
            "properties": {
                "blockDeviceId": {
                    "description": "The id of the existing block device",
                    "type": "string",
                    "example": "1298765"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                }
            }
        },
        "FabricNetwork": {
            "description": "State object representing a network on a external cloud provider.<br>**HATEOAS** links:<br>**region** - Region - Region for the network.<br>**self** - FabricNetwork - Self link to this network",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this network is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "ipv6Cidr": {
                    "description": "Network IPv6 CIDR to be used.",
                    "type": "string",
                    "example": "2001:eeee:6bd:2a::1/64"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "isDefault": {
                    "description": "Indicates whether this is the default subnet for the zone.",
                    "type": "boolean"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "isPublic": {
                    "description": "Indicates whether the sub-network supports public IP assignment.",
                    "type": "boolean"
                },
                "cidr": {
                    "description": "Network CIDR to be used.",
                    "type": "string",
                    "example": "10.1.2.0/24"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "UpdateFlavorProfileSpecification": {
            "type": "object",
            "required": [
                "flavorMapping",
                "name"
            ],
            "properties": {
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "flavorMapping": {
                    "description": "Map between global fabric flavor keys <String> and fabric flavor descriptions <FabricFlavorDescription> ",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricFlavorDescription"
                    },
                    "type": "object",
                    "example": "{ \"small\": { \"name\": \"t2.small\" }, \"medium\": { \"name\": \"t2.medium\"}}, \"vSphere_small\": { \"cpuCount\": \"2\", \"memoryInMB\": \"2048\"}, \"vSphere_medium\": { \"cpuCount\": \"4\", \"memoryInMB\": \"4096\"}}"
                }
            }
        },
        "Network": {
            "description": "The network object is an opaque reference to a logical network that network interfaces are attached to.<br>\nBased on settings specified by your cloud administrator, it may be a reference to an existing network, or be backed by an on-demand network created for isolation, or a security group that will be attached to machines as part of provisioning.<br>\nNetworks are a limited resource, when it is not needed it should be deleted.<br>**HATEOAS** links:<br>**self** - Network - Self link to this network",
            "type": "object",
            "required": [
                "_links",
                "cidr",
                "externalRegionId",
                "externalZoneId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this network.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_vpc\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"awsGatewayID\" : \"igw-b9d3cedc\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "cidr": {
                    "description": "IPv4 address range of the network in CIDR format",
                    "type": "string",
                    "example": "10.10.0.0/16"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountGcpSpecification": {
            "description": "Specification for a GCP cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "clientEmail",
                "name",
                "privateKey",
                "privateKeyId",
                "projectId",
                "regionIds"
            ],
            "properties": {
                "privateKey": {
                    "description": "GCP Private key",
                    "type": "string",
                    "example": "-----BEGIN PRIVATE KEY-----\nMIICXgIHAASBgSDHikastc8+I81zCg/qWW8dMr8mqvXQ3qbPAmu0RjxoZVI47tvs\nkYlFAXOf0sPrhO2nUuooJngnHV0639iTTEYG1vckNaW2R6U5QTdQ5Rq5u+uV3pMk\n7w7Vs4n3urQ4jnqt7rTXbC1DNa/PFeAZatbf7ffBBy0IGO0zc128IshYcwIDAQAB\nAoGBALTNl2JxTvq4SDW/3VH0fZkQXWH1MM10oeMbB2qO5beWb11FGaOO77nGKfWc\nbYgfp5Ogrql2yhBvLAXnxH8bcqqwORtFhlyV68U1y4R+8WxDNh0aevxH8hRS/1X5\n963DJm1JlU0E+vStiktN0tC3ebH5hE+1OxbIHSZ+WOWLYX7JAkEA5uigRgKp8ScG\nauUijvdOLZIhHWq9y5Wz+nOHUuDw8P7wOTKU34QJAoWEe771p9Pf/GTA/kr0BQnP\nQvWUDxGzJwJBAN05C6krwPeryFKrKtjOGJIbiIoY72wRnoNcdEEs3HDRhf48YWFo\nriRbZylzzzNFy/gmzT6XJQTfktGqq+FZD9UCQGIJaGrxHJgfmpDuAhMzGsUsYtTr\niRox0D1Iqa7dhE693t5aBG010OF6MLqdZA1CXrn5SRtuVVaCSLZEL/2J5UcCQQDA\nd3MXucNnN4NPuS/L9HMYJWD7lPoosaORcgyK77bSSNgk+u9WSjbH1uYIAIPSffUZ\nbti+jc2dUg5wb+aeZlgJAkEAurrpmpqj5vg087ZngKfFGR5rozDiTsK5DceTV97K\na1Y+Nzl+XWTxDBWk4YPh2ZlKv402hZEfWBYxUDn5ZkH/bw==\n-----END PRIVATE KEY-----\n"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "clientEmail": {
                    "description": "GCP Client email",
                    "type": "string",
                    "example": "321743978432-compute@developer.gserviceaccount.com"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on. Refer to /iaas/cloud-accounts-gcp/region-enumeration.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east1\", \"northamerica-northeast1\" ]"
                },
                "projectId": {
                    "description": "GCP Project ID",
                    "type": "string",
                    "example": "example-gcp-project"
                },
                "privateKeyId": {
                    "description": "GCP Private key ID",
                    "type": "string",
                    "example": "027f73d50a19452eedf5775a9b42c5083678abdf"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "FabricVsphereDatastoreResult": {
            "description": "State object representing a query result of vSphere datastores.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricVsphereDatastore"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "LoadBalancerSpecification": {
            "description": "Load balancer configuration.",
            "type": "object",
            "required": [
                "name",
                "nics",
                "projectId",
                "routes"
            ],
            "properties": {
                "routes": {
                    "description": "The load balancer route configuration regarding ports and protocols.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RouteConfiguration"
                    }
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the load balancer.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "targetLinks": {
                    "description": "A list of links to target load balancer pool members. Links can be to either a machine or a machine's network interface.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"/iaas/machines/eac3d\" ]"
                },
                "internetFacing": {
                    "description": "An Internet-facing load balancer has a publicly resolvable DNS name, so it can route requests from clients over the Internet to the instances that are registered with the load balancer.",
                    "type": "boolean"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "nics": {
                    "description": "A set of network interface specifications for this load balancer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceSpecification"
                    }
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                }
            }
        },
        "ProjectResourceMetadataSpecification": {
            "description": "Specification for resource metadata associated with a project",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A list of keys and optional values to be applied to compute resources provisioned in a project",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "ImageMappingDescription": {
            "description": "Represents a fabric image from the corresponding cloud end-point with additional cloud configuration script that will be executed on provisioning",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "cloudConfig": {
                    "description": "Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification.",
                    "type": "string",
                    "example": "runcmd:\n  - [\"mkdir\", \"/imageFolder\"]"
                },
                "osFamily": {
                    "description": "Operating System family of the image.",
                    "type": "string",
                    "example": "linux, win"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The regionId of the image",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "isPrivate": {
                    "description": "Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library Items",
                    "type": "boolean",
                    "example": true
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"prop1\" : \"value1\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricImageResult": {
            "description": "State object representing a query result of fabric images.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricImage"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountVsphereSpecification": {
            "description": "Specification for a vSphere cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "hostName",
                "name",
                "password",
                "regionIds",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the vSphere endpoint",
                    "type": "string",
                    "example": "vc.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting to vSphere",
                    "type": "boolean",
                    "example": false
                },
                "associatedCloudAccountIds": {
                    "description": "Cloud accounts to associate with this cloud account",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of datacenter managed object reference identifiers (MoRef) to enable provisioning on. Refer to /iaas/cloud-accounts-vsphere/region-enumeration.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"Datacenter:datacenter-2\" ]"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "TagResult": {
            "description": "State object representing a query result of tags.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FabricVsphereStoragePolicyResult": {
            "description": "State object representing a query result of vSphere storage policies.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricVsphereStoragePolicy"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Project": {
            "description": "Projects link users and cloud zones, thus controlling who can use what cloud resources.<br>**HATEOAS** links:<br>**self** - Project - Self link to this project",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "operationTimeout": {
                    "format": "int64",
                    "description": "The timeout that should be used for Blueprint operations and Provisioning tasks. The timeout is in seconds",
                    "type": "integer"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "zones": {
                    "description": "List of Cloud Zones assigned to this project. You can limit deployment to a single region or allow multi-region placement by adding more than one cloud zone to a project. A cloud zone lists available resources. Use tags on resources to control workload placement.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ZoneAssignmentConfig"
                    }
                },
                "constraints": {
                    "description": "List of storage, network and extensibility constraints to be applied when provisioning through this project.",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Constraint"
                        }
                    },
                    "type": "object",
                    "example": "{\"network\":[{\"mandatory\": \"true\", \"expression\": \"env:dev\"}],\"storage\":[{\"mandatory\": \"false\", \"expression\": \"gold\"}],\"extensibility\":[{\"mandatory\": \"false\", \"expression\": \"key:value\"}]}"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "machineNamingTemplate": {
                    "description": "The naming template to be used for machines provisioned in this project",
                    "type": "string",
                    "example": "${project.name}-test-${####}"
                },
                "sharedResources": {
                    "description": "Specifies whether the resources in this projects are shared or not.",
                    "type": "boolean"
                },
                "members": {
                    "description": "List of member users associated with the project. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[ { \"email\":\"member@vmware.com\" } ]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "administrators": {
                    "description": "List of administrator users associated with the project. Only administrators can manage project's configuration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[ { \"email\":\"administrator@vmware.com\" } ]"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "Snapshot": {
            "description": "Represents a machine snapshot",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "StorageProfileAwsResult": {
            "description": "State object representing a query result of Aws storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AwsStorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FlavorResult": {
            "description": "State object representing a query result of falvor mappings.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FlavorMapping"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FabricFlavorDescription": {
            "description": "Represents fabric flavor instance type description. Used when creating flavor profiles.",
            "type": "object",
            "properties": {
                "memoryInMB": {
                    "format": "int64",
                    "description": "Total amount of memory (in megabytes). Mandatory for private clouds such as vSphere. Not populated when inapplicable.",
                    "type": "integer",
                    "example": 4096
                },
                "name": {
                    "description": "The value of the instance type in the corresponding cloud. Valid and mandatory for public clouds",
                    "type": "string",
                    "example": "t2.small, t2.medium"
                },
                "cpuCount": {
                    "format": "int32",
                    "description": "Number of CPU cores. Mandatory for private clouds such as vSphere. Not populated when inapplicable.",
                    "type": "integer",
                    "example": 4
                }
            }
        },
        "CloudAccountSpecification": {
            "description": "Specification for a generic cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "cloudAccountProperties",
                "cloudAccountType",
                "name",
                "privateKey",
                "privateKeyId",
                "regionIds"
            ],
            "properties": {
                "cloudAccountProperties": {
                    "description": "Cloud Account specific properties supplied in as name value pairs",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"supportPublicImages\": \"true\", \"acceptSelfSignedCertificate\": \"true\" }"
                },
                "privateKey": {
                    "description": "Secret access key or password to be used to authenticate with the cloud account",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "associatedCloudAccountIds": {
                    "description": "Cloud account to link with this cloud account",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the Cloud Account.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"sampleadapterProjectId\" : \"projectId\" }"
                },
                "cloudAccountType": {
                    "description": "Cloud account type",
                    "type": "string",
                    "example": "vsphere, aws, azure, nsxv, nsxt"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on.Refer to /iaas/cloud-accounts/region-enumeration.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]"
                },
                "privateKeyId": {
                    "description": "Access key id or username to be used to authenticate with the cloud account",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "StorageProfileResult": {
            "description": "State object representing a query result of storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Rule": {
            "description": "A rule used in a security group.",
            "type": "object",
            "required": [
                "access",
                "ipRangeCidr",
                "ports",
                "protocol"
            ],
            "properties": {
                "protocol": {
                    "description": "Protocol the security rule applies to.",
                    "type": "string",
                    "example": "TCP, UDP"
                },
                "access": {
                    "description": "Type of access (allow or deny) for the security rule. Traffic that does not match any rules will be denied.",
                    "type": "string",
                    "enum": [
                        "Allow",
                        "Deny"
                    ],
                    "example": "Allow"
                },
                "ipRangeCidr": {
                    "description": "IP address(es) in CIDR format which the security rule applies to.",
                    "type": "string",
                    "example": "66.170.99.2/32"
                },
                "name": {
                    "description": "Name of security rule.",
                    "type": "string",
                    "example": "5756f7e2"
                },
                "ports": {
                    "description": "Ports the security rule applies to.",
                    "type": "string",
                    "example": "443, 1-655535"
                }
            }
        },
        "StorageProfileAwsSpecification": {
            "description": "Represents a specification of AWS storage profile.",
            "type": "object",
            "required": [
                "deviceType",
                "name",
                "regionId"
            ],
            "properties": {
                "deviceType": {
                    "description": "Indicates the type of storage.",
                    "type": "string",
                    "example": "ebs / instance-store"
                },
                "volumeType": {
                    "description": "Indicates the type of volume associated with type of storage.",
                    "type": "string",
                    "example": "gp2 / io1 / sc1 / st1 / standard"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "regionId": {
                    "description": "A link to the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "iops": {
                    "description": "Indicates maximum I/O operations per second in range(1-20,000).",
                    "type": "string",
                    "example": "2000"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile is default or not.",
                    "type": "boolean",
                    "example": true
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                }
            }
        },
        "NetworkDomain": {
            "description": "The network domain object is the parent of related subnets that are configured together. Subnets within a domain must have non-overlapping address spaces.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this network domain exists.<br>**self** - NetworkDomain - Self link to this network domain",
            "type": "object",
            "required": [
                "_links",
                "cidr",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The external regionId of the network domain.",
                    "type": "string",
                    "example": "ap-northeast-2"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this network domain.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_vpc\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"awsGatewayID\" : \"igw-f9539691\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "cidr": {
                    "description": "IPv4 address range of the network domain in CIDR format",
                    "type": "string",
                    "example": "10.0.0.0/8"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountGcpResult": {
            "description": "State object representing a query result of GCP cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountGcp"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "SnapshotSpecification": {
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "snapshotMemory": {
                    "description": "Captures the full state of a running virtual machine, including the memory.",
                    "type": "boolean"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the snapshot.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccount": {
            "description": "State object representing a cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**associated-cloud-accounts** - array[CloudAccount] - Cloud accounts associated to this cloud account. For example an NSX endpoint linked to a vSphere cloud account.<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccount - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "cloudAccountProperties",
                "cloudAccountType",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "cloudAccountProperties": {
                    "description": "Cloud account specific properties",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"hostName\": \"vcenter.mycompany.com\" }"
                },
                "enabledRegionIds": {
                    "description": "A set of region names to enable provisioning on.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "cloudAccountType": {
                    "description": "Cloud account type",
                    "type": "string",
                    "example": "vsphere, aws, azure, nsxv, nsxt"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "AwsStorageProfile": {
            "description": "Defines a structure that holds list of storage policies defined for AWS for a specific region.**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - AwsStorageProfile - Self link to this aws Storage Profile",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "deviceType": {
                    "description": "Indicates the type of storage device.",
                    "type": "string",
                    "example": "ebs / instance-store"
                },
                "volumeType": {
                    "description": "Indicates the type of volume associated with type of storage device.",
                    "type": "string",
                    "example": "gp2 / io1 / sc1 / st1 / standard"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "iops": {
                    "description": "Indicates maximum I/O operations per second in range(1-20,000).",
                    "type": "string",
                    "example": "2000"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates whether this storage profile is default or not..",
                    "type": "boolean",
                    "example": false
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "Machine": {
            "description": "Represents a cloud agnostic machine.<br>**HATEOAS** links:<br>**operations** - array[String] - Supported operations for the machine.<br>**network-interfaces** - array[NetworkInterface] - Network interfaces for the machine.<br>**disks** - array[MachineDisk] - disks for the machine.<br>**deployment** - Deployment - Deployment that this machine is part of.<br>**cloud-accounts** - array[CloudAccount] - Cloud accounts where this machine is provisioned.<br>**self** - Machine - Self link to this machine",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id",
                "powerState"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "address": {
                    "description": "Primary address allocated or in use by this machine. The actual type of the address depends on the adapter type. Typically it is either the public or the external IP address.",
                    "type": "string",
                    "example": "34.242.21.5"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "powerState": {
                    "description": "Power state of machine.",
                    "type": "string",
                    "enum": [
                        "ON",
                        "OFF",
                        "GUEST_OFF",
                        "UNKNOWN",
                        "SUSPEND"
                    ],
                    "example": "ON, OFF"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"osType\" : \"LINUX\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "BlockDeviceSpecification": {
            "type": "object",
            "required": [
                "capacityInGB",
                "name",
                "projectId"
            ],
            "properties": {
                "capacityInGB": {
                    "format": "int32",
                    "description": "Capacity of the block device in GB.",
                    "type": "integer",
                    "example": 78
                },
                "sourceReference": {
                    "description": "Reference to URI using which the block device has to be created.",
                    "type": "string",
                    "example": "ami-0d4cfd66"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the block device.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"key\" : \"type\", \"value\": \"HDD\" }"
                },
                "encrypted": {
                    "description": "Indicates whether the block device should be encrypted or not.",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "diskContentBase64": {
                    "description": "Content of a disk, base64 encoded.",
                    "type": "string",
                    "example": "dGVzdA"
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                },
                "constraints": {
                    "description": "Constraints that are used to drive placement policies for the block device that is produced from this specification. Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[ { \"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"floor\": \"3rd\"} ]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"location\", \"value\": \"SOF\" } ]"
                }
            }
        },
        "CloudAccountAwsSpecification": {
            "description": "Specification for a Amazon cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "accessKeyId",
                "name",
                "regionIds",
                "secretAccessKey"
            ],
            "properties": {
                "accessKeyId": {
                    "description": "Aws Access key ID",
                    "type": "string",
                    "example": "ACDC55DB4MFH6ADG75KK"
                },
                "secretAccessKey": {
                    "description": "Aws Secret Access Key",
                    "type": "string",
                    "example": "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS"
                },
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on. Refer to /iaas/cloud-accounts-aws/region-enumeration..",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "FabricAzureStorageAccountResult": {
            "description": "State object representing a query result of Azure storage accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricAzureStorageAccount"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "RegionResult": {
            "description": "State object representing a query result of regions.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ProjectResourceMetadata": {
            "description": "Represents the resource metadata associated with a project",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A list of keys and optional values to be applied to compute resources provisioned in a project",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "NetworkSpecification": {
            "description": "Specification for a cloud network",
            "type": "object",
            "required": [
                "name",
                "projectId"
            ],
            "properties": {
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the network.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "outboundAccess": {
                    "description": "Flag to indicate if the network needs to have outbound access or not. Default is true. This field will be ignored if there is proper input for networkType customProperty",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                },
                "constraints": {
                    "description": "Constraints that are used to drive placement policies for the network that is produced from this specification, related with the network profile. Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_vpc\" } ]"
                }
            }
        },
        "NetworkDomainResult": {
            "description": "State object representing a query result of network domains.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkDomain"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FabricAzureStorageAccount": {
            "description": "Represents a structure that holds details of Azure endpoint's storage account.<br>**HATEOAS** links:<br>**region** - Region - Region for the storage account.<br>**self** - FabricAzureStorageAccount - Self link to this storage account",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "Indicates the ID of region.",
                    "type": "string",
                    "example": "westus"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "type": {
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.",
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricNetworkResult": {
            "description": "State object representing a query result of fabric networks.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricNetwork"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountNsxVSpecification": {
            "description": "Specification for an Nsx-V cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "dcid",
                "hostName",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the Nsx-T endpoint",
                    "type": "string",
                    "example": "nsxv.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting.",
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "Href": {
            "type": "object",
            "properties": {
                "hrefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "NetworkResult": {
            "description": "State object representing a query result of networks.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Network"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FlavorMapping": {
            "description": "Describes a flavor mapping between a global fabric flavor key and fabric flavor.<br>**HATEOAS** links:<br>**region** - Region - Region for the mapping.",
            "type": "object",
            "required": [
                "_links",
                "mapping"
            ],
            "properties": {
                "mapping": {
                    "description": "Flavors defined for the particular region. Keyed by global flavor key.",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricFlavor"
                    },
                    "type": "object",
                    "example": "{ \"small\": { \"name\": \"t2.small\", \"cpuCount\": \"1\", \"MemoryInMB\": \"2048\", \"storageType\": \"EBS\", \"networkType\": \"Low to Moderate\"} }"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this mapping is defined.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                }
            }
        },
        "UpdateCloudAccountAzureSpecification": {
            "type": "object",
            "properties": {
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[\"westus\", \"eastus\"]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[{\"key\": \"env\", \"value\": \"dev\"}]"
                }
            }
        },
        "AuthResponse": {
            "description": "Entity that holds auth token details.",
            "type": "object",
            "required": [
                "token",
                "tokenType"
            ],
            "properties": {
                "tokenType": {
                    "description": "Type of the token.",
                    "type": "string",
                    "example": "Bearer"
                },
                "token": {
                    "description": "Base64 encoded auth token.",
                    "type": "string"
                }
            }
        },
        "CloudAccountNsxTSpecification": {
            "description": "Specification for an Nsx-T cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "dcid",
                "hostName",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "hostName": {
                    "description": "Host name for the Nsx-T endpoint",
                    "type": "string",
                    "example": "nsxt.mycompany.com"
                },
                "acceptSelfSignedCertificate": {
                    "description": "Accept self signed certificate when connecting.",
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "description": "Password for the user used to authenticate with the cloud Account",
                    "type": "string",
                    "example": "cndhjslacd90ascdbasyoucbdh"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure. Refer to the data-collector API to create or list data collectors",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "CloudAccountNsxVResult": {
            "description": "State object representing a query result of Nsx-V cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountNsxV"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ImageMapping": {
            "description": "Describes an image mapping between image key and fabric image.<br>**HATEOAS** links:<br>**region** - Region - Region for the mapping.",
            "type": "object",
            "required": [
                "_links",
                "mapping"
            ],
            "properties": {
                "mapping": {
                    "description": "Image mapping defined for the particular region.",
                    "additionalProperties": {
                        "$ref": "#/definitions/ImageMappingDescription"
                    },
                    "type": "object",
                    "example": "{ \"ubuntu\" : {\"externalRegionId\": \"us-east-1\", \"externalId\": \"ami-2c7b5656\", \"name\": \"ami-ubuntu-16.04\", \"description\": \"instance-store - HVM - supports - UTF-8 - tools\"} }"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this mapping is defined.",
                    "type": "string",
                    "example": "us-east-1"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                }
            }
        },
        "ZoneAssignmentConfig": {
            "description": "A zone assignment configuration",
            "type": "object",
            "properties": {
                "zoneId": {
                    "description": "The Cloud Zone Id",
                    "type": "string",
                    "example": "77ee1"
                },
                "maxNumberInstances": {
                    "format": "int64",
                    "description": "The maximum number of instances that can be provisioned in this cloud zone. Default is 0 (unlimited instances).",
                    "type": "integer",
                    "example": 50
                },
                "priority": {
                    "format": "int32",
                    "description": "The priority of this zone in the current project. Lower numbers mean higher priority. Default is 0 (highest)",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "FabricFlavorResult": {
            "description": "State object representing a query result of fabric flavors.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FabricFlavor"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "StorageProfileAzureSpecification": {
            "description": "Represents a specification of Azure storage profile.",
            "type": "object",
            "required": [
                "name",
                "regionId"
            ],
            "properties": {
                "storageAccountId": {
                    "description": "Id of a storage account where in the disk is placed.",
                    "type": "string",
                    "example": "aaa82"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage policy should support encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "regionId": {
                    "description": "The If of the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage policy contains default storage properties.",
                    "type": "boolean",
                    "example": true
                },
                "diskType": {
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.",
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS"
                },
                "dataDiskCaching": {
                    "description": "Indicates the caching mechanism for additional disk. ",
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite"
                },
                "osDiskCaching": {
                    "description": "Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write.",
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite"
                },
                "tags": {
                    "description": "A set of tag keys and optional values for a storage policy which define set of specifications for creating a disk.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                }
            }
        },
        "NetworkIPRangeResult": {
            "description": "State object representing a query result of network IP range.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkIPRange"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Tag": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "value": {
                    "description": "Tag's value.",
                    "type": "string"
                },
                "key": {
                    "description": "Tag's key.",
                    "type": "string"
                }
            }
        },
        "MachineResult": {
            "description": "State object representing a query result of machines.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Machine"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountRegions": {
            "description": "State object representing a cloud account region.",
            "type": "object",
            "required": [
                "externalRegionIds"
            ],
            "properties": {
                "externalRegionIds": {
                    "description": "A set of region ids for the cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]"
                }
            }
        },
        "Constraint": {
            "description": "A constraint that is conveyed to the policy engine.",
            "type": "object",
            "required": [
                "expression",
                "mandatory"
            ],
            "properties": {
                "expression": {
                    "description": "An expression of the form \"[!]tag-key[:[tag-value]]\", used to indicate a constraint match on keys and values of tags.\n",
                    "type": "string",
                    "example": "ha:strong"
                },
                "mandatory": {
                    "description": "Indicates whether this constraint should be strictly enforced or not.",
                    "type": "boolean"
                }
            }
        },
        "RouteConfiguration": {
            "description": "Load balancer route configuration.",
            "type": "object",
            "required": [
                "memberPort",
                "memberProtocol",
                "port",
                "protocol"
            ],
            "properties": {
                "protocol": {
                    "description": "The protocol of the incoming load balancer requests.",
                    "type": "string",
                    "example": "TCP, UDP"
                },
                "port": {
                    "description": "Port which the load balancer is listening to.",
                    "type": "string",
                    "example": "80"
                },
                "memberPort": {
                    "description": "Member port where the traffic is routed to.",
                    "type": "string",
                    "example": "80"
                },
                "memberProtocol": {
                    "description": "The protocol of the member traffic.",
                    "type": "string",
                    "example": "TCP, UDP"
                },
                "healthCheckConfiguration": {
                    "description": "Health check configuration for this route configuration.",
                    "$ref": "#/definitions/HealthCheckConfiguration"
                }
            }
        },
        "ImageProfileSpecification": {
            "description": "Specification for image profile. ",
            "type": "object",
            "required": [
                "imageMapping",
                "name",
                "regionId"
            ],
            "properties": {
                "regionId": {
                    "description": "The id of the region for which this profile is created",
                    "type": "string",
                    "example": "9e49"
                },
                "imageMapping": {
                    "description": "Image mapping defined for the corresponding region.",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricImageDescription"
                    },
                    "type": "object",
                    "example": "{ \"ubuntu\": { \"id\": \"9e49\", \"name\": \"ami-ubuntu-16.04-1.9.1-00-1516139717\"}, \"coreos\": { \"id\": \"9e50\", \"name\": \"ami-coreos-26.04-1.9.1-00-543254235\"}}"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                }
            }
        },
        "CloudAccountNsxTResult": {
            "description": "State object representing a query result of Nsx-T cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountNsxT"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "MachineBootConfig": {
            "description": "Machine boot config that will be passed to the instance that can be used to perform common automated configuration tasks and even run scripts after the instance starts.",
            "type": "object",
            "properties": {
                "content": {
                    "description": "A valid cloud config data in json-escaped yaml syntax",
                    "type": "string",
                    "example": "#cloud-config\nrepo_update: true\nrepo_upgrade: all\n\npackages:\n - mysql-server\n\nruncmd:\n - sed -e '/bind-address/ s/^#*/#/' -i /etc/mysql/mysql.conf.d/mysqld.cnf\n - service mysql restart\n - mysql -e \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'mysqlpassword';\"\n - mysql -e \"FLUSH PRIVILEGES;\"\n"
                }
            }
        },
        "DeprecationPolicy": {
            "type": "object",
            "properties": {
                "deprecatedAt": {
                    "description": "The date the api was deprecated in yyyy-MM-dd format (UTC). Could be empty if the api is not deprecated.",
                    "type": "string"
                },
                "description": {
                    "description": "A free text description that contains information about why this api is deprecated and how to migrate to a newer version.",
                    "type": "string"
                },
                "expiresAt": {
                    "description": "The date the api support will be dropped in yyyy-MM-dd format (UTC). The api may still be available for use after that date but this is not guaranteed.",
                    "type": "string"
                }
            }
        },
        "FlavorProfileSpecification": {
            "description": "Specification for flavor profile",
            "type": "object",
            "required": [
                "flavorMapping",
                "name",
                "regionId"
            ],
            "properties": {
                "regionId": {
                    "description": "The id of the region for which this profile is created",
                    "type": "string",
                    "example": "9e49"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "flavorMapping": {
                    "description": "Map between global fabric flavor keys <String> and fabric flavor descriptions <FabricFlavorDescription> ",
                    "additionalProperties": {
                        "$ref": "#/definitions/FabricFlavorDescription"
                    },
                    "type": "object",
                    "example": "{ \"small\": { \"name\": \"t2.small\" }, \"medium\": { \"name\": \"t2.medium\"}}, \"vSphere_small\": { \"cpuCount\": \"2\", \"memoryInMB\": \"2048\"}, \"vSphere_medium\": { \"cpuCount\": \"4\", \"memoryInMB\": \"4096\"}}"
                }
            }
        },
        "StorageProfileVsphereSpecification": {
            "description": "Represents a specification of vSphere storage profile.",
            "type": "object",
            "required": [
                "defaultItem",
                "name",
                "regionId"
            ],
            "properties": {
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "sharesLevel": {
                    "description": "Shares are specified as High, Normal, Low or Custom and these values specify share values with a 4:2:1 ratio, respectively. ",
                    "type": "string",
                    "example": "low / normal / high / custom"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "diskMode": {
                    "description": "Type of mode for the disk",
                    "type": "string",
                    "example": "undefined / independent-persistent / independent-nonpersistent"
                },
                "storagePolicyId": {
                    "description": "Id of the vSphere Storage Policy to be applied.",
                    "type": "string",
                    "example": "6b59743af31d"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "shares": {
                    "description": "A specific number of shares assigned to each virtual machine.",
                    "type": "string",
                    "example": "2000"
                },
                "provisioningType": {
                    "description": "Type of provisioning policy for the disk.",
                    "type": "string",
                    "example": "thin / thick / eagerZeroedThick"
                },
                "regionId": {
                    "description": "The Id of the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "limitIops": {
                    "description": "The upper bound for the I/O operations per second allocated for each virtual disk.",
                    "type": "string",
                    "example": "1000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile acts as a default storage profile for a disk.",
                    "type": "boolean",
                    "example": true
                },
                "datastoreId": {
                    "description": "Id of the vSphere Datastore for placing disk and VM.",
                    "type": "string",
                    "example": "08d28"
                }
            }
        },
        "CloudAccountAwsResult": {
            "description": "State object representing a query result of Aws cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountAws"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "BlockDevice": {
            "description": "State object representing a block device.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - Cloud accounts where this disk is provisioned.<br>**self** - BlockDevice - Self link to this block device",
            "type": "object",
            "required": [
                "_links",
                "capacityInGB",
                "externalRegionId",
                "externalZoneId",
                "id",
                "status"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nebs_block\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "capacityInGB": {
                    "format": "int32",
                    "description": "Capacity of the block device in GB.",
                    "type": "integer",
                    "example": 10
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"volumeType\" : \"gp2\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "status": {
                    "description": "Status of the block device",
                    "type": "string",
                    "enum": [
                        "DETACHED",
                        "ATTACHED",
                        "AVAILABLE"
                    ],
                    "example": "ATTACHED"
                }
            }
        },
        "CloudAccountAzureSpecification": {
            "description": "Specification for a Azure cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.",
            "type": "object",
            "required": [
                "clientApplicationId",
                "clientApplicationSecretKey",
                "name",
                "regionIds",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "clientApplicationId": {
                    "description": "Azure Client Application ID",
                    "type": "string",
                    "example": "3287dd6e-76d8-41b7-9856-2584969e7739"
                },
                "clientApplicationSecretKey": {
                    "description": "Azure Client Application Secret Key",
                    "type": "string",
                    "example": "GDfdasDasdASFas321das32cas2x3dsXCSA76xdcasg="
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "tenantId": {
                    "description": "Azure Tenant ID",
                    "type": "string",
                    "example": "9a13d920-4691-4e2d-b5d5-9c4c1279bc9a"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on. Refer to /iaas/cloud-accounts-azure/region-enumeration..",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"East US\", \"North Europe\" ]"
                },
                "subscriptionId": {
                    "description": "Azure Subscribtion ID",
                    "type": "string",
                    "example": "064865b2-e914-4717-b415-8806d17948f7"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                }
            }
        },
        "FabricVsphereDatastore": {
            "description": "Represents a structure that holds details of vSphere datastore.<br>**HATEOAS** links:<br>**self** - FabricVsphereDatastore - Self link to this data store",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "freeSizeGB": {
                    "description": "Indicates free size available in datastore.",
                    "type": "string",
                    "example": "20"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "Id of datacenter in which the datastore is present.",
                    "type": "string",
                    "example": "Datacenter:datacenter-2"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "type": {
                    "description": "Type of datastore.",
                    "type": "string",
                    "example": "VMFS / NFS / StoragePod"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "ImageProfileResult": {
            "description": "State object representing a query result of image profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "UpdateCloudAccountGcpSpecification": {
            "type": "object",
            "properties": {
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[\"us-east1\", \"northamerica-northeast1\"]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[{\"key\": \"env\", \"value\": \"dev\"}]"
                }
            }
        },
        "LoadBalancer": {
            "description": "Represents a load balancer.<br>**HATEOAS** links:<br>**load-balancer-targets** - array[Machine] - List of load balancer target machines.<br>**cloud-account** - CloudAccount - Cloud account where this LB is deployed.<br>**self** - LoadBalancer - Self link to this load balancer",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "externalZoneId",
                "id",
                "routes"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "address": {
                    "description": "Primary address allocated or in use by this load balancer. The address could be an in the form of a publicly resolvable DNS name or an IP address. ",
                    "type": "string",
                    "example": "lb-123456789.eu-west-1.elb.amazonaws.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalZoneId": {
                    "description": "The external zoneId of the resource.",
                    "type": "string",
                    "example": "us-east-1a"
                },
                "externalRegionId": {
                    "description": "The external regionId of the resource",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this load balancer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "routes": {
                    "description": "The load balancer route configuration regarding ports and protocols.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RouteConfiguration"
                    }
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"property\" : \"value\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "The id of the project this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "NetworkInterface": {
            "description": "Represents a network interface.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this network domain exists.<br>**security-groups** - array[SecurityGroup] - List of security groups for this network interface.<br>**self** - NetworkInterface - Self link to this network interface",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "addresses": {
                    "description": "A list of IP addresses allocated or in use by this network interface.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"10.1.2.190\" ]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The external regionId of the network interface.",
                    "type": "string",
                    "example": "ap-northeast-2"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "deviceIndex": {
                    "format": "int32",
                    "description": "The device index of this network interface.",
                    "type": "integer",
                    "example": 1
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this network interface.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"vmware.enumeration.type\", \"value\": \"nec2_net_interface\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"awaitIp\" : \"true\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "UpdateCloudAccountSpecification": {
            "type": "object",
            "properties": {
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "associatedCloudAccountIds": {
                    "description": "Cloud accounts to link with this cloud account",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"42f3e0d199d134755684cd935435a\" ]"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the Cloud Account.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"sampleadapterProjectId\" : \"projectId\" }"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[\"us-east-1\", \"ap-northeast-1\"]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[{\"key\": \"env\", \"value\": \"dev\"}]"
                }
            }
        },
        "DataCollector": {
            "description": "State object representing a data collector.<br>The data collector is an OVA tool that contains the credentials and protocols needed to create a connection between a data collector appliance on a host vCenter and a vCenter-based cloud account.",
            "type": "object",
            "required": [
                "dcId",
                "hostName",
                "ipAddress",
                "name",
                "status"
            ],
            "properties": {
                "hostName": {
                    "description": "Data collector host name",
                    "type": "string",
                    "example": "dc1-lnd.mycompany.com"
                },
                "dcId": {
                    "description": "Data collector identifier",
                    "type": "string",
                    "example": "d5316b00-f3b8-4895-9e9a-c4b98649c2ca"
                },
                "ipAddress": {
                    "description": "Ip Address of the data collector VM",
                    "type": "string",
                    "example": "10.0.0.1"
                },
                "name": {
                    "description": "Data collector name",
                    "type": "string",
                    "example": "Datacollector1"
                },
                "status": {
                    "description": "Current status of the data collector",
                    "type": "string",
                    "example": "ACTIVE, INACTIVE"
                }
            }
        },
        "SecurityGroup": {
            "description": "State object representing a security group.<br>**HATEOAS** links:<br>**cloud-accounts** - array[CloudAccount] - List of cloud accounts where this security group exists.<br>**self** - SecurityGroup - Self link to this security group",
            "type": "object",
            "required": [
                "_links",
                "egress",
                "externalRegionId",
                "id",
                "ingress"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The external regionId of the security group.",
                    "type": "string",
                    "example": "ap-northeast-2"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "egress": {
                    "description": "List of egress security rules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "ingress": {
                    "description": "List of ingress security rules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "About": {
            "description": "State object representing an about page that includes api versioning information",
            "type": "object",
            "required": [
                "latestApiVersion",
                "supportedApis"
            ],
            "properties": {
                "supportedApis": {
                    "description": "A collection of all currently supported api versions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiDescription"
                    }
                },
                "latestApiVersion": {
                    "description": "The latest version of the API in yyyy-MM-dd format (UTC).",
                    "type": "string"
                }
            }
        },
        "StorageProfileVsphereResult": {
            "description": "State object representing a query result of vShpere storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VsphereStorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "SecurityGroupResult": {
            "description": "State object representing a query result of security groups.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecurityGroup"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ImageResult": {
            "description": "State object representing a query result of image mappings.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageMapping"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "HealthCheckConfiguration": {
            "description": "Load balancer health check configuration.",
            "type": "object",
            "required": [
                "port",
                "protocol"
            ],
            "properties": {
                "protocol": {
                    "description": "The protocol used for the health check.",
                    "type": "string",
                    "example": "HTTP, HTTPS"
                },
                "port": {
                    "description": "Port on the back-end instance machine to use for the health check.",
                    "type": "string",
                    "example": "80"
                },
                "timeoutSeconds": {
                    "format": "int32",
                    "description": "Timeout (in seconds) to wait for a response from the back-end instance.",
                    "type": "integer",
                    "example": 5
                },
                "unhealthyThreshold": {
                    "format": "int32",
                    "description": "Number of consecutive check failures before considering a particular back-end instance as unhealthy.",
                    "type": "integer",
                    "example": 5
                },
                "healthyThreshold": {
                    "format": "int32",
                    "description": "Number of consecutive successful checks before considering a particular back-end instance as healthy.",
                    "type": "integer",
                    "example": 2
                },
                "urlPath": {
                    "description": "URL path on the back-end instance against which a request will be performed for the health check. Useful when the health check protocol is HTTP/HTTPS.",
                    "type": "string",
                    "example": "/index.html"
                },
                "intervalSeconds": {
                    "format": "int32",
                    "description": "Interval (in seconds) at which the health checks will be performed.",
                    "type": "integer",
                    "example": 60
                }
            }
        },
        "CloudAccountVsphere": {
            "description": "State object representing a vSphere cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountVsphere - Self link to this cloud account.",
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "hostName": {
                    "description": "Host name for the vSphere cloud account",
                    "type": "string",
                    "example": "vc1.vmware.com"
                },
                "enabledRegionIds": {
                    "description": "A set of region names that are enabled for this  cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "Region": {
            "description": "State object representing a region in a cloud account.<br>**HATEOAS** links:<br>**cloud-account** - CloudAccount - Cloud account for the region.**self** - Region - Self link to this region",
            "type": "object",
            "required": [
                "_links",
                "externalRegionId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "Unique identifier of region on the provider side.",
                    "type": "string",
                    "example": "us-west"
                },
                "cloudAccountId": {
                    "description": "The id of the cloud account this region belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "ApiDescription": {
            "type": "object",
            "required": [
                "apiVersion",
                "documentationLink"
            ],
            "properties": {
                "apiVersion": {
                    "description": "The version of the API in yyyy-MM-dd format (UTC).",
                    "type": "string"
                },
                "deprecationPolicy": {
                    "description": "The deprecation policy may contain information whether the api is in deprecated state and when it expires.",
                    "$ref": "#/definitions/DeprecationPolicy"
                },
                "documentationLink": {
                    "description": "The link to the documentation of this api version",
                    "type": "string"
                }
            }
        },
        "FlavorProfileResult": {
            "description": "State object representing a query result of flavor profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FlavorProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "VsphereStorageProfile": {
            "description": "Defines a structure that holds storage profile details defined for vSphere for a specific region.**HATEOAS** links:<br>**datastore** - FabricVsphereDatastore - Datastore for this storage profile.<br>**storage-policy** - FabricVsphereStoragePolicy - vSphere storage policy for this storage profile.<br> **region** - Region - Region for the profile.<br>**self** - VsphereStorageProfile - Self link to this vSphere storage profile.",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile should support encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "Datacenter:datacenter-2"
                },
                "sharesLevel": {
                    "description": "Shares level are specified as High, Normal, Low or Custom.",
                    "type": "string",
                    "example": "low / normal / high / custom"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "diskMode": {
                    "description": "Type of mode for the disk",
                    "type": "string",
                    "example": "undefined / independent-persistent / independent-nonpersistent"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "shares": {
                    "description": "A specific number of shares assigned to each virtual machine.",
                    "type": "string",
                    "example": "2000"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "provisioningType": {
                    "description": "Type of format for the disk.",
                    "type": "string",
                    "example": "thin / thick / eagerZeroedThick"
                },
                "limitIops": {
                    "description": "The upper bound for the I/O operations per second allocated for each disk.",
                    "type": "string",
                    "example": "1000"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile contains default storage properties.",
                    "type": "boolean",
                    "example": false
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "RequestTrackerResult": {
            "description": "State object representing a query result of request tracker objects.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestTracker"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "User": {
            "description": "A representation of a user.",
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "description": "The email of the user.",
                    "type": "string",
                    "example": "administrator@vmware.com"
                }
            }
        },
        "CloudAccountAws": {
            "description": "State object representing a AWS cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountAws - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "accessKeyId",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "accessKeyId": {
                    "description": "Access key id for Aws.",
                    "type": "string",
                    "example": "KLIKJ7EA4PPDZR7T7Z6K"
                },
                "enabledRegionIds": {
                    "description": "A set of region names that are enabled for this  cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "StorageProfileAzureResult": {
            "description": "State object representing a query result of Azure storage profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AzureStorageProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "VolumeTypeList": {
            "type": "object",
            "properties": {
                "volumeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CloudAccountAzureResult": {
            "description": "State object representing a query result of Azure cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountAzure"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "RequestTracker": {
            "description": "An object used to track long-running operations.",
            "type": "object",
            "required": [
                "id",
                "progress",
                "selfLink",
                "status"
            ],
            "properties": {
                "name": {
                    "description": "Name of the operation.",
                    "type": "string",
                    "example": "Power-off"
                },
                "progress": {
                    "format": "int32",
                    "description": "Progress of the request as percentage.",
                    "type": "integer",
                    "example": 90
                },
                "resources": {
                    "description": "Collection of resources.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[\"/resources/i-0be3655a12fd28e8e\", \"/resources/i-0be234a15ft8det3\"]"
                },
                "id": {
                    "description": "ID of this request.",
                    "type": "string",
                    "example": "we655aew4e8e"
                },
                "message": {
                    "description": "Status message of the request.",
                    "type": "string",
                    "example": "In Progress"
                },
                "status": {
                    "description": "Status of the request.",
                    "type": "string",
                    "enum": [
                        "FINISHED",
                        "INPROGRESS",
                        "FAILED"
                    ],
                    "example": "FINISHED"
                },
                "selfLink": {
                    "description": "Self link of this request.",
                    "type": "string",
                    "example": "/.../request-tracker/we655aew4e8e"
                }
            }
        },
        "ZoneResult": {
            "description": "State object representing a query result of Zones.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Zone"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ProjectResult": {
            "description": "State object representing a query result of projects.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "StorageProfile": {
            "description": "Represents a structure that holds details of storage profile linked to a cloud zone / region.**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - StorageProfile - Self link to this storage profile.<br>**datastore** - FabricVsphereDatastore - Datastore of this storage profile.<br>**storage-policy** - FabricVsphereStoragePolicy - vSphere storage policy for this profile.<br> **storage-account** - FabricAzureStorageAccount - Azure storage account for this profile.<br>",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "diskProperties": {
                    "description": "Map of storage properties that are to be applied on disk while provisioning.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"diskProperties\": {\n                    \"provisioningType\": \"thin\",\n                    \"sharesLevel\": \"low\",\n                    \"shares\": \"500\",\n                    \"limitIops\": \"500\"\n                } }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile is default profile or not.",
                    "type": "boolean"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "MachineSpecification": {
            "description": "Specification for a cloud agnostic machine.",
            "type": "object",
            "required": [
                "flavor",
                "image",
                "imageRef",
                "name",
                "projectId"
            ],
            "properties": {
                "image": {
                    "description": "Type of image used for this machine.",
                    "type": "string",
                    "example": "vmware-gold-master, ubuntu-latest, rhel-compliant, windows"
                },
                "disks": {
                    "description": "A set of disk specifications for this machine.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DiskAttachmentSpecification"
                    }
                },
                "imageDiskConstraints": {
                    "description": "Constraints that are used to drive placement policies for the image disk. Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment:prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]"
                },
                "description": {
                    "description": "Describes machine within the scope of your organization and is not propagated to the cloud",
                    "type": "string"
                },
                "machineCount": {
                    "format": "int32",
                    "description": "Number of machines to provision - default 1.",
                    "type": "integer",
                    "example": 3
                },
                "constraints": {
                    "description": "Constraints that are used to drive placement policies for the virtual machine that is produced from this specification. Constraint expressions are matched against tags on existing placement targets.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constraint"
                    },
                    "example": "[{\"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"expression\": \"pci\"}]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "flavor": {
                    "description": "Flavor of machine instance.",
                    "type": "string",
                    "example": "small, medium, large"
                },
                "customProperties": {
                    "description": "Additional custom properties that may be used to extend the machine.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "bootConfig": {
                    "description": "A valid cloud config data in json-escaped yaml syntax",
                    "$ref": "#/definitions/MachineBootConfig"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "nics": {
                    "description": "A set of network interface controller specifications for this machine. If not specified, then a default network connection will be created.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkInterfaceSpecification"
                    }
                },
                "imageRef": {
                    "description": "Direct image reference used for this machine (name, path, location, uri, etc.). Valid if no image property is provided",
                    "type": "string",
                    "example": "ami-f6795a8c"
                },
                "projectId": {
                    "description": "The id of the project the current user belongs to.",
                    "type": "string",
                    "example": "e058"
                }
            }
        },
        "BlockDeviceResult": {
            "description": "State object representing a query result of block device.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BlockDevice"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "NetworkProfileSpecification": {
            "type": "object",
            "required": [
                "name",
                "regionId"
            ],
            "properties": {
                "fabricNetworkIds": {
                    "description": "A list of fabric network Ids which are assigned to the network profile.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"6543\" ]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the Network Profile object that is produced from this specification.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"resourcePoolId\" : \"resource-pool-1\" }"
                },
                "regionId": {
                    "description": "The Id of the region for which this profile is created",
                    "type": "string",
                    "example": "9e49"
                },
                "securityGroupIds": {
                    "description": "A list of security group Ids which are assigned to the network profile.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"6545\" ]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "isolationExternalFabricNetworkId": {
                    "description": "The Id of the fabric network used for outbound access.",
                    "type": "string",
                    "example": "1234"
                },
                "isolationType": {
                    "description": "Specifies the isolation type e.g. none, subnet or security group",
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUBNET",
                        "SECURITY_GROUP"
                    ],
                    "example": "SUBNET"
                },
                "isolatedNetworkCIDRPrefix": {
                    "format": "int32",
                    "description": "The CIDR prefix length to be used for the isolated networks that are created with the network profile.",
                    "type": "integer",
                    "example": 24
                },
                "isolationNetworkDomainCIDR": {
                    "description": "CIDR of the isolation network domain.",
                    "type": "string",
                    "example": "10.10.10.0/24"
                },
                "isolationNetworkDomainId": {
                    "description": "The Id of the network domain used for creating isolated networks.",
                    "type": "string",
                    "example": "1234"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"dev\", \"value\": \"hard\" } ]"
                }
            }
        },
        "NetworkIPRange": {
            "description": "State object representing an IP address range for a Fabric Network.<br>**HATEOAS** links:<br>**region** - Region - Region for the network.<br>**self** - NetworkIPRange - Self link to this IP address range",
            "type": "object",
            "required": [
                "_links",
                "endIPAddress",
                "id",
                "startIPAddress"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "startIPAddress": {
                    "description": "Start IP address of the range.",
                    "type": "string"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "endIPAddress": {
                    "description": "End IP address of the range.",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ipv6-range\", \"value\": \"true\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "ipVersion": {
                    "description": "IP address version: IPv4 or IPv6. Default: IPv4.",
                    "type": "string",
                    "enum": [
                        "IPv4",
                        "IPv6"
                    ]
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountResult": {
            "description": "State object representing a query result of cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccount"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CspLoginSpecification": {
            "description": "Specification for token retrieval request.",
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "description": "Refresh token obtained from the UI",
                    "type": "string",
                    "example": "5e7c2c-9a9e-4b0-9339-a7f94"
                }
            }
        },
        "FabricImageDescription": {
            "description": "Represents fabric image description. Used when creating image profiles.",
            "type": "object",
            "properties": {
                "cloudConfig": {
                    "description": "Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification.",
                    "type": "string",
                    "example": "runcmd:\n  - [\"mkdir\", \"/imageFolder\"]"
                },
                "name": {
                    "description": "Fabric image name. Valid if id not provided.",
                    "type": "string",
                    "example": "ami-ubuntu-16.04-1.9.1-00-1516139717"
                },
                "id": {
                    "description": "The id of the fabric image",
                    "type": "string",
                    "example": "9e49"
                }
            }
        },
        "NetworkIPRangeSpecification": {
            "description": "Specification for creating or updating a NetworkIPRange",
            "type": "object",
            "required": [
                "endIPAddress",
                "name",
                "startIPAddress"
            ],
            "properties": {
                "ipVersion": {
                    "description": "IP address version: IPv4 or IPv6. Default: IPv4.",
                    "type": "string",
                    "enum": [
                        "IPv4",
                        "IPv6"
                    ]
                },
                "fabricNetworkId": {
                    "description": "The Id of the parent fabric network.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "startIPAddress": {
                    "description": "Start IP address of the range.",
                    "type": "string"
                },
                "endIPAddress": {
                    "description": "End IP address of the range.",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                }
            }
        },
        "NetworkInterfaceSpecification": {
            "description": "Specification for attaching nic to machine",
            "type": "object",
            "required": [
                "networkId"
            ],
            "properties": {
                "addresses": {
                    "description": "A list of IP addresses allocated or in use by this network interface.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"10.1.2.190\" ]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"awaitIp\" : \"true\" }"
                },
                "securityGroupIds": {
                    "description": "A list of security group ids which this network interface will be assigned to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "networkId": {
                    "description": "Id of the network instance that this network interface plugs into.",
                    "type": "string",
                    "example": "dcd9"
                },
                "deviceIndex": {
                    "format": "int32",
                    "description": "The device index of this network interface.",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "CloudAccountGcp": {
            "description": "State object representing a GCP cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountGcp - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "clientEmail",
                "id",
                "privateKeyId",
                "projectId"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "enabledRegionIds": {
                    "description": "A set of region names that are enabled for this ",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east1\", \"northamerica-northeast1\" ]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "clientEmail": {
                    "description": "GCP Client email",
                    "type": "string",
                    "example": "321743978432-compute@developer.gserviceaccount.com"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "projectId": {
                    "description": "GCP Project ID",
                    "type": "string",
                    "example": "example-gcp-project"
                },
                "privateKeyId": {
                    "description": "GCP Private key ID",
                    "type": "string",
                    "example": "027f73d50a19452eedf5775a9b42c5083678abdf"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "ZoneSpecification": {
            "description": "Specification for a zone.",
            "type": "object",
            "required": [
                "name",
                "regionId"
            ],
            "properties": {
                "customProperties": {
                    "description": "A list of key value pair of properties that will  be used",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"__isDefaultPlacementZone\": \"true\"}"
                },
                "folder": {
                    "description": "The folder relative path to the datacenter where resources are deployed to. (only applicable for vSphere cloud zones)",
                    "type": "string",
                    "example": "test-folder"
                },
                "regionId": {
                    "description": "The id of the region for which this profile is created",
                    "type": "string",
                    "example": "9e49"
                },
                "tagsToMatch": {
                    "description": "A set of tag keys and optional values that will be used ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"compliance\", \"value\": \"pci\" } ]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "placementPolicy": {
                    "description": "Placement policy for the zone. One of DEFAULT, SPREAD or BINPACK.",
                    "type": "string",
                    "example": "DEFAULT"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that are effectively applied to all compute resources in this zone, but only in the context of this zone.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"production\", \"value\": \" \" } ]"
                }
            }
        },
        "UpdateCloudAccountVsphereSpecification": {
            "type": "object",
            "properties": {
                "createDefaultZones": {
                    "description": "Create default cloud zones for the enabled regions.",
                    "type": "boolean",
                    "example": true
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "regionIds": {
                    "description": "A set of Region names to enable provisioning on.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[\"Datacenter:datacenter-2\"]"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[{\"key\": \"env\", \"value\": \"dev\"}]"
                }
            }
        },
        "DataCollectorRegistration": {
            "description": "Data collector registration object.<br>The supplied data collector is an OVA tool that contains the credentials and protocols needed to create a connection between a data collector appliance on a host vCenter and a vCenter-based cloud account. . The process of deploying data collector is: <br> 1. Download the data collector ova from the \"ovaLink\".<br>2. Import the .ova file to the vCenter Server and start the installation.<br> 3. When asked for the key, copy and use the \"key\" provided.<br> 4. It takes a few minutes to detect your Data Collector after it is deployed and powered on in vCenter.",
            "type": "object",
            "required": [
                "key",
                "ovaLink"
            ],
            "properties": {
                "ovaLink": {
                    "description": "Data collector OVA Link",
                    "type": "string",
                    "example": "https://ci-data-collector.s3.amazonaws.com/VMware-Cloud-Services-Data-Collector.ova"
                },
                "key": {
                    "description": "A registration key for the data collector",
                    "type": "string",
                    "example": "eyJyZWdpc3RyYXRpb25VcmwiOiJodHRwczovL2Fw"
                }
            }
        },
        "CloudAccountVsphereResult": {
            "description": "State object representing a query result of vSphere cloud accounts.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudAccountVsphere"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Zone": {
            "description": "Description of a compute placement zone.  This can be used to specify a subset of compute resources within a region where machines can be placed.**region** - Region - Region for the zone.<br>**self** - Zone - Self link to this zone",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this placement.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"dev\", \"value\": \" \" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "A list of key value pair of properties that will  be used",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{\"__isDefaultPlacementZone\": \"true\"}"
                },
                "folder": {
                    "description": "The folder relative path to the datacenter where resources are deployed to. (only applicable for vSphere cloud zones)",
                    "type": "string",
                    "example": "test-folder"
                },
                "tagsToMatch": {
                    "description": "A set of tag keys and optional values for compute resource filtering.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"compliance\", \"value\": \"pci\" } ]"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "placementPolicy": {
                    "description": "The placement policy for the zone.",
                    "type": "string",
                    "example": "DEFAULT, SPREAD, BINPACK"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "FabricNetworkSpecification": {
            "description": "Specification for updating a FabricNetwork",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"fast-network\", \"value\": \"true\" } ]"
                }
            }
        },
        "NetworkProfileResult": {
            "description": "State object representing a query result of network profiles.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkProfile"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "ImageProfile": {
            "description": "Represents a structure that holds a list of image mappings defined for the particular region.<br>**HATEOAS** links:<br>**region** - Region - Region for the profile.<br>**self** - ImageProfile - Self link to this image profile",
            "type": "object",
            "required": [
                "_links",
                "id",
                "imageMappings"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "imageMappings": {
                    "description": "A list of the image mappings defined for the particular region",
                    "$ref": "#/definitions/ImageMapping"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "AzureStorageProfile": {
            "description": "Defines a structure that holds list of storage policies defined for Azure for a specific region.**HATEOAS** links:<br>**storage-account** - FabricAzureStorageAccount - Storage account for the profile.<br>**region** - Region - Region for the profile.<br>**self** - AzureStorageProfile - Self link to this Azure storage profile.",
            "type": "object",
            "required": [
                "_links",
                "defaultItem",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile should support encryption or not.",
                    "type": "boolean",
                    "example": false
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "uswest"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "dataDiskCaching": {
                    "description": "Indicates the caching mechanism for additional disk. ",
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile contains default storage properties.",
                    "type": "boolean",
                    "example": false
                },
                "diskType": {
                    "description": "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.",
                    "type": "string",
                    "example": "Standard_LRS / Premium_LRS"
                },
                "osDiskCaching": {
                    "description": "Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write.",
                    "type": "string",
                    "example": "None / ReadOnly / ReadWrite"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "CloudAccountNsxV": {
            "description": "State object representing an Nsx-V cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**self** - CloudAccountNsxV - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "hostName": {
                    "description": "Host name for the Nsx-V cloud account",
                    "type": "string",
                    "example": "nsxv.vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "CloudAccountNsxT": {
            "description": "State object representing an Nsx-T cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**self** - CloudAccountNsxT - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "hostName",
                "id",
                "username"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "hostName": {
                    "description": "Host name for the Nsx-T cloud account",
                    "type": "string",
                    "example": "nsxt.vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "dcid": {
                    "description": "Identifier of a data collector vm deployed in the on premise infrastructure.",
                    "type": "string",
                    "example": "23959a1e-18bc-4f0c-ac49-b5aeb4b6eef4"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "username": {
                    "description": "Username to authenticate with the cloud account",
                    "type": "string",
                    "example": "administrator@mycompany.com"
                }
            }
        },
        "NetworkProfile": {
            "description": "Represents a network Profile.<br>**HATEOAS** links:<br>**fabric-networks** - array[FabricNetwork] - Fabric networks defined in this profile.<br>**security-groups** - array[SecurityGroup] - List of security groups for this profile.<br>**network-domains** - array[NetworkDomain] - List of network domains for this profile.<br>**isolated-external-fabric-networks** - array[FabricNetwork] - Isolated external fabric networks in this profile.<br>**self** - NetowrkProfile - Self link to this network profile",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The id of the region for which this profile is defined",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "isolationNetworkDomainCIDR": {
                    "description": "CIDR of the isolation network domain.",
                    "type": "string"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on this Network Profile.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the Network Profile object.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"resourcePoolId\" : \"resource-pool-1\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "isolationType": {
                    "description": "Specifies the isolation type e.g. none, subnet or security group",
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUBNET",
                        "SECURITY_GROUP"
                    ]
                },
                "isolatedNetworkCIDRPrefix": {
                    "format": "int32",
                    "description": "The CIDR prefix length to be used for the isolated networks that are created with the network profile.",
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "ProjectSpecification": {
            "description": "Represents a specification for a project.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "machineNamingTemplate": {
                    "description": "The naming template to be used for machines provisioned in this project",
                    "type": "string",
                    "example": "${project.name}-test-${####}"
                },
                "sharedResources": {
                    "description": "Specifies whether the resources in this projects are shared or not. If not set default will be used.",
                    "type": "boolean",
                    "example": true
                },
                "operationTimeout": {
                    "format": "int64",
                    "description": "The timeout that should be used for Blueprint operations and Provisioning tasks. The timeout is in seconds",
                    "type": "integer",
                    "example": 30
                },
                "members": {
                    "description": "List of member users associated with the project. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[{ \"email\":\"member@vmware.com\" }]"
                },
                "zoneAssignmentConfigurations": {
                    "description": "List of configurations for zone assignment to a project.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ZoneAssignmentConfig"
                    }
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "constraints": {
                    "description": "List of storage, network and extensibility constraints to be applied when provisioning through this project.",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Constraint"
                        }
                    },
                    "type": "object",
                    "example": "{\"network\":[{\"mandatory\": \"true\", \"expression\": \"env:dev\"}],\"storage\":[{\"mandatory\": \"false\", \"expression\": \"gold\"}],\"extensibility\":[{\"mandatory\": \"false\", \"expression\": \"key:value\"}]}"
                },
                "administrators": {
                    "description": "List of administrator users associated with the project. Only administrators can manage project's configuration.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "example": "[{ \"email\":\"administrator@vmware.com\" }]"
                }
            }
        },
        "StorageProfileSpecification": {
            "description": "Represents a specification of generic storage profile.",
            "type": "object",
            "required": [
                "defaultItem",
                "name",
                "regionId"
            ],
            "properties": {
                "diskProperties": {
                    "description": "Map of storage properties that are to be applied on disk while provisioning.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"diskProperties\": {\n                    \"provisioningType\": \"thin\",\n                    \"sharesLevel\": \"low\",\n                    \"shares\": \"500\",\n                    \"limitIops\": \"500\"\n                } }"
                },
                "supportsEncryption": {
                    "description": "Indicates whether this storage profile supports encryption or not.",
                    "type": "boolean"
                },
                "diskTargetProperties": {
                    "description": "Map of storage placements to know where the disk is provisioned.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"diskTargetProperties\": {\n                    \"storageAccountId\": \"27dhbf7\",\n                    \"storagePolicyId\": \"7fhfj9f\",\n                    \"datastoreId\": \"638nfjd8\",\n                } }"
                },
                "regionId": {
                    "description": "The Id of the region that is associated with the storage profile.",
                    "type": "string",
                    "example": "31186"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "defaultItem": {
                    "description": "Indicates if a storage profile is a default profile.",
                    "type": "boolean"
                },
                "tags": {
                    "description": "A list of tags that represent the capabilities of this storage profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]"
                }
            }
        },
        "UpdateMachineSpecification": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Describes machine within the scope of your organization and is not propagated to the cloud",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that should be set on any resource that is produced from this specification.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"ownedBy\", \"value\": \"Rainpole\" } ]"
                }
            }
        },
        "CloudAccountAzure": {
            "description": "State object representing an Azure cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.<br>**HATEOAS** links:<br>**regions** - array[Region] - List of regions that are enabled for this cloud account.<br>**self** - CloudAccountAzure - Self link to this cloud account",
            "type": "object",
            "required": [
                "_links",
                "clientApplicationId",
                "id",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "enabledRegionIds": {
                    "description": "A set of region names that are enabled for this  cloud account.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[ \"us-east-1\", \"ap-northeast-1\" ]"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "clientApplicationId": {
                    "description": "Azure Client Application IDaccount. ",
                    "type": "string",
                    "example": "66f277f2-ff12-4c3a-a4c9-b13d131a9a4d"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "tags": {
                    "description": "A set of tag keys and optional values that were set on on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[ { \"key\" : \"env\", \"value\": \"dev\" } ]"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"isExternal\" : \"false\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "tenantId": {
                    "description": "Azure Tenant Idaccount. ",
                    "type": "string",
                    "example": "027f73d5-0a19-452e-9d45-775693421508"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "subscriptionId": {
                    "description": "Azure Subscription IDaccount. ",
                    "type": "string",
                    "example": "f3c86a85-e379-42ae-a8ba-7a51382d6dd7"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        },
        "DataCollectorResult": {
            "description": "State object representing a query result of data collectors.",
            "type": "object",
            "properties": {
                "numberOfElements": {
                    "format": "int64",
                    "description": "Number of elements in the current page",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                },
                "content": {
                    "description": "List of content items",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataCollector"
                    }
                },
                "totalElements": {
                    "format": "int64",
                    "description": "Total number of elements. In some cases the field may not be populated",
                    "readOnly": true,
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "UpdateCloudAccountSpecificationBase": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string"
                },
                "tags": {
                    "description": "A set of tag keys and optional values to set on the Cloud Account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "example": "[{\"key\": \"env\", \"value\": \"dev\"}]"
                }
            }
        },
        "FabricImage": {
            "description": "Represents a fabric image from the corresponding cloud end-point.<br>**HATEOAS** links:<br>**region** - Region - Region for the image.<br>**self** - FabricImage - Self link to this image",
            "type": "object",
            "required": [
                "_links",
                "id"
            ],
            "properties": {
                "owner": {
                    "description": "Email of the user that owns the entity.",
                    "type": "string",
                    "example": "csp@vmware.com"
                },
                "osFamily": {
                    "description": "Operating System family of the image.",
                    "type": "string",
                    "example": "linux, win"
                },
                "_links": {
                    "description": "HATEOAS of the entity",
                    "additionalProperties": {
                        "$ref": "#/definitions/Href"
                    },
                    "type": "object"
                },
                "externalRegionId": {
                    "description": "The regionId of the image",
                    "type": "string",
                    "example": "us-east-1"
                },
                "description": {
                    "description": "A human-friendly description.",
                    "type": "string",
                    "example": "my-description"
                },
                "externalId": {
                    "description": "External entity Id on the provider side.",
                    "type": "string",
                    "example": "i-cfe4-e241-e53b-756a9a2e25d2"
                },
                "isPrivate": {
                    "description": "Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library Items",
                    "type": "boolean",
                    "example": true
                },
                "orgId": {
                    "description": "The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "9e49"
                },
                "organizationId": {
                    "description": "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.",
                    "type": "string",
                    "example": "deprecated"
                },
                "createdAt": {
                    "description": "Date when the entity was created. The date is in ISO 6801 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                },
                "cloudAccountIds": {
                    "uniqueItems": true,
                    "description": "Set of ids of the cloud accounts this entity belongs to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": "[9e49]"
                },
                "customProperties": {
                    "description": "Additional properties that may be used to extend the base type.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "example": "{ \"prop1\" : \"value1\" }"
                },
                "name": {
                    "description": "A human-friendly name used as an identifier in APIs that support this option.",
                    "type": "string",
                    "example": "my-name"
                },
                "id": {
                    "description": "The id of this resource instance",
                    "type": "string",
                    "example": "9e49"
                },
                "updatedAt": {
                    "description": "Date when the entity was last updated. The date is ISO 8601 and UTC.",
                    "type": "string",
                    "example": "2012-09-27"
                }
            }
        }
    },
    "swagger": "2.0",
    "info": {
        "description": "A multi-cloud IaaS API for Cloud Automation Services",
        "title": "VMware Cloud Assembly IaaS API",
        "version": "2019-01-15"
    },
    "tags": [
        {
            "name": "About"
        },
        {
            "name": "Cloud Account"
        },
        {
            "name": "Compute"
        },
        {
            "name": "Data Collector"
        },
        {
            "name": "Disk"
        },
        {
            "name": "Fabric AWS Volume Types"
        },
        {
            "name": "Fabric Azure Storage Account"
        },
        {
            "name": "Fabric Flavors"
        },
        {
            "name": "Fabric Images"
        },
        {
            "name": "Fabric Network"
        },
        {
            "name": "Fabric vSphere Datastore"
        },
        {
            "name": "Fabric vSphere Storage Policies"
        },
        {
            "name": "Flavor Profile"
        },
        {
            "name": "Flavors"
        },
        {
            "name": "Image Profile"
        },
        {
            "name": "Images"
        },
        {
            "name": "Load Balancer"
        },
        {
            "name": "Location"
        },
        {
            "name": "Login"
        },
        {
            "name": "Network"
        },
        {
            "name": "Network IP Range"
        },
        {
            "name": "Network Profile"
        },
        {
            "name": "Project"
        },
        {
            "name": "Request"
        },
        {
            "name": "Security Group"
        },
        {
            "name": "Storage Profile"
        },
        {
            "name": "Tags"
        }
    ]
}
